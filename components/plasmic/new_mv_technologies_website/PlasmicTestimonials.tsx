// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: q8KVAm97HyX-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import TestimonialCard from "../../TestimonialCard"; // plasmic-import: OV4srBnBL7C8/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicTestimonials.module.css"; // plasmic-import: q8KVAm97HyX-/css

import Star1Icon from "./icons/PlasmicIcon__Star1"; // plasmic-import: KtBNLA_BHL9T/icon

createPlasmicElementProxy;

export type PlasmicTestimonials__VariantMembers = {
  companyTabOptions: "companyTabOptions";
};
export type PlasmicTestimonials__VariantsArgs = {
  companyTabOptions?: SingleBooleanChoiceArg<"companyTabOptions">;
};
type VariantPropType = keyof PlasmicTestimonials__VariantsArgs;
export const PlasmicTestimonials__VariantProps = new Array<VariantPropType>(
  "companyTabOptions"
);

export type PlasmicTestimonials__ArgsType = {};
type ArgPropType = keyof PlasmicTestimonials__ArgsType;
export const PlasmicTestimonials__ArgProps = new Array<ArgPropType>();

export type PlasmicTestimonials__OverridesType = {
  testimonials?: Flex__<"section">;
  sliderCarousel2?: Flex__<typeof SliderWrapper>;
  columnsFoDesktop?: Flex__<"div">;
  rating2?: Flex__<"div">;
  columnsForMobile?: Flex__<"div">;
  rating3?: Flex__<"div">;
  columnsFoDesktop2?: Flex__<"div">;
  rating4?: Flex__<"div">;
  columnsForMobile2?: Flex__<"div">;
  rating5?: Flex__<"div">;
  columnsFoDesktop3?: Flex__<"div">;
  rating6?: Flex__<"div">;
  columnsForMobile3?: Flex__<"div">;
  rating7?: Flex__<"div">;
  columnsFoDesktop4?: Flex__<"div">;
  rating8?: Flex__<"div">;
  columnsForMobile4?: Flex__<"div">;
  rating9?: Flex__<"div">;
};

export interface DefaultTestimonialsProps {
  companyTabOptions?: SingleBooleanChoiceArg<"companyTabOptions">;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicTestimonials__RenderFunc(props: {
  variants: PlasmicTestimonials__VariantsArgs;
  args: PlasmicTestimonials__ArgsType;
  overrides: PlasmicTestimonials__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "companyTabOptions",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          $props.companyTabOptions
      },
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <section
      data-plasmic-name={"testimonials"}
      data-plasmic-override={overrides.testimonials}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_vidyayatan_landing_page_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.testimonials
      )}
    >
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__xUoP9)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__gRObW
          )}
        >
          {"What People Say"}
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__ihngw
          )}
        >
          {
            '"Real stories and testimonials from those who have seen remarkable results through our expert services and solutions.'
          }
        </div>
      </Stack__>
      {(() => {
        const child$Props = {
          adaptiveHeight: hasVariant(globalVariants, "screen", "mobileOnly")
            ? false
            : undefined,
          arrows: false,
          autoplay: true,
          autoplaySpeed: hasVariant(
            $state,
            "companyTabOptions",
            "companyTabOptions"
          )
            ? 5000
            : hasVariant(globalVariants, "screen", "mobileOnly")
            ? 5000
            : 5000,
          beforeChange: generateStateOnChangePropForCodeComponents(
            $state,
            "currentSlide",
            ["sliderCarousel2", "currentSlide"],
            SliderWrapper_Helpers
          ),
          centerMode: true,
          centerPadding: "0",
          className: classNames("__wab_instance", sty.sliderCarousel2, {
            [sty.sliderCarousel2companyTabOptions]: hasVariant(
              $state,
              "companyTabOptions",
              "companyTabOptions"
            )
          }),
          cssEase: "ease",
          dots: hasVariant($state, "companyTabOptions", "companyTabOptions")
            ? false
            : undefined,
          initialSlide: generateStateValueProp($state, [
            "sliderCarousel2",
            "currentSlide"
          ]),
          pauseOnFocus: true,
          ref: ref => {
            $refs["sliderCarousel2"] = ref;
          },
          sliderScopeClassName: sty["sliderCarousel2__slider"],
          speed: hasVariant(globalVariants, "screen", "mobileOnly")
            ? 5000
            : 5000
        };
        initializeCodeComponentStates(
          $state,
          [
            {
              name: "currentSlide",
              plasmicStateName: "sliderCarousel2.currentSlide"
            }
          ],
          [],
          SliderWrapper_Helpers ?? {},
          child$Props
        );

        return (
          <SliderWrapper
            data-plasmic-name={"sliderCarousel2"}
            data-plasmic-override={overrides.sliderCarousel2}
            {...child$Props}
          >
            <TestimonialCard
              className={classNames(
                "__wab_instance",
                sty.testimonialCard__pH8NH
              )}
              slot={
                <React.Fragment>
                  <div
                    data-plasmic-name={"columnsFoDesktop"}
                    data-plasmic-override={overrides.columnsFoDesktop}
                    className={classNames(projectcss.all, sty.columnsFoDesktop)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__a4PJf)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__otG5S
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img___3WRvz)}
                          displayHeight={"64px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"64px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/anneliNelPng.png",
                            fullWidth: 576,
                            fullHeight: 576,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fbQvA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__igzgR
                            )}
                          >
                            {"Anneli Nel"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qdMmr
                            )}
                          >
                            {"CEO | Labour Link"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__km2Cg
                            )}
                          >
                            {"Limpopo, South Africa"}
                          </div>
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___1Nhi)}
                    >
                      <div
                        data-plasmic-name={"rating2"}
                        data-plasmic-override={overrides.rating2}
                        className={classNames(projectcss.all, sty.rating2)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__nKNi6)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___0EclT
                          )}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__wkVNu)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9NAfq
                          )}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___4Cmhi
                          )}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"columnsForMobile"}
                    data-plasmic-override={overrides.columnsForMobile}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columnsForMobile)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column___9O8Ie)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__kHnEw
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__twTXd)}
                          displayHeight={"48px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"48px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/anneliNelPng.png",
                            fullWidth: 576,
                            fullHeight: 576,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gjtKp
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rNn64
                            )}
                          >
                            {"Anneli Nel"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zqhQf
                            )}
                          >
                            {"CEO | Labour Link"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dyVhz
                            )}
                          >
                            {"Limpopo, South Africa"}
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"rating3"}
                        data-plasmic-override={overrides.rating3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.rating3)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__kkRk1)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__yEo4X)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__aR8Eh)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6Xk2G
                          )}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__v5PD)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </React.Fragment>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sLlDm
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Working with MV Technologies has been significantly beneficial for us. The best part about working with them is that they make sure to understand our unique challenges in South Africa for Farm Security and then work consistently to deliver to those needs. Their truly qualified team works with precision to understand our challenges and make sure we are able to overcome them. And we are absolutely thrilled to have them as our technology partner."
                  : "Working with MV Technologies has been significantly beneficial for us. The best part about working with them is that they make sure to understand our unique challenges in South Africa for Farm Security and then work consistently to deliver to those needs. Their truly qualified team works with precision to understand our challenges and make sure we are able to overcome them. And we are absolutely thrilled to have them as our technology partner."}
              </div>
            </TestimonialCard>
            <TestimonialCard
              className={classNames(
                "__wab_instance",
                sty.testimonialCard__xh8Io
              )}
              slot={
                <React.Fragment>
                  <div
                    data-plasmic-name={"columnsFoDesktop2"}
                    data-plasmic-override={overrides.columnsFoDesktop2}
                    className={classNames(
                      projectcss.all,
                      sty.columnsFoDesktop2
                    )}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__aPwBc)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__o4PF1
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__jFjlz)}
                          displayHeight={"64px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"64px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/gunaPng.png",
                            fullWidth: 332,
                            fullHeight: 332,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___6Gzlg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nlq1E
                            )}
                          >
                            {"Gunasekaran Raju"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__voNpi
                            )}
                          >
                            {"Regional Director | Innowell"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mvuUr
                            )}
                          >
                            {"Chennai, India"}
                          </div>
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__iVzH)}
                    >
                      <div
                        data-plasmic-name={"rating4"}
                        data-plasmic-override={overrides.rating4}
                        className={classNames(projectcss.all, sty.rating4)}
                      >
                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___538JC
                          )}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__u94Pa)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg___6NdH)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__n3NfR)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__fGeq2)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"columnsForMobile2"}
                    data-plasmic-override={overrides.columnsForMobile2}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.columnsForMobile2
                    )}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__lLa9E)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1Cl
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__qNjrY)}
                          displayHeight={"48px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"48px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/gunaPng.png",
                            fullWidth: 332,
                            fullHeight: 332,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jePhe
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___50D28
                            )}
                          >
                            {"Gunasekaran Raju"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zWoSe
                            )}
                          >
                            {"Regional Director | Innowell"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__o5ShG
                            )}
                          >
                            {"Chennai, India"}
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"rating5"}
                        data-plasmic-override={overrides.rating5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.rating5)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__k1Tkp)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__ntToQ)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__hkTfx)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__vajXq)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__st2Gv)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </React.Fragment>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__apvua
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "We are very pleased with the site mapping tool developed by MV Technologies for our manufacturing operations. Their SaaS solution for mapping sites, buildings, and floors has significantly streamlined our workflow and enhanced efficiency. The MV team demonstrated exceptional expertise, understanding our specific needs, and delivering a user-friendly, tailored solution that exceeded our expectations and greatly improved our facility management."
                  : "We are very pleased with the site mapping tool developed by MV Technologies for our manufacturing operations. Their SaaS solution for mapping sites, buildings, and floors has significantly streamlined our workflow and enhanced efficiency. The MV team demonstrated exceptional expertise, understanding our specific needs, and delivering a user-friendly, tailored solution that exceeded our expectations and greatly improved our facility management."}
              </div>
            </TestimonialCard>
            <TestimonialCard
              className={classNames(
                "__wab_instance",
                sty.testimonialCard__rJk3A
              )}
              slot={
                <React.Fragment>
                  <div
                    data-plasmic-name={"columnsFoDesktop3"}
                    data-plasmic-override={overrides.columnsFoDesktop3}
                    className={classNames(
                      projectcss.all,
                      sty.columnsFoDesktop3
                    )}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___0B8S8)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oDAb8
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__hgk5I)}
                          displayHeight={"64px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"64px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/hannesNelPng.png",
                            fullWidth: 358,
                            fullHeight: 358,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0BMlS
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pQoYk
                            )}
                          >
                            {"Hannes Nel"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__heYw
                            )}
                          >
                            {"CEO | Maroi Boerdery BK"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jlFsn
                            )}
                          >
                            {"Limpopo, South Africa"}
                          </div>
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column___9WDw)}
                    >
                      <div
                        data-plasmic-name={"rating6"}
                        data-plasmic-override={overrides.rating6}
                        className={classNames(projectcss.all, sty.rating6)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__qMzLs)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__h4Boc)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__lprd8)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___0FohC
                          )}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__qk8Zz)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"columnsForMobile3"}
                    data-plasmic-override={overrides.columnsForMobile3}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.columnsForMobile3
                    )}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__sOGxC)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cdB1Q
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__rTrrk)}
                          displayHeight={"48px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"48px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/hannesNelPng.png",
                            fullWidth: 358,
                            fullHeight: 358,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hjUee
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tXuXl
                            )}
                          >
                            {"Hannes Nel"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8ZbA0
                            )}
                          >
                            {"CEO | Maroi Boerdery"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yt2Lq
                            )}
                          >
                            {"Limpopo, South Africa"}
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"rating7"}
                        data-plasmic-override={overrides.rating7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.rating7)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__xpjXo)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__vf0TL)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__mtSlo)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__gHy3)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___75AFe
                          )}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </React.Fragment>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nlB
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "We are extremely pleased with the farm management solution developed by MV Technologies. Their expertise in crop planning, pest management, and block mapping has significantly improved our operations. The tools have optimized planting schedules, enhanced pest control, and bettered resource allocation. We highly recommend MV Technologies for their innovative solutions and outstanding support."
                  : "We are extremely pleased with the farm management solution developed by MV Technologies. Their expertise in crop planning, pest management, and block mapping has significantly improved our operations. The tools have optimized planting schedules, enhanced pest control, and bettered resource allocation. We highly recommend MV Technologies for their innovative solutions and outstanding support."}
              </div>
            </TestimonialCard>
            <TestimonialCard
              className={classNames(
                "__wab_instance",
                sty.testimonialCard__swBnp,
                {
                  [sty.testimonialCardcompanyTabOptions__swBnpBh8Mc]:
                    hasVariant($state, "companyTabOptions", "companyTabOptions")
                }
              )}
              slot={
                <React.Fragment>
                  <div
                    data-plasmic-name={"columnsFoDesktop4"}
                    data-plasmic-override={overrides.columnsFoDesktop4}
                    className={classNames(
                      projectcss.all,
                      sty.columnsFoDesktop4
                    )}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__hqf7A)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2Pc1U
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__modhv)}
                          displayHeight={"64px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"64px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/maheshKumarPng.png",
                            fullWidth: 214,
                            fullHeight: 214,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__i0BhD
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yxYw
                            )}
                          >
                            {"Mahesh Kumar"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dxNf0
                            )}
                          >
                            {"Digital Head | DCM Shriram"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ouUEg
                            )}
                          >
                            {"New Delhi, India"}
                          </div>
                        </div>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__tyW4M)}
                    >
                      <div
                        data-plasmic-name={"rating8"}
                        data-plasmic-override={overrides.rating8}
                        className={classNames(projectcss.all, sty.rating8)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__q4VmH)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__x52Hq)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__eQpvq)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__zAo07)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__u4DTr)}
                          role={"img"}
                        />
                      </div>
                    </div>
                  </div>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"columnsForMobile4"}
                    data-plasmic-override={overrides.columnsForMobile4}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.columnsForMobile4
                    )}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.column__viPtc)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cKTz
                        )}
                      >
                        <PlasmicImg__
                          alt={""}
                          className={classNames(sty.img__c2MXo)}
                          displayHeight={"48px"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"48px"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/new_mv_technologies_website/images/maheshKumarPng.png",
                            fullWidth: 214,
                            fullHeight: 214,
                            aspectRatio: undefined
                          }}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__hXjfS
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kHtuv
                            )}
                          >
                            {"Mahesh Kumar"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tEpAu
                            )}
                          >
                            {"Digital Head | DCM Shriram"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pfpck
                            )}
                          >
                            {"New Delhi, India"}
                          </div>
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"rating9"}
                        data-plasmic-override={overrides.rating9}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.rating9)}
                      >
                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__xu8HT)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__wBhWb)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__i5Dd6)}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___6Rmni
                          )}
                          role={"img"}
                        />

                        <Star1Icon
                          className={classNames(projectcss.all, sty.svg__vELfv)}
                          role={"img"}
                        />
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </React.Fragment>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2W5Sf
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "MV Technology\u2019s solutions have significantly improved our ability to manage and monitor field activities, they help us gain real-time data that improves our decision-making processes. This has allowed our farm managers to streamline operations, optimize resource use, and increase farm\u2019s overall productivity. With their solutions Field Visitors now have access to accurate and up-to-date information, which made their tasks more efficient."
                  : "MV Technology\u2019s solutions have significantly improved our ability to manage and monitor field activities, they help us gain real-time data that improves our decision-making processes. This has allowed our farm managers to streamline operations, optimize resource use, and increase farm\u2019s overall productivity. With their solutions Field Visitors now have access to accurate and up-to-date information, which made their tasks more efficient."}
              </div>
            </TestimonialCard>
          </SliderWrapper>
        );
      })()}
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  testimonials: [
    "testimonials",
    "sliderCarousel2",
    "columnsFoDesktop",
    "rating2",
    "columnsForMobile",
    "rating3",
    "columnsFoDesktop2",
    "rating4",
    "columnsForMobile2",
    "rating5",
    "columnsFoDesktop3",
    "rating6",
    "columnsForMobile3",
    "rating7",
    "columnsFoDesktop4",
    "rating8",
    "columnsForMobile4",
    "rating9"
  ],
  sliderCarousel2: [
    "sliderCarousel2",
    "columnsFoDesktop",
    "rating2",
    "columnsForMobile",
    "rating3",
    "columnsFoDesktop2",
    "rating4",
    "columnsForMobile2",
    "rating5",
    "columnsFoDesktop3",
    "rating6",
    "columnsForMobile3",
    "rating7",
    "columnsFoDesktop4",
    "rating8",
    "columnsForMobile4",
    "rating9"
  ],
  columnsFoDesktop: ["columnsFoDesktop", "rating2"],
  rating2: ["rating2"],
  columnsForMobile: ["columnsForMobile", "rating3"],
  rating3: ["rating3"],
  columnsFoDesktop2: ["columnsFoDesktop2", "rating4"],
  rating4: ["rating4"],
  columnsForMobile2: ["columnsForMobile2", "rating5"],
  rating5: ["rating5"],
  columnsFoDesktop3: ["columnsFoDesktop3", "rating6"],
  rating6: ["rating6"],
  columnsForMobile3: ["columnsForMobile3", "rating7"],
  rating7: ["rating7"],
  columnsFoDesktop4: ["columnsFoDesktop4", "rating8"],
  rating8: ["rating8"],
  columnsForMobile4: ["columnsForMobile4", "rating9"],
  rating9: ["rating9"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  testimonials: "section";
  sliderCarousel2: typeof SliderWrapper;
  columnsFoDesktop: "div";
  rating2: "div";
  columnsForMobile: "div";
  rating3: "div";
  columnsFoDesktop2: "div";
  rating4: "div";
  columnsForMobile2: "div";
  rating5: "div";
  columnsFoDesktop3: "div";
  rating6: "div";
  columnsForMobile3: "div";
  rating7: "div";
  columnsFoDesktop4: "div";
  rating8: "div";
  columnsForMobile4: "div";
  rating9: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicTestimonials__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicTestimonials__VariantsArgs;
    args?: PlasmicTestimonials__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicTestimonials__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicTestimonials__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicTestimonials__ArgProps,
          internalVariantPropNames: PlasmicTestimonials__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicTestimonials__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "testimonials") {
    func.displayName = "PlasmicTestimonials";
  } else {
    func.displayName = `PlasmicTestimonials.${nodeName}`;
  }
  return func;
}

export const PlasmicTestimonials = Object.assign(
  // Top-level PlasmicTestimonials renders the root element
  makeNodeComponent("testimonials"),
  {
    // Helper components rendering sub-elements
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    columnsFoDesktop: makeNodeComponent("columnsFoDesktop"),
    rating2: makeNodeComponent("rating2"),
    columnsForMobile: makeNodeComponent("columnsForMobile"),
    rating3: makeNodeComponent("rating3"),
    columnsFoDesktop2: makeNodeComponent("columnsFoDesktop2"),
    rating4: makeNodeComponent("rating4"),
    columnsForMobile2: makeNodeComponent("columnsForMobile2"),
    rating5: makeNodeComponent("rating5"),
    columnsFoDesktop3: makeNodeComponent("columnsFoDesktop3"),
    rating6: makeNodeComponent("rating6"),
    columnsForMobile3: makeNodeComponent("columnsForMobile3"),
    rating7: makeNodeComponent("rating7"),
    columnsFoDesktop4: makeNodeComponent("columnsFoDesktop4"),
    rating8: makeNodeComponent("rating8"),
    columnsForMobile4: makeNodeComponent("columnsForMobile4"),
    rating9: makeNodeComponent("rating9"),

    // Metadata about props expected for PlasmicTestimonials
    internalVariantProps: PlasmicTestimonials__VariantProps,
    internalArgProps: PlasmicTestimonials__ArgProps
  }
);

export default PlasmicTestimonials;
/* prettier-ignore-end */

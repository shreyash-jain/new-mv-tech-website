// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: MUH5sO8fvVYY

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicOurVision.module.css"; // plasmic-import: MUH5sO8fvVYY/css

import GroupIcon from "./icons/PlasmicIcon__Group"; // plasmic-import: 4U_L7Dtkuzuq/icon
import FrameIcon from "./icons/PlasmicIcon__Frame"; // plasmic-import: N64XRDanG7jJ/icon
import Frame2Icon from "./icons/PlasmicIcon__Frame2"; // plasmic-import: CUoUM4FwIhNV/icon
import Frame3Icon from "./icons/PlasmicIcon__Frame3"; // plasmic-import: hO4iXLOw33nf/icon

createPlasmicElementProxy;

export type PlasmicOurVision__VariantMembers = {};
export type PlasmicOurVision__VariantsArgs = {};
type VariantPropType = keyof PlasmicOurVision__VariantsArgs;
export const PlasmicOurVision__VariantProps = new Array<VariantPropType>();

export type PlasmicOurVision__ArgsType = {};
type ArgPropType = keyof PlasmicOurVision__ArgsType;
export const PlasmicOurVision__ArgProps = new Array<ArgPropType>();

export type PlasmicOurVision__OverridesType = {
  whyPartnerWithUsSection?: Flex__<"section">;
  vision2?: Flex__<"div">;
  freeBox?: Flex__<"div">;
  qualityProducts?: Flex__<"div">;
  frame427319326?: Flex__<"div">;
  nounQuality69600691?: Flex__<"div">;
  frame427319327?: Flex__<"div">;
  stateOfTheArtTechnologies?: Flex__<"div">;
  frame427319328?: Flex__<"div">;
  frame427319329?: Flex__<"div">;
  customerSupport?: Flex__<"div">;
  frame427319330?: Flex__<"div">;
  frame427319331?: Flex__<"div">;
  onTimeMaintenance?: Flex__<"div">;
  frame427319332?: Flex__<"div">;
  frame427319333?: Flex__<"div">;
};

export interface DefaultOurVisionProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicOurVision__RenderFunc(props: {
  variants: PlasmicOurVision__VariantsArgs;
  args: PlasmicOurVision__ArgsType;
  overrides: PlasmicOurVision__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <section
      data-plasmic-name={"whyPartnerWithUsSection"}
      data-plasmic-override={overrides.whyPartnerWithUsSection}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_vidyayatan_landing_page_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.whyPartnerWithUsSection
      )}
    >
      <Stack__
        as={"div"}
        data-plasmic-name={"vision2"}
        data-plasmic-override={overrides.vision2}
        hasGap={true}
        className={classNames(projectcss.all, sty.vision2)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.column__jlqta)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ura0
              )}
            >
              {"Our Vision"}
            </div>
          </Stack__>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__iwQMt
            )}
          >
            {
              "Our vision is to create groundbreaking technologies that empower enterprises and industries to thrive in the digital age of Industry 4.0.\n\nThrough our expertise in Big Data, IoT, Cloud, and AI/ML, we aim to be the go-to tech partner for Smart Industries, Manufacturing, EVs, Smart Homes, and more."
            }
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.column__yWtid)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"qualityProducts"}
            data-plasmic-override={overrides.qualityProducts}
            hasGap={true}
            className={classNames(projectcss.all, sty.qualityProducts)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319326"}
              data-plasmic-override={overrides.frame427319326}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319326)}
            >
              <div
                data-plasmic-name={"nounQuality69600691"}
                data-plasmic-override={overrides.nounQuality69600691}
                className={classNames(projectcss.all, sty.nounQuality69600691)}
              >
                <GroupIcon
                  className={classNames(projectcss.all, sty.svg__qa13U)}
                  role={"img"}
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319327"}
              data-plasmic-override={overrides.frame427319327}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319327)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tb4P
                )}
              >
                {"Unmatched Quality"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hErrm
                )}
              >
                {"Delivering reliable and high-performing software solutions."}
              </div>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"stateOfTheArtTechnologies"}
            data-plasmic-override={overrides.stateOfTheArtTechnologies}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.stateOfTheArtTechnologies
            )}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319328"}
              data-plasmic-override={overrides.frame427319328}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319328)}
            >
              <FrameIcon
                className={classNames(projectcss.all, sty.svg__bahfk)}
                role={"img"}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319329"}
              data-plasmic-override={overrides.frame427319329}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319329)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2M94U
                )}
              >
                {"State of the art technologies"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xvIbC
                )}
              >
                {"Leveraging Machine Learning, LLMs, and IoT for innovation."}
              </div>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"customerSupport"}
            data-plasmic-override={overrides.customerSupport}
            hasGap={true}
            className={classNames(projectcss.all, sty.customerSupport)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319330"}
              data-plasmic-override={overrides.frame427319330}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319330)}
            >
              <Frame2Icon
                className={classNames(projectcss.all, sty.svg__liJx3)}
                role={"img"}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319331"}
              data-plasmic-override={overrides.frame427319331}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319331)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cs2FV
                )}
              >
                {"Reliable Customer Support"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__k3ZWp
                )}
              >
                {"Providing responsive and dependable customer service."}
              </div>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"onTimeMaintenance"}
            data-plasmic-override={overrides.onTimeMaintenance}
            hasGap={true}
            className={classNames(projectcss.all, sty.onTimeMaintenance)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319332"}
              data-plasmic-override={overrides.frame427319332}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319332)}
            >
              <Frame3Icon
                className={classNames(projectcss.all, sty.svg__pIkh6)}
                role={"img"}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame427319333"}
              data-plasmic-override={overrides.frame427319333}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame427319333)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lB2Bg
                )}
              >
                {"Timely Maintenance"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pKsIt
                )}
              >
                {
                  "Ensuring your systems are always up-to-date and running smoothly."
                }
              </div>
            </Stack__>
          </Stack__>
        </Stack__>
      </Stack__>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  whyPartnerWithUsSection: [
    "whyPartnerWithUsSection",
    "vision2",
    "freeBox",
    "qualityProducts",
    "frame427319326",
    "nounQuality69600691",
    "frame427319327",
    "stateOfTheArtTechnologies",
    "frame427319328",
    "frame427319329",
    "customerSupport",
    "frame427319330",
    "frame427319331",
    "onTimeMaintenance",
    "frame427319332",
    "frame427319333"
  ],
  vision2: [
    "vision2",
    "freeBox",
    "qualityProducts",
    "frame427319326",
    "nounQuality69600691",
    "frame427319327",
    "stateOfTheArtTechnologies",
    "frame427319328",
    "frame427319329",
    "customerSupport",
    "frame427319330",
    "frame427319331",
    "onTimeMaintenance",
    "frame427319332",
    "frame427319333"
  ],
  freeBox: ["freeBox"],
  qualityProducts: [
    "qualityProducts",
    "frame427319326",
    "nounQuality69600691",
    "frame427319327"
  ],
  frame427319326: ["frame427319326", "nounQuality69600691"],
  nounQuality69600691: ["nounQuality69600691"],
  frame427319327: ["frame427319327"],
  stateOfTheArtTechnologies: [
    "stateOfTheArtTechnologies",
    "frame427319328",
    "frame427319329"
  ],
  frame427319328: ["frame427319328"],
  frame427319329: ["frame427319329"],
  customerSupport: ["customerSupport", "frame427319330", "frame427319331"],
  frame427319330: ["frame427319330"],
  frame427319331: ["frame427319331"],
  onTimeMaintenance: ["onTimeMaintenance", "frame427319332", "frame427319333"],
  frame427319332: ["frame427319332"],
  frame427319333: ["frame427319333"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  whyPartnerWithUsSection: "section";
  vision2: "div";
  freeBox: "div";
  qualityProducts: "div";
  frame427319326: "div";
  nounQuality69600691: "div";
  frame427319327: "div";
  stateOfTheArtTechnologies: "div";
  frame427319328: "div";
  frame427319329: "div";
  customerSupport: "div";
  frame427319330: "div";
  frame427319331: "div";
  onTimeMaintenance: "div";
  frame427319332: "div";
  frame427319333: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicOurVision__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicOurVision__VariantsArgs;
    args?: PlasmicOurVision__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicOurVision__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicOurVision__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicOurVision__ArgProps,
          internalVariantPropNames: PlasmicOurVision__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicOurVision__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "whyPartnerWithUsSection") {
    func.displayName = "PlasmicOurVision";
  } else {
    func.displayName = `PlasmicOurVision.${nodeName}`;
  }
  return func;
}

export const PlasmicOurVision = Object.assign(
  // Top-level PlasmicOurVision renders the root element
  makeNodeComponent("whyPartnerWithUsSection"),
  {
    // Helper components rendering sub-elements
    vision2: makeNodeComponent("vision2"),
    freeBox: makeNodeComponent("freeBox"),
    qualityProducts: makeNodeComponent("qualityProducts"),
    frame427319326: makeNodeComponent("frame427319326"),
    nounQuality69600691: makeNodeComponent("nounQuality69600691"),
    frame427319327: makeNodeComponent("frame427319327"),
    stateOfTheArtTechnologies: makeNodeComponent("stateOfTheArtTechnologies"),
    frame427319328: makeNodeComponent("frame427319328"),
    frame427319329: makeNodeComponent("frame427319329"),
    customerSupport: makeNodeComponent("customerSupport"),
    frame427319330: makeNodeComponent("frame427319330"),
    frame427319331: makeNodeComponent("frame427319331"),
    onTimeMaintenance: makeNodeComponent("onTimeMaintenance"),
    frame427319332: makeNodeComponent("frame427319332"),
    frame427319333: makeNodeComponent("frame427319333"),

    // Metadata about props expected for PlasmicOurVision
    internalVariantProps: PlasmicOurVision__VariantProps,
    internalArgProps: PlasmicOurVision__ArgProps
  }
);

export default PlasmicOurVision;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: O1lXeePqnedA

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import Button2 from "../../Button2"; // plasmic-import: iFFcBUnvZUl0/component
import CaseStudiesSection from "../../CaseStudiesSection"; // plasmic-import: 8UZVGOKdExLM/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component
import Testimonials from "../../Testimonials"; // plasmic-import: q8KVAm97HyX-/component
import FaqSection from "../../FaqSection"; // plasmic-import: BSnSueyvgk6P/component
import ConnectWithUs from "../../ConnectWithUs"; // plasmic-import: w9fJfCJ45KHV/component
import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicBharatPeCaseStudy.module.css"; // plasmic-import: O1lXeePqnedA/css

import Frame15Icon from "./icons/PlasmicIcon__Frame15"; // plasmic-import: YQCNU9xil-Ab/icon
import Frame24Icon from "./icons/PlasmicIcon__Frame24"; // plasmic-import: PYD8IjXZxJnA/icon
import Frame34Icon from "./icons/PlasmicIcon__Frame34"; // plasmic-import: SzohbHgr1-om/icon
import Frame33Icon from "./icons/PlasmicIcon__Frame33"; // plasmic-import: AYJgwKYPdbx0/icon
import Frame55Icon from "./icons/PlasmicIcon__Frame55"; // plasmic-import: QSO5mDHHHMUu/icon
import Frame5Icon from "./icons/PlasmicIcon__Frame5"; // plasmic-import: jElqlrDEH9Gg/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tSFoGfIVWAwT/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: FoPRmBUdi-FM/icon
import Frame53Icon from "./icons/PlasmicIcon__Frame53"; // plasmic-import: Aalt8xkuCPcf/icon
import Frame14Icon from "./icons/PlasmicIcon__Frame14"; // plasmic-import: xTAdjC1CrvhS/icon

createPlasmicElementProxy;

export type PlasmicBharatPeCaseStudy__VariantMembers = {};
export type PlasmicBharatPeCaseStudy__VariantsArgs = {};
type VariantPropType = keyof PlasmicBharatPeCaseStudy__VariantsArgs;
export const PlasmicBharatPeCaseStudy__VariantProps =
  new Array<VariantPropType>();

export type PlasmicBharatPeCaseStudy__ArgsType = {
  q12?: React.ReactNode;
  q13?: React.ReactNode;
  q15?: React.ReactNode;
  q17?: React.ReactNode;
};
type ArgPropType = keyof PlasmicBharatPeCaseStudy__ArgsType;
export const PlasmicBharatPeCaseStudy__ArgProps = new Array<ArgPropType>(
  "q12",
  "q13",
  "q15",
  "q17"
);

export type PlasmicBharatPeCaseStudy__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"section">;
  trustedBy?: Flex__<"section">;
  whyChooseVidyayatan?: Flex__<"section">;
  qualityProducts?: Flex__<"div">;
  frame427319326?: Flex__<"div">;
  frame427319327?: Flex__<"div">;
  qualityProducts2?: Flex__<"div">;
  frame427319334?: Flex__<"div">;
  frame427319335?: Flex__<"div">;
  qualityProducts3?: Flex__<"div">;
  frame427319336?: Flex__<"div">;
  frame427319337?: Flex__<"div">;
  whyVidyayatan?: Flex__<"section">;
  q1?: Flex__<"div">;
  q14?: Flex__<"div">;
  q16?: Flex__<"div">;
  q18?: Flex__<"div">;
  convertSection?: Flex__<"section">;
  devOpsUseCases?: Flex__<"section">;
  line?: Flex__<"div">;
  frame1000000975?: Flex__<"div">;
  frame427319348?: Flex__<"div">;
  line2?: Flex__<"div">;
  frame1000000977?: Flex__<"div">;
  frame427319349?: Flex__<"div">;
  line3?: Flex__<"div">;
  frame1000000979?: Flex__<"div">;
  frame427319330?: Flex__<"div">;
  line4?: Flex__<"div">;
  frame1000000984?: Flex__<"div">;
  frame427319331?: Flex__<"div">;
  line5?: Flex__<"div">;
  frame1000000987?: Flex__<"div">;
  frame427319332?: Flex__<"div">;
  caseStudiesSection?: Flex__<typeof CaseStudiesSection>;
  whyChooseVidyayatan2?: Flex__<"section">;
  qualityProducts4?: Flex__<"div">;
  frame427319338?: Flex__<"div">;
  frame427319339?: Flex__<"div">;
  qualityProducts5?: Flex__<"div">;
  frame427319340?: Flex__<"div">;
  frame427319341?: Flex__<"div">;
  qualityProducts6?: Flex__<"div">;
  frame427319342?: Flex__<"div">;
  frame427319343?: Flex__<"div">;
  navHeader?: Flex__<typeof NavHeader>;
  testimonials?: Flex__<typeof Testimonials>;
  faqSection?: Flex__<typeof FaqSection>;
  connectWithUs?: Flex__<typeof ConnectWithUs>;
  navFooter?: Flex__<typeof NavFooter>;
};

export interface DefaultBharatPeCaseStudyProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBharatPeCaseStudy__RenderFunc(props: {
  variants: PlasmicBharatPeCaseStudy__VariantsArgs;
  args: PlasmicBharatPeCaseStudy__ArgsType;
  overrides: PlasmicBharatPeCaseStudy__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
          onScroll={async event => {
            const $steps = {};
          }}
        >
          <section
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__sCAi)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___7Remb)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gbHox)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nglDx
                    )}
                  >
                    {"Enhancing BharatPe's Fintech with Innovative Solutions"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__asVk
                    )}
                  >
                    {
                      "Transforming BharatPe's fintech ecosystem with cutting-edge solutions, optimizing payment processes, enhancing scalability, and delivering seamless, secure financial experiences for merchants across India."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__dvXuv)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__wNwcy)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/image49.png",
                    fullWidth: 2000,
                    fullHeight: 2000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"trustedBy"}
            data-plasmic-override={overrides.trustedBy}
            className={classNames(projectcss.all, sty.trustedBy)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hPgmJ)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2Nd89
                )}
              >
                {"Trusted by"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__b30K9)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__kgTfZ)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___62FUj)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jgiUi)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/labourLinkLogo1Png2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___030Ne)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ouTfh)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__t6FFu)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__p7ET)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "28px"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__pWYz)}>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__iZkKb)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__t91Ry)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___0BQLb)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__v1FN7)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng3.png",
                        fullWidth: 1116,
                        fullHeight: 192,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__hJQiq)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___3LdOd)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__miGdo)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__iUbR)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__lQOc2)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___5A5Ah)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyChooseVidyayatan"}
            data-plasmic-override={overrides.whyChooseVidyayatan}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pdEcw)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___4URYe
                )}
              >
                {"Streamlined DevOps for Greater Efficiency"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nJBzS
                )}
              >
                {
                  "DevOps combines development and IT operations to streamline workflows and encourage collaboration. By automating tasks and eliminating barriers, businesses can speed up delivery, enhance teamwork, and make better use of resources."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__nuMeV)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__mr3Ds)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts"}
                  data-plasmic-override={overrides.qualityProducts}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319326"}
                    data-plasmic-override={overrides.frame427319326}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319326)}
                  >
                    <Frame15Icon
                      className={classNames(projectcss.all, sty.svg__ffOd0)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319327"}
                    data-plasmic-override={overrides.frame427319327}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319327)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dTpaY
                      )}
                    >
                      {"Optimized Workflows"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aPBrZ
                      )}
                    >
                      {
                        "Automate your development, testing, and deployment processes to minimize manual errors and accelerate delivery."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts2"}
                  data-plasmic-override={overrides.qualityProducts2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319334"}
                    data-plasmic-override={overrides.frame427319334}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319334)}
                  >
                    <Frame24Icon
                      className={classNames(projectcss.all, sty.svg__vgLX)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319335"}
                    data-plasmic-override={overrides.frame427319335}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319335)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4YrIb
                      )}
                    >
                      {"Enhanced Team Collaboration"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f5Df
                      )}
                    >
                      {
                        "Eliminate barriers between development, operations, and other teams to promote a collaborative and innovative work environment."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts3"}
                  data-plasmic-override={overrides.qualityProducts3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319336"}
                    data-plasmic-override={overrides.frame427319336}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319336)}
                  >
                    <Frame34Icon
                      className={classNames(projectcss.all, sty.svg___0Rgtg)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319337"}
                    data-plasmic-override={overrides.frame427319337}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319337)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4KgDz
                      )}
                    >
                      {"Maximised Efficiency"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__omEt7
                      )}
                    >
                      {
                        "Take a proactive stance to extend your software's lifespan and ensure it stays aligned with evolving business demands and technological advancements."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column___8GTe)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___1Imfz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/image50.png",
                    fullWidth: 2600,
                    fullHeight: 2000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyVidyayatan"}
            data-plasmic-override={overrides.whyVidyayatan}
            className={classNames(projectcss.all, sty.whyVidyayatan)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ysuaV
              )}
            >
              {"Software Maintenance Services"}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2UDx3)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___70Ec7
                )}
              >
                {"Maximised Value in DevOps Engineering"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__a8ASs
                )}
              >
                {
                  "Our bespoke DevOps services offer superior value by refining software development and infrastructure management. Enjoy improved agility, robust resilience, and scalable growth, setting the stage for accelerated progress."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__s9BBg)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__a0Ku)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q1"}
                  data-plasmic-override={overrides.q1}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q1)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame33Icon
                        className={classNames(projectcss.all, sty.svg___2WZx)}
                        role={"img"}
                      />
                    ),

                    value: args.q12
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gbzwU)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aBak3
                    )}
                  >
                    {"Rapid Response and Flexibility"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___20RwQ
                    )}
                  >
                    {
                      "Swiftly adapt to market shifts and capitalize on innovation opportunities."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__byHdd)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q14"}
                  data-plasmic-override={overrides.q14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q14)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame55Icon
                        className={classNames(projectcss.all, sty.svg__uQoHc)}
                        role={"img"}
                      />
                    ),

                    value: args.q13
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zUYt4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__giKa9
                    )}
                  >
                    {"Robust Continuity"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mvBlH
                    )}
                  >
                    {
                      "Create strong systems capable of withstanding disruptions and maintaining consistent operations."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__zhclO)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q16"}
                  data-plasmic-override={overrides.q16}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q16)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame5Icon
                        className={classNames(projectcss.all, sty.svg__rvyu6)}
                        role={"img"}
                      />
                    ),

                    value: args.q15
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iejN)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__klCe7
                    )}
                  >
                    {"Adaptive Scalability"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sNcjo
                    )}
                  >
                    {
                      "Expand or contract resources in response to business needs, maximizing efficiency and controlling costs."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__cftS2)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q18"}
                  data-plasmic-override={overrides.q18}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q18)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame5Icon
                        className={classNames(projectcss.all, sty.svg___1L3On)}
                        role={"img"}
                      />
                    ),

                    value: args.q17
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kd6Hu)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h5Zru
                    )}
                  >
                    {"Boost Innovation"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__usKxi
                    )}
                  >
                    {
                      "Establish an environment of constant experimentation and refinement to accelerate innovation and stay ahead of industry trends."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"convertSection"}
            data-plasmic-override={overrides.convertSection}
            className={classNames(projectcss.all, sty.convertSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__wnBc8)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fcKcY
                )}
              >
                {"Seeking Optimal Value in DevOps Development?"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__bCyEr)}
            >
              <div className={classNames(projectcss.all, sty.column___0WjP5)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__oivBo)}
                  color={"white"}
                  shape={"rounded"}
                >
                  {"View Pricing"}
                </Button2>
              </div>
              <div className={classNames(projectcss.all, sty.column__raK8F)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__qBmU0)}
                  color={undefined}
                  shape={"rounded"}
                  showEndIcon={true}
                >
                  {"Book Meeting"}
                </Button2>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"devOpsUseCases"}
            data-plasmic-override={overrides.devOpsUseCases}
            className={classNames(projectcss.all, sty.devOpsUseCases)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xtJVu)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__v3YOo
                )}
              >
                {"Practical DevOps Implementations"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__siO6X)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yenMm)}
              >
                <div
                  data-plasmic-name={"line"}
                  data-plasmic-override={overrides.line}
                  className={classNames(projectcss.all, sty.line)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000975"}
                    data-plasmic-override={overrides.frame1000000975}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000975)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fzUb4
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319348"}
                  data-plasmic-override={overrides.frame427319348}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319348)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__umsEj
                    )}
                  >
                    {"Automated CI/CD"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5S9Vb
                    )}
                  >
                    {
                      "Implement seamless automation for building, testing, and deploying your software to enhance speed and consistency in your development processes."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rYok5)}
              >
                <div
                  data-plasmic-name={"line2"}
                  data-plasmic-override={overrides.line2}
                  className={classNames(projectcss.all, sty.line2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000977"}
                    data-plasmic-override={overrides.frame1000000977}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000977)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___88G7
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319349"}
                  data-plasmic-override={overrides.frame427319349}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319349)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vbS5B
                    )}
                  >
                    {"Infrastructure as Code (IaC)"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yEtNi
                    )}
                  >
                    {
                      "Automate the configuration and management of your infrastructure using code, ensuring consistent, scalable, and repeatable deployments."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__c1KHe)}
              >
                <div
                  data-plasmic-name={"line3"}
                  data-plasmic-override={overrides.line3}
                  className={classNames(projectcss.all, sty.line3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000979"}
                    data-plasmic-override={overrides.frame1000000979}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000979)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lFmS0
                      )}
                    >
                      {"3"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319330"}
                  data-plasmic-override={overrides.frame427319330}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319330)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hIeqp
                    )}
                  >
                    {"Real-time Monitoring"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xvvZn
                    )}
                  >
                    {
                      "Utilize automated systems to continuously track and address issues, ensuring timely identification and resolution of potential problems."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__r3IEc)}
              >
                <div
                  data-plasmic-name={"line4"}
                  data-plasmic-override={overrides.line4}
                  className={classNames(projectcss.all, sty.line4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000984"}
                    data-plasmic-override={overrides.frame1000000984}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000984)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ae3Se
                      )}
                    >
                      {"4"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319331"}
                  data-plasmic-override={overrides.frame427319331}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319331)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zekgf
                    )}
                  >
                    {"Integrated Security Practices"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kLoPz
                    )}
                  >
                    {
                      "Incorporate security measures directly into the development pipeline to safeguard software throughout its lifecycle."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1CTy3)}
              >
                <div
                  data-plasmic-name={"line5"}
                  data-plasmic-override={overrides.line5}
                  className={classNames(projectcss.all, sty.line5)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000987"}
                    data-plasmic-override={overrides.frame1000000987}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000987)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nrnDn
                      )}
                    >
                      {"5"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319332"}
                  data-plasmic-override={overrides.frame427319332}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319332)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gjlSv
                    )}
                  >
                    {"Fostering Team Collaboration"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fYkAw
                    )}
                  >
                    {
                      "Encourage teamwork and open communication to speed up delivery and drive innovation."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <CaseStudiesSection
            data-plasmic-name={"caseStudiesSection"}
            data-plasmic-override={overrides.caseStudiesSection}
            className={classNames("__wab_instance", sty.caseStudiesSection)}
          />

          <section
            data-plasmic-name={"whyChooseVidyayatan2"}
            data-plasmic-override={overrides.whyChooseVidyayatan2}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan2)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hAVp)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bCns5
                )}
              >
                {"End-to-End DevOps Solution"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__igYxv
                )}
              >
                {
                  "From development and testing to deployment and monitoring, SovTech provides complete DevOps services. Rely on our experienced team for custom solutions that align with your unique needs."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__wlur4)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__cITE)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts4"}
                  data-plasmic-override={overrides.qualityProducts4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319338"}
                    data-plasmic-override={overrides.frame427319338}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319338)}
                  >
                    <Frame53Icon
                      className={classNames(projectcss.all, sty.svg___5Nerv)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319339"}
                    data-plasmic-override={overrides.frame427319339}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319339)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kls9C
                      )}
                    >
                      {"Reliable Support and Issue Resolution"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0HWif
                      )}
                    >
                      {
                        "Count on us to address minor bugs and unforeseen challenges, ensuring smooth software development and ongoing maintenance."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts5"}
                  data-plasmic-override={overrides.qualityProducts5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts5)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319340"}
                    data-plasmic-override={overrides.frame427319340}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319340)}
                  >
                    <Frame34Icon
                      className={classNames(projectcss.all, sty.svg___2MBhK)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319341"}
                    data-plasmic-override={overrides.frame427319341}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319341)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3DCcc
                      )}
                    >
                      {"Flexible Solutions and Reliable Execution"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yRl7J
                      )}
                    >
                      {
                        "Utilize our technical expertise to develop scalable software solutions, supported by a 95% success rate in delivering story points to production."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts6"}
                  data-plasmic-override={overrides.qualityProducts6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts6)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319342"}
                    data-plasmic-override={overrides.frame427319342}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319342)}
                  >
                    <Frame14Icon
                      className={classNames(projectcss.all, sty.svg__xyt5H)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319343"}
                    data-plasmic-override={overrides.frame427319343}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319343)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3YpM7
                      )}
                    >
                      {"Optimized Resource Allocation"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1SfGk
                      )}
                    >
                      {
                        "Leverage our adaptable subscription model and skilled tech professionals for a cost-effective solution that seamlessly adjusts to your project's evolving requirements."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__oDb4M)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oLeeQ)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/_20945391ConvertedPng.png",
                    fullWidth: 1960,
                    fullHeight: 1960,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />

          <Testimonials
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames("__wab_instance", sty.testimonials)}
          />

          <FaqSection
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          />

          <ConnectWithUs
            data-plasmic-name={"connectWithUs"}
            data-plasmic-override={overrides.connectWithUs}
            className={classNames("__wab_instance", sty.connectWithUs)}
          />

          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "trustedBy",
    "whyChooseVidyayatan",
    "qualityProducts",
    "frame427319326",
    "frame427319327",
    "qualityProducts2",
    "frame427319334",
    "frame427319335",
    "qualityProducts3",
    "frame427319336",
    "frame427319337",
    "whyVidyayatan",
    "q1",
    "q14",
    "q16",
    "q18",
    "convertSection",
    "devOpsUseCases",
    "line",
    "frame1000000975",
    "frame427319348",
    "line2",
    "frame1000000977",
    "frame427319349",
    "line3",
    "frame1000000979",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame427319332",
    "caseStudiesSection",
    "whyChooseVidyayatan2",
    "qualityProducts4",
    "frame427319338",
    "frame427319339",
    "qualityProducts5",
    "frame427319340",
    "frame427319341",
    "qualityProducts6",
    "frame427319342",
    "frame427319343",
    "navHeader",
    "testimonials",
    "faqSection",
    "connectWithUs",
    "navFooter"
  ],
  heroSection: ["heroSection"],
  trustedBy: ["trustedBy"],
  whyChooseVidyayatan: [
    "whyChooseVidyayatan",
    "qualityProducts",
    "frame427319326",
    "frame427319327",
    "qualityProducts2",
    "frame427319334",
    "frame427319335",
    "qualityProducts3",
    "frame427319336",
    "frame427319337"
  ],
  qualityProducts: ["qualityProducts", "frame427319326", "frame427319327"],
  frame427319326: ["frame427319326"],
  frame427319327: ["frame427319327"],
  qualityProducts2: ["qualityProducts2", "frame427319334", "frame427319335"],
  frame427319334: ["frame427319334"],
  frame427319335: ["frame427319335"],
  qualityProducts3: ["qualityProducts3", "frame427319336", "frame427319337"],
  frame427319336: ["frame427319336"],
  frame427319337: ["frame427319337"],
  whyVidyayatan: ["whyVidyayatan", "q1", "q14", "q16", "q18"],
  q1: ["q1"],
  q14: ["q14"],
  q16: ["q16"],
  q18: ["q18"],
  convertSection: ["convertSection"],
  devOpsUseCases: [
    "devOpsUseCases",
    "line",
    "frame1000000975",
    "frame427319348",
    "line2",
    "frame1000000977",
    "frame427319349",
    "line3",
    "frame1000000979",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame427319332"
  ],
  line: ["line", "frame1000000975"],
  frame1000000975: ["frame1000000975"],
  frame427319348: ["frame427319348"],
  line2: ["line2", "frame1000000977"],
  frame1000000977: ["frame1000000977"],
  frame427319349: ["frame427319349"],
  line3: ["line3", "frame1000000979"],
  frame1000000979: ["frame1000000979"],
  frame427319330: ["frame427319330"],
  line4: ["line4", "frame1000000984"],
  frame1000000984: ["frame1000000984"],
  frame427319331: ["frame427319331"],
  line5: ["line5", "frame1000000987"],
  frame1000000987: ["frame1000000987"],
  frame427319332: ["frame427319332"],
  caseStudiesSection: ["caseStudiesSection"],
  whyChooseVidyayatan2: [
    "whyChooseVidyayatan2",
    "qualityProducts4",
    "frame427319338",
    "frame427319339",
    "qualityProducts5",
    "frame427319340",
    "frame427319341",
    "qualityProducts6",
    "frame427319342",
    "frame427319343"
  ],
  qualityProducts4: ["qualityProducts4", "frame427319338", "frame427319339"],
  frame427319338: ["frame427319338"],
  frame427319339: ["frame427319339"],
  qualityProducts5: ["qualityProducts5", "frame427319340", "frame427319341"],
  frame427319340: ["frame427319340"],
  frame427319341: ["frame427319341"],
  qualityProducts6: ["qualityProducts6", "frame427319342", "frame427319343"],
  frame427319342: ["frame427319342"],
  frame427319343: ["frame427319343"],
  navHeader: ["navHeader"],
  testimonials: ["testimonials"],
  faqSection: ["faqSection"],
  connectWithUs: ["connectWithUs"],
  navFooter: ["navFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "section";
  trustedBy: "section";
  whyChooseVidyayatan: "section";
  qualityProducts: "div";
  frame427319326: "div";
  frame427319327: "div";
  qualityProducts2: "div";
  frame427319334: "div";
  frame427319335: "div";
  qualityProducts3: "div";
  frame427319336: "div";
  frame427319337: "div";
  whyVidyayatan: "section";
  q1: "div";
  q14: "div";
  q16: "div";
  q18: "div";
  convertSection: "section";
  devOpsUseCases: "section";
  line: "div";
  frame1000000975: "div";
  frame427319348: "div";
  line2: "div";
  frame1000000977: "div";
  frame427319349: "div";
  line3: "div";
  frame1000000979: "div";
  frame427319330: "div";
  line4: "div";
  frame1000000984: "div";
  frame427319331: "div";
  line5: "div";
  frame1000000987: "div";
  frame427319332: "div";
  caseStudiesSection: typeof CaseStudiesSection;
  whyChooseVidyayatan2: "section";
  qualityProducts4: "div";
  frame427319338: "div";
  frame427319339: "div";
  qualityProducts5: "div";
  frame427319340: "div";
  frame427319341: "div";
  qualityProducts6: "div";
  frame427319342: "div";
  frame427319343: "div";
  navHeader: typeof NavHeader;
  testimonials: typeof Testimonials;
  faqSection: typeof FaqSection;
  connectWithUs: typeof ConnectWithUs;
  navFooter: typeof NavFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBharatPeCaseStudy__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBharatPeCaseStudy__VariantsArgs;
    args?: PlasmicBharatPeCaseStudy__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBharatPeCaseStudy__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicBharatPeCaseStudy__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBharatPeCaseStudy__ArgProps,
          internalVariantPropNames: PlasmicBharatPeCaseStudy__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBharatPeCaseStudy__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBharatPeCaseStudy";
  } else {
    func.displayName = `PlasmicBharatPeCaseStudy.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicBharatPeCaseStudy = Object.assign(
  // Top-level PlasmicBharatPeCaseStudy renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    trustedBy: makeNodeComponent("trustedBy"),
    whyChooseVidyayatan: makeNodeComponent("whyChooseVidyayatan"),
    qualityProducts: makeNodeComponent("qualityProducts"),
    frame427319326: makeNodeComponent("frame427319326"),
    frame427319327: makeNodeComponent("frame427319327"),
    qualityProducts2: makeNodeComponent("qualityProducts2"),
    frame427319334: makeNodeComponent("frame427319334"),
    frame427319335: makeNodeComponent("frame427319335"),
    qualityProducts3: makeNodeComponent("qualityProducts3"),
    frame427319336: makeNodeComponent("frame427319336"),
    frame427319337: makeNodeComponent("frame427319337"),
    whyVidyayatan: makeNodeComponent("whyVidyayatan"),
    q1: makeNodeComponent("q1"),
    q14: makeNodeComponent("q14"),
    q16: makeNodeComponent("q16"),
    q18: makeNodeComponent("q18"),
    convertSection: makeNodeComponent("convertSection"),
    devOpsUseCases: makeNodeComponent("devOpsUseCases"),
    line: makeNodeComponent("line"),
    frame1000000975: makeNodeComponent("frame1000000975"),
    frame427319348: makeNodeComponent("frame427319348"),
    line2: makeNodeComponent("line2"),
    frame1000000977: makeNodeComponent("frame1000000977"),
    frame427319349: makeNodeComponent("frame427319349"),
    line3: makeNodeComponent("line3"),
    frame1000000979: makeNodeComponent("frame1000000979"),
    frame427319330: makeNodeComponent("frame427319330"),
    line4: makeNodeComponent("line4"),
    frame1000000984: makeNodeComponent("frame1000000984"),
    frame427319331: makeNodeComponent("frame427319331"),
    line5: makeNodeComponent("line5"),
    frame1000000987: makeNodeComponent("frame1000000987"),
    frame427319332: makeNodeComponent("frame427319332"),
    caseStudiesSection: makeNodeComponent("caseStudiesSection"),
    whyChooseVidyayatan2: makeNodeComponent("whyChooseVidyayatan2"),
    qualityProducts4: makeNodeComponent("qualityProducts4"),
    frame427319338: makeNodeComponent("frame427319338"),
    frame427319339: makeNodeComponent("frame427319339"),
    qualityProducts5: makeNodeComponent("qualityProducts5"),
    frame427319340: makeNodeComponent("frame427319340"),
    frame427319341: makeNodeComponent("frame427319341"),
    qualityProducts6: makeNodeComponent("qualityProducts6"),
    frame427319342: makeNodeComponent("frame427319342"),
    frame427319343: makeNodeComponent("frame427319343"),
    navHeader: makeNodeComponent("navHeader"),
    testimonials: makeNodeComponent("testimonials"),
    faqSection: makeNodeComponent("faqSection"),
    connectWithUs: makeNodeComponent("connectWithUs"),
    navFooter: makeNodeComponent("navFooter"),

    // Metadata about props expected for PlasmicBharatPeCaseStudy
    internalVariantProps: PlasmicBharatPeCaseStudy__VariantProps,
    internalArgProps: PlasmicBharatPeCaseStudy__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBharatPeCaseStudy;
/* prettier-ignore-end */

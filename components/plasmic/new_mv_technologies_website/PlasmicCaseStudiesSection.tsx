// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: 8UZVGOKdExLM

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import CaseStudyCard2 from "../../CaseStudyCard2"; // plasmic-import: AFklclmNZQ8D/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicCaseStudiesSection.module.css"; // plasmic-import: 8UZVGOKdExLM/css

createPlasmicElementProxy;

export type PlasmicCaseStudiesSection__VariantMembers = {};
export type PlasmicCaseStudiesSection__VariantsArgs = {};
type VariantPropType = keyof PlasmicCaseStudiesSection__VariantsArgs;
export const PlasmicCaseStudiesSection__VariantProps =
  new Array<VariantPropType>();

export type PlasmicCaseStudiesSection__ArgsType = {};
type ArgPropType = keyof PlasmicCaseStudiesSection__ArgsType;
export const PlasmicCaseStudiesSection__ArgProps = new Array<ArgPropType>();

export type PlasmicCaseStudiesSection__OverridesType = {
  caseStudies?: Flex__<"section">;
};

export interface DefaultCaseStudiesSectionProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCaseStudiesSection__RenderFunc(props: {
  variants: PlasmicCaseStudiesSection__VariantsArgs;
  args: PlasmicCaseStudiesSection__ArgsType;
  overrides: PlasmicCaseStudiesSection__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <section
      data-plasmic-name={"caseStudies"}
      data-plasmic-override={overrides.caseStudies}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_vidyayatan_landing_page_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.caseStudies
      )}
    >
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__oy5Sb)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__xVlH4
          )}
        >
          {"Our Proven Solutions for Businesses Like Yours"}
        </div>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__yOOzv
          )}
        >
          {
            "Bespoke Scalable Software Crafted to Fit Your Unique Industry and Business Demands."
          }
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__oMUy)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns__sjUj1)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__fnfDt)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__tKyFz
              )}
            />
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__cFfuf)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__vxqVp
              )}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___6Ygcd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              {
                "Vidyayatan Infotech's software solutions and tech expertise drove HABUILD's rapid growth by streamlining operations through automation, custom development, team building, and infrastructure setup."
              }
            </CaseStudyCard2>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__xmLby)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__lnYlD
              )}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__aLEjw)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              {
                "Satvaa is a powerful ERP tool for food processing companies and farm owners, streamlining purchase orders, inventory, vendors, teams, traceability, and shipments in one intuitive app. Simplify operations and take control with Satvaa."
              }
            </CaseStudyCard2>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns__dZsVo)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__shYAj)}
          >
            <CaseStudyCard2
              className={classNames("__wab_instance", sty.caseStudyCard2__lrq2)}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__wlHgk)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng4.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              {
                "Vidyayatan Infotech built a webapp for South Africa's Maroi Boerdery BK to manage farm blocks, plan seasons, track inputs, and create monthly pest calendars, streamlining their operations."
              }
            </CaseStudyCard2>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__lyeUs)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__ipUjJ
              )}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__q0OBb)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hLtpX
                )}
              >
                {
                  "Vidyayatan Technologies designed a SaaS mapping tool for Innowell, enabling them to map sites, buildings, floors, zones, and spaces, while tracking detailed statistics for each workstation."
                }
              </div>
            </CaseStudyCard2>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__tthgz)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__tGMoh
              )}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__dhtjr)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              {
                "Vidyayatan Technologies developed a digital tool for DCM Shriram, managing 300,000 farms and 1,600 managers with real-time crop monitoring, task management, and better coordination, boosting efficiency."
              }
            </CaseStudyCard2>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.columns__oyp2C)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__rk4Py)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__hR6F7
              )}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__hCa6S)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              {
                "Vidyayatan Technologies created a procurement system for Star Bazaar, optimizing farmer and aggregator interactions, market rates, vendor management, and yield predictions for improved efficiency and relationships."
              }
            </CaseStudyCard2>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column___2RNf)}
          >
            <CaseStudyCard2
              className={classNames(
                "__wab_instance",
                sty.caseStudyCard2__hJXwU
              )}
              slot={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pKmXa)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                    fullWidth: 425,
                    fullHeight: 80,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mYb2U
                )}
              >
                {
                  "Vidyayatan Technologies developed a robust payment processing system for BharatPe, streamlining transactions, enhancing merchant management, and improving scalability with a microservices architecture, leading to faster payments and improved financial operations"
                }
              </div>
            </CaseStudyCard2>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.column__hBkiw)}
          />
        </Stack__>
      </Stack__>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  caseStudies: ["caseStudies"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  caseStudies: "section";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCaseStudiesSection__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCaseStudiesSection__VariantsArgs;
    args?: PlasmicCaseStudiesSection__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicCaseStudiesSection__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicCaseStudiesSection__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCaseStudiesSection__ArgProps,
          internalVariantPropNames: PlasmicCaseStudiesSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCaseStudiesSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "caseStudies") {
    func.displayName = "PlasmicCaseStudiesSection";
  } else {
    func.displayName = `PlasmicCaseStudiesSection.${nodeName}`;
  }
  return func;
}

export const PlasmicCaseStudiesSection = Object.assign(
  // Top-level PlasmicCaseStudiesSection renders the root element
  makeNodeComponent("caseStudies"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicCaseStudiesSection
    internalVariantProps: PlasmicCaseStudiesSection__VariantProps,
    internalArgProps: PlasmicCaseStudiesSection__ArgProps
  }
);

export default PlasmicCaseStudiesSection;
/* prettier-ignore-end */

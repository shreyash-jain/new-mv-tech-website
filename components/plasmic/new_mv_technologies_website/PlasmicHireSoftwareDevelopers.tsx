// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: S-7g51E4_Z4z

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import Button2 from "../../Button2"; // plasmic-import: iFFcBUnvZUl0/component
import WeExcelInSection from "../../WeExcelInSection"; // plasmic-import: GOGTEeayq0FO/component
import Testimonials from "../../Testimonials"; // plasmic-import: q8KVAm97HyX-/component
import FaqSection from "../../FaqSection"; // plasmic-import: BSnSueyvgk6P/component
import ConnectWithUs from "../../ConnectWithUs"; // plasmic-import: w9fJfCJ45KHV/component
import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicHireSoftwareDevelopers.module.css"; // plasmic-import: S-7g51E4_Z4z/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tSFoGfIVWAwT/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: FoPRmBUdi-FM/icon
import Frame18Icon from "./icons/PlasmicIcon__Frame18"; // plasmic-import: n4n-qgslZ89z/icon
import Frame44Icon from "./icons/PlasmicIcon__Frame44"; // plasmic-import: ozloJETPm_GS/icon
import Frame45Icon from "./icons/PlasmicIcon__Frame45"; // plasmic-import: 4m5dQ7BXAGO1/icon
import Frame46Icon from "./icons/PlasmicIcon__Frame46"; // plasmic-import: z7C0aShKl-zi/icon
import Frame47Icon from "./icons/PlasmicIcon__Frame47"; // plasmic-import: mLlFoQe_934i/icon
import Frame48Icon from "./icons/PlasmicIcon__Frame48"; // plasmic-import: T3HYn4Zp7IFd/icon
import Frame5Icon from "./icons/PlasmicIcon__Frame5"; // plasmic-import: jElqlrDEH9Gg/icon

createPlasmicElementProxy;

export type PlasmicHireSoftwareDevelopers__VariantMembers = {};
export type PlasmicHireSoftwareDevelopers__VariantsArgs = {};
type VariantPropType = keyof PlasmicHireSoftwareDevelopers__VariantsArgs;
export const PlasmicHireSoftwareDevelopers__VariantProps =
  new Array<VariantPropType>();

export type PlasmicHireSoftwareDevelopers__ArgsType = {};
type ArgPropType = keyof PlasmicHireSoftwareDevelopers__ArgsType;
export const PlasmicHireSoftwareDevelopers__ArgProps = new Array<ArgPropType>();

export type PlasmicHireSoftwareDevelopers__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"section">;
  trustedBy?: Flex__<"section">;
  whyChooseVidyayatan?: Flex__<"section">;
  frame1000000975?: Flex__<"div">;
  frame1000000976?: Flex__<"div">;
  weExcelInSection?: Flex__<typeof WeExcelInSection>;
  whyChooseVidyayatan3?: Flex__<"section">;
  frame1000000977?: Flex__<"div">;
  frame1000000979?: Flex__<"div">;
  frame1000000980?: Flex__<"div">;
  frame1000000981?: Flex__<"div">;
  developmentTeamStructureOverview?: Flex__<"section">;
  frame427319338?: Flex__<"div">;
  frame427319339?: Flex__<"div">;
  frame427319340?: Flex__<"div">;
  frame427319341?: Flex__<"div">;
  frame427319342?: Flex__<"div">;
  frame427319343?: Flex__<"div">;
  testimonials?: Flex__<typeof Testimonials>;
  faqSection?: Flex__<typeof FaqSection>;
  connectWithUs?: Flex__<typeof ConnectWithUs>;
  navFooter?: Flex__<typeof NavFooter>;
  navHeader?: Flex__<typeof NavHeader>;
};

export interface DefaultHireSoftwareDevelopersProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHireSoftwareDevelopers__RenderFunc(props: {
  variants: PlasmicHireSoftwareDevelopers__VariantsArgs;
  args: PlasmicHireSoftwareDevelopers__ArgsType;
  overrides: PlasmicHireSoftwareDevelopers__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__mSe4D)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__w7Zph)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___9YIvE)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jBs3G
                    )}
                  >
                    {"Recruit a Managed Development Team"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mCi6C
                    )}
                  >
                    {
                      "Get dedicated and managed engineering teams to cater to your business\u2019s specific software development needs."
                    }
                  </div>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__kugTq)}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                  target={true}
                >
                  {"Book meeting"}
                </Button2>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__yBpD)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__gUo2A)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/_43729361Png.png",
                    fullWidth: 2600,
                    fullHeight: 2000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"trustedBy"}
            data-plasmic-override={overrides.trustedBy}
            className={classNames(projectcss.all, sty.trustedBy)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__c7Ytc)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0DGlu
                )}
              >
                {"Trusted by"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__l32Mt)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__lag0)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__nvIvD)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__v3XkQ)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/labourLinkLogo1Png2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__kZttC)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___14VQ7)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ajKaU)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__squW1)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "28px"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__rNn9P)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___6Y3Ou)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__z1LCa)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___2BshC)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___6AfIm)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng3.png",
                        fullWidth: 1116,
                        fullHeight: 192,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__b52Vg)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__q1T1F)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__fNp5S)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xGKk3)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__b0LPo)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__sjvKy)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyChooseVidyayatan"}
            data-plasmic-override={overrides.whyChooseVidyayatan}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__slYr3)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yboC7
                )}
              >
                {"Why You Should Hire a Dedicated Development Team?"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__bTKxY)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___6Na0)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jz79R
                  )}
                >
                  {
                    "MV Technologies\u2019 expert Agile Scrum Teams deliver high-performance solutions for funded start-ups and innovative greenfield projects, catering to businesses of all sizes, from small start-ups to large enterprises. The benefits of outsourcing are immense and extend across the board, ensuring efficiency and success for any organization."
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8O06A)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000975"}
                    data-plasmic-override={overrides.frame1000000975}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000975)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b1P0
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r7Hl0
                    )}
                  >
                    {
                      "If you're searching for a team to handle your web app development, you're in the right place. We ensure optimized sprint velocity across every phase\u2014planning, design, coding, testing, deployment, and ongoing management."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yM2BJ)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000976"}
                    data-plasmic-override={overrides.frame1000000976}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000976)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f5EMu
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vdQa5
                    )}
                  >
                    {
                      "Reducing business costs, accessing the right expertise, accelerating time to market, and freeing up time to focus on other business objectives are key reasons why an increasing number of companies are opting to hire outsourced development teams."
                    }
                  </div>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__cmUGw)}
                  endIcon={
                    <Frame18Icon
                      className={classNames(projectcss.all, sty.svg__d77Fr)}
                      role={"img"}
                    />
                  }
                  link={`/contact-page`}
                  shape={"rounded"}
                >
                  {"Get in Touch"}
                </Button2>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__rxSht)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__k3UMg)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/softwareDevelopmentTeamPng.png",
                    fullWidth: 3759,
                    fullHeight: 4801,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <WeExcelInSection
            data-plasmic-name={"weExcelInSection"}
            data-plasmic-override={overrides.weExcelInSection}
            className={classNames("__wab_instance", sty.weExcelInSection)}
          />

          <section
            data-plasmic-name={"whyChooseVidyayatan3"}
            data-plasmic-override={overrides.whyChooseVidyayatan3}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan3)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___47KpN)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3Rk70
                )}
              >
                {"Stay Ahead of the Competition"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___4VkV9)}
            >
              <div className={classNames(projectcss.all, sty.column__aRIno)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___8Uj0M)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/softwareDevelopmentTeam2Png.png",
                    fullWidth: 4151,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__qqta0)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jtMbn)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000977"}
                    data-plasmic-override={overrides.frame1000000977}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000977)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dEo81
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1U81B)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1WHmz
                      )}
                    >
                      {"Upfront Product Planning"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8DyG
                      )}
                    >
                      {
                        "Iterate and perfect your product roadmap prior to coding."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cXfdb)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000979"}
                    data-plasmic-override={overrides.frame1000000979}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000979)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pCMhb
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nIprK)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bZwn
                      )}
                    >
                      {"Agile Dedicated Team"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sz6Ui
                      )}
                    >
                      {
                        "A handpicked team providing the flexibility to outmaneuver your competition."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uzW3U)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000980"}
                    data-plasmic-override={overrides.frame1000000980}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000980)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t19Sq
                      )}
                    >
                      {"3"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__tObTa)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ty5Jp
                      )}
                    >
                      {"Cut Costs and Save Time"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dwzgu
                      )}
                    >
                      {
                        "No hiring effort or fees, with zero operational or office expenses."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__t4Fd)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000981"}
                    data-plasmic-override={overrides.frame1000000981}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000981)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mgkyH
                      )}
                    >
                      {"4"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__r0Not)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gluy0
                      )}
                    >
                      {"Performance-Focused Reporting"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g7Pyv
                      )}
                    >
                      {
                        "Stay updated with automated reports on your team\u2019s output, so you can focus on growing your business."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__q0UGh)}
                  endIcon={
                    <Frame18Icon
                      className={classNames(projectcss.all, sty.svg__gGze)}
                      role={"img"}
                    />
                  }
                  link={`/contact-page`}
                  shape={"rounded"}
                >
                  {"Get in Touch"}
                </Button2>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"developmentTeamStructureOverview"}
            data-plasmic-override={overrides.developmentTeamStructureOverview}
            className={classNames(
              projectcss.all,
              sty.developmentTeamStructureOverview
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cmozl)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fIq5
                )}
              >
                {"Development Team Structure Overview"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vjh3Y)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__xHlDl)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__kepyi)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319338"}
                    data-plasmic-override={overrides.frame427319338}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319338)}
                  >
                    <Frame44Icon
                      className={classNames(projectcss.all, sty.svg__buJa)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nxWsq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rFov
                      )}
                    >
                      {"Developer"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nwe6V
                      )}
                    >
                      {
                        "A proficient software developer to write, test, and execute the source code of a software application."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__hZhr8)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319339"}
                    data-plasmic-override={overrides.frame427319339}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319339)}
                  >
                    <Frame45Icon
                      className={classNames(projectcss.all, sty.svg__guCOh)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tiTJk)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xwhiy
                      )}
                    >
                      {"Project Owner"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bhMw7
                      )}
                    >
                      {
                        "Oversees operational duties such as analyzing data, generating reports, tracking performance metrics, and managing documentation."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__arx8G)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319340"}
                    data-plasmic-override={overrides.frame427319340}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319340)}
                  >
                    <Frame46Icon
                      className={classNames(projectcss.all, sty.svg___1JUa)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aaSw9)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hUgip
                      )}
                    >
                      {"Quality Assurance"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s9EXf
                      )}
                    >
                      {
                        "Responsible for ongoing audits and analysis of the development cycle to ensure alignment with deliverables."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__rBx57)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___9SDDa)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319341"}
                    data-plasmic-override={overrides.frame427319341}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319341)}
                  >
                    <Frame47Icon
                      className={classNames(projectcss.all, sty.svg__kfhMt)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ltfKt)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__unfh1
                      )}
                    >
                      {"Scrum Master"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ekiXi
                      )}
                    >
                      {
                        "A committed facilitator for your Agile Scrum team, overseeing the process and streamlining information flow."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__wmegk)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319342"}
                    data-plasmic-override={overrides.frame427319342}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319342)}
                  >
                    <Frame48Icon
                      className={classNames(projectcss.all, sty.svg__iZbzh)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__oD7O5)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ehlp1
                      )}
                    >
                      {"Software Developers"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l7Xo9
                      )}
                    >
                      {
                        "Your Software Developers handle the creation, maintenance, and support of your software product."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__xeIn7)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319343"}
                    data-plasmic-override={overrides.frame427319343}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319343)}
                  >
                    <Frame5Icon
                      className={classNames(projectcss.all, sty.svg__bk0Yz)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eR0V)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zrMmm
                      )}
                    >
                      {"Software Support"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dkR4
                      )}
                    >
                      {
                        "We offer 2nd and 3rd tier support through our dedicated Support and Maintenance team for your software."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <Testimonials
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames("__wab_instance", sty.testimonials)}
          />

          <FaqSection
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          />

          <ConnectWithUs
            data-plasmic-name={"connectWithUs"}
            data-plasmic-override={overrides.connectWithUs}
            className={classNames("__wab_instance", sty.connectWithUs)}
          />

          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />

          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "trustedBy",
    "whyChooseVidyayatan",
    "frame1000000975",
    "frame1000000976",
    "weExcelInSection",
    "whyChooseVidyayatan3",
    "frame1000000977",
    "frame1000000979",
    "frame1000000980",
    "frame1000000981",
    "developmentTeamStructureOverview",
    "frame427319338",
    "frame427319339",
    "frame427319340",
    "frame427319341",
    "frame427319342",
    "frame427319343",
    "testimonials",
    "faqSection",
    "connectWithUs",
    "navFooter",
    "navHeader"
  ],
  heroSection: ["heroSection"],
  trustedBy: ["trustedBy"],
  whyChooseVidyayatan: [
    "whyChooseVidyayatan",
    "frame1000000975",
    "frame1000000976"
  ],
  frame1000000975: ["frame1000000975"],
  frame1000000976: ["frame1000000976"],
  weExcelInSection: ["weExcelInSection"],
  whyChooseVidyayatan3: [
    "whyChooseVidyayatan3",
    "frame1000000977",
    "frame1000000979",
    "frame1000000980",
    "frame1000000981"
  ],
  frame1000000977: ["frame1000000977"],
  frame1000000979: ["frame1000000979"],
  frame1000000980: ["frame1000000980"],
  frame1000000981: ["frame1000000981"],
  developmentTeamStructureOverview: [
    "developmentTeamStructureOverview",
    "frame427319338",
    "frame427319339",
    "frame427319340",
    "frame427319341",
    "frame427319342",
    "frame427319343"
  ],
  frame427319338: ["frame427319338"],
  frame427319339: ["frame427319339"],
  frame427319340: ["frame427319340"],
  frame427319341: ["frame427319341"],
  frame427319342: ["frame427319342"],
  frame427319343: ["frame427319343"],
  testimonials: ["testimonials"],
  faqSection: ["faqSection"],
  connectWithUs: ["connectWithUs"],
  navFooter: ["navFooter"],
  navHeader: ["navHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "section";
  trustedBy: "section";
  whyChooseVidyayatan: "section";
  frame1000000975: "div";
  frame1000000976: "div";
  weExcelInSection: typeof WeExcelInSection;
  whyChooseVidyayatan3: "section";
  frame1000000977: "div";
  frame1000000979: "div";
  frame1000000980: "div";
  frame1000000981: "div";
  developmentTeamStructureOverview: "section";
  frame427319338: "div";
  frame427319339: "div";
  frame427319340: "div";
  frame427319341: "div";
  frame427319342: "div";
  frame427319343: "div";
  testimonials: typeof Testimonials;
  faqSection: typeof FaqSection;
  connectWithUs: typeof ConnectWithUs;
  navFooter: typeof NavFooter;
  navHeader: typeof NavHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHireSoftwareDevelopers__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHireSoftwareDevelopers__VariantsArgs;
    args?: PlasmicHireSoftwareDevelopers__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHireSoftwareDevelopers__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHireSoftwareDevelopers__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHireSoftwareDevelopers__ArgProps,
          internalVariantPropNames: PlasmicHireSoftwareDevelopers__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHireSoftwareDevelopers__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHireSoftwareDevelopers";
  } else {
    func.displayName = `PlasmicHireSoftwareDevelopers.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicHireSoftwareDevelopers = Object.assign(
  // Top-level PlasmicHireSoftwareDevelopers renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    trustedBy: makeNodeComponent("trustedBy"),
    whyChooseVidyayatan: makeNodeComponent("whyChooseVidyayatan"),
    frame1000000975: makeNodeComponent("frame1000000975"),
    frame1000000976: makeNodeComponent("frame1000000976"),
    weExcelInSection: makeNodeComponent("weExcelInSection"),
    whyChooseVidyayatan3: makeNodeComponent("whyChooseVidyayatan3"),
    frame1000000977: makeNodeComponent("frame1000000977"),
    frame1000000979: makeNodeComponent("frame1000000979"),
    frame1000000980: makeNodeComponent("frame1000000980"),
    frame1000000981: makeNodeComponent("frame1000000981"),
    developmentTeamStructureOverview: makeNodeComponent(
      "developmentTeamStructureOverview"
    ),
    frame427319338: makeNodeComponent("frame427319338"),
    frame427319339: makeNodeComponent("frame427319339"),
    frame427319340: makeNodeComponent("frame427319340"),
    frame427319341: makeNodeComponent("frame427319341"),
    frame427319342: makeNodeComponent("frame427319342"),
    frame427319343: makeNodeComponent("frame427319343"),
    testimonials: makeNodeComponent("testimonials"),
    faqSection: makeNodeComponent("faqSection"),
    connectWithUs: makeNodeComponent("connectWithUs"),
    navFooter: makeNodeComponent("navFooter"),
    navHeader: makeNodeComponent("navHeader"),

    // Metadata about props expected for PlasmicHireSoftwareDevelopers
    internalVariantProps: PlasmicHireSoftwareDevelopers__VariantProps,
    internalArgProps: PlasmicHireSoftwareDevelopers__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHireSoftwareDevelopers;
/* prettier-ignore-end */

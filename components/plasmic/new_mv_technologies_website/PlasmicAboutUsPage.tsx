// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: 1d-yRsa_sH5m

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import Button2 from "../../Button2"; // plasmic-import: iFFcBUnvZUl0/component
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import Tilt from "@plasmicpkgs/react-parallax-tilt";
import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicAboutUsPage.module.css"; // plasmic-import: 1d-yRsa_sH5m/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tSFoGfIVWAwT/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: FoPRmBUdi-FM/icon
import Frame11Icon from "./icons/PlasmicIcon__Frame11"; // plasmic-import: sU8Ti1nGsma1/icon
import Frame25Icon from "./icons/PlasmicIcon__Frame25"; // plasmic-import: JX3DLIHojP5f/icon
import Frame26Icon from "./icons/PlasmicIcon__Frame26"; // plasmic-import: JfI4_Rrzrhvn/icon
import Frame27Icon from "./icons/PlasmicIcon__Frame27"; // plasmic-import: 9kE_v7ERYwed/icon
import Frame28Icon from "./icons/PlasmicIcon__Frame28"; // plasmic-import: L_pH65WOHTJf/icon
import Frame29Icon from "./icons/PlasmicIcon__Frame29"; // plasmic-import: fYMQsuVY1Bo_/icon
import Frame30Icon from "./icons/PlasmicIcon__Frame30"; // plasmic-import: VFIXgdenzVs0/icon
import Frame31Icon from "./icons/PlasmicIcon__Frame31"; // plasmic-import: P3CFRrbyHle9/icon

createPlasmicElementProxy;

export type PlasmicAboutUsPage__VariantMembers = {};
export type PlasmicAboutUsPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicAboutUsPage__VariantsArgs;
export const PlasmicAboutUsPage__VariantProps = new Array<VariantPropType>();

export type PlasmicAboutUsPage__ArgsType = {};
type ArgPropType = keyof PlasmicAboutUsPage__ArgsType;
export const PlasmicAboutUsPage__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutUsPage__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"div">;
  sliderCarousel?: Flex__<typeof SliderWrapper>;
  meetTheFounder?: Flex__<"section">;
  whoAreWe?: Flex__<"section">;
  whoAreWe2?: Flex__<"div">;
  text8?: Flex__<"div">;
  whoAreWe3?: Flex__<"div">;
  laborLinkVisual2?: Flex__<"div">;
  whatWeDo?: Flex__<"div">;
  text11?: Flex__<"div">;
  technologicalPartnership3?: Flex__<"div">;
  ilustations?: Flex__<"div">;
  whatWeDo2?: Flex__<"div">;
  laborLinkVisual3?: Flex__<"div">;
  text9?: Flex__<"div">;
  technologicalPartnership2?: Flex__<"div">;
  whyWeDoIt?: Flex__<"div">;
  text10?: Flex__<"div">;
  dedicatedTeams2?: Flex__<"div">;
  laborLinkVisual4?: Flex__<"div">;
  howWeDoIt2?: Flex__<"div">;
  text13?: Flex__<"div">;
  technologicalPartnership6?: Flex__<"div">;
  ilustations2?: Flex__<"div">;
  howWeDoIt?: Flex__<"div">;
  laborLinkVisual5?: Flex__<"div">;
  text12?: Flex__<"div">;
  technologicalPartnership4?: Flex__<"div">;
  ourValues?: Flex__<"section">;
  frame427319326?: Flex__<"div">;
  nounQuality69600691?: Flex__<"div">;
  frame427319330?: Flex__<"div">;
  nounQuality69600695?: Flex__<"div">;
  frame427319331?: Flex__<"div">;
  nounQuality69600696?: Flex__<"div">;
  frame427319332?: Flex__<"div">;
  nounQuality69600697?: Flex__<"div">;
  convertSection?: Flex__<"section">;
  navFooter?: Flex__<typeof NavFooter>;
  navHeader?: Flex__<typeof NavHeader>;
};

export interface DefaultAboutUsPageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAboutUsPage__RenderFunc(props: {
  variants: PlasmicAboutUsPage__VariantsArgs;
  args: PlasmicAboutUsPage__ArgsType;
  overrides: PlasmicAboutUsPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__dfJq1)}>
            <div
              data-plasmic-name={"heroSection"}
              data-plasmic-override={overrides.heroSection}
              className={classNames(projectcss.all, sty.heroSection)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qwEx8)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__prZ)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sgBxy)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qW9K4)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"364px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/image79.png",
                        fullWidth: 3532,
                        fullHeight: 720,
                        aspectRatio: undefined
                      }}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uO2PC)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zE2B7
                        )}
                      >
                        {"Tech Wizards at Play!"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1WOGl
                        )}
                      >
                        {
                          "We\u2019re a group of creators, dreamers, and doers, bringing innovation to life every day. Want to discuss"
                        }
                      </div>
                    </Stack__>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2___2EyCa
                      )}
                      link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                      shape={"rounded"}
                      showEndIcon={true}
                      target={true}
                    >
                      {"Book meeting"}
                    </Button2>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
          </div>
          {(() => {
            const child$Props = {
              arrows: false,
              autoplay: true,
              autoplaySpeed: 0,
              beforeChange: generateStateOnChangePropForCodeComponents(
                $state,
                "currentSlide",
                ["sliderCarousel", "currentSlide"],
                SliderWrapper_Helpers
              ),
              centerMode: true,
              centerPadding: hasVariant(globalVariants, "screen", "mobileOnly")
                ? "50"
                : "500",
              className: classNames("__wab_instance", sty.sliderCarousel),
              cssEase: "linear",
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel",
                "currentSlide"
              ]),
              ref: ref => {
                $refs["sliderCarousel"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel__slider"],
              speed: 5000
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel.currentSlide"
                }
              ],
              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );

            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel"}
                data-plasmic-override={overrides.sliderCarousel}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox___0NKp)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__toJkE)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/labourLinkLogo1Png2.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox___6H2G)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__ejrVz)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__v6Bvq)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__xoWVx)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__dis1)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__pydqu)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__t6Qy5)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__boNkA)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng4.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__aZUa8)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__erMy)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__gXuup)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__yYeFb)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__ukbsI)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__sWsK5)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                      fullWidth: 425,
                      fullHeight: 80,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </SliderWrapper>
            );
          })()}
          <section
            data-plasmic-name={"meetTheFounder"}
            data-plasmic-override={overrides.meetTheFounder}
            className={classNames(projectcss.all, sty.meetTheFounder)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__hFCw)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vkONr
                )}
              >
                {"Meet the Visionaries"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__rddEe)}
            >
              <div className={classNames(projectcss.all, sty.column__yVIyx)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__uAwwg)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/image83.png",
                    fullWidth: 4800,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__nLKz)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__oGgps)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cmlm
                    )}
                  >
                    {"Anneli Nel"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bRpC
                    )}
                  >
                    {"CMO and CFO"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mRaqG
                  )}
                >
                  {
                    "Meet Anneli Nel, the powerhouse behind MV technologies! As both CMO and CFO, she\u2019s the ultimate multitasker, turning big ideas into reality while keeping the numbers in check. With a knack for motivating the team and a sharp mind for finance, Anneli makes sure everything runs smoothly\u2014from boardroom decisions to balancing the books. She\u2019s the brains of the operation, always ready to transform talk into action and inspire everyone around her."
                  }
                </div>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___8E6Yy)}
            >
              <div className={classNames(projectcss.all, sty.column__nMcs5)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__typxG)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/founderImagePng.png",
                    fullWidth: 4800,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___4Jqtj)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___4U4Bf)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Dea8
                    )}
                  >
                    {"Shreyash Jain"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nRqin
                    )}
                  >
                    {"CEO and CTO"}
                  </div>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nxT0Z
                  )}
                >
                  {
                    "Meet Shreyash Jain, the tech mastermind behind MV Technologies! He\u2019s the go-to guy for all things tech, building the software from scratch based on our sometimes vague and evolving ideas\u2014and turning them into a fully functional system. Shreyash is the ultimate code writer and problem solver, with an incredible knack for making complex concepts look easy. Whether it's developing new features or providing top-notch tech support, Shreyash is the brilliant mind that keeps our client's platform running smoothly."
                  }
                </div>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whoAreWe"}
            data-plasmic-override={overrides.whoAreWe}
            className={classNames(projectcss.all, sty.whoAreWe)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___0Ob2H)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bmIUf
                )}
              >
                {"Our Story and Mission"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eoa2V)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"whoAreWe2"}
                data-plasmic-override={overrides.whoAreWe2}
                hasGap={true}
                className={classNames(projectcss.all, sty.whoAreWe2)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text8"}
                  data-plasmic-override={overrides.text8}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text8)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fOiTx)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"whoAreWe3"}
                      data-plasmic-override={overrides.whoAreWe3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.whoAreWe3)}
                    >
                      <Frame11Icon
                        className={classNames(projectcss.all, sty.svg__byRHm)}
                        role={"img"}
                      />
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ywEtk
                      )}
                    >
                      {"Who are we?"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kLaHv
                    )}
                  >
                    {
                      "We are Vidyayatan, a software first technology company that aims to build solutions that stay for decades and be used by billions of users. We are a team of passionate and experienced technology problem solvers who like to think, evaluate, strategise, implement, introspect and continuously improve"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"laborLinkVisual2"}
                  data-plasmic-override={overrides.laborLinkVisual2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.laborLinkVisual2)}
                >
                  <Tilt
                    className={classNames("__wab_instance", sty.tilt__qnD9T)}
                    glareEnable={false}
                    gyroscope={false}
                    perspective={2000}
                    scale={1}
                    tiltEnable={false}
                    trackOnWindow={false}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__tPeYt)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/_29657371Png3.png",
                        fullWidth: 2772,
                        fullHeight: 1664,
                        aspectRatio: undefined
                      }}
                    />
                  </Tilt>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"whatWeDo"}
                data-plasmic-override={overrides.whatWeDo}
                hasGap={true}
                className={classNames(projectcss.all, sty.whatWeDo)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text11"}
                  data-plasmic-override={overrides.text11}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text11)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xX6R)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"technologicalPartnership3"}
                      data-plasmic-override={
                        overrides.technologicalPartnership3
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.technologicalPartnership3
                      )}
                    >
                      <Frame25Icon
                        className={classNames(projectcss.all, sty.svg__rmDRt)}
                        role={"img"}
                      />
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0ISd6
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "What We Do?"
                        : "Technological Partnership"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Lpk2
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "We leverage our expertise in software product design and development, data engineering and cloud computing to solve the toughest problems of various industries through technology. We help our clients create better impact for their customers and stakeholders by delivering  high-quality, scalable and innovative solutions."
                      : "We dive into your business, brainstorm solutions, gather feedback, and optimize infrastructure to boost efficiency."}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"ilustations"}
                  data-plasmic-override={overrides.ilustations}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.ilustations)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__nFxYn)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/new_mv_technologies_website/images/_29657373Png.png",
                      fullWidth: 2772,
                      fullHeight: 1664,
                      aspectRatio: undefined
                    }}
                  />
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"whatWeDo2"}
                data-plasmic-override={overrides.whatWeDo2}
                hasGap={true}
                className={classNames(projectcss.all, sty.whatWeDo2)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"laborLinkVisual3"}
                  data-plasmic-override={overrides.laborLinkVisual3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.laborLinkVisual3)}
                >
                  <Tilt
                    className={classNames("__wab_instance", sty.tilt__anq06)}
                    tiltEnable={false}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ghnr8)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/_29657373Png.png",
                        fullWidth: 2772,
                        fullHeight: 1664,
                        aspectRatio: undefined
                      }}
                    />
                  </Tilt>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text9"}
                  data-plasmic-override={overrides.text9}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text9)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zFzJi)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"technologicalPartnership2"}
                      data-plasmic-override={
                        overrides.technologicalPartnership2
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.technologicalPartnership2
                      )}
                    >
                      <Frame25Icon
                        className={classNames(projectcss.all, sty.svg__qg5B2)}
                        role={"img"}
                      />
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__is4S8
                      )}
                    >
                      {"What We Do?"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ic1X2
                    )}
                  >
                    {
                      "We leverage our expertise in software product design and development, data engineering and cloud computing to solve the toughest problems of various industries through technology. We help our clients create better impact for their customers and stakeholders by delivering  high-quality, scalable and innovative solutions."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"whyWeDoIt"}
                data-plasmic-override={overrides.whyWeDoIt}
                hasGap={true}
                className={classNames(projectcss.all, sty.whyWeDoIt)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text10"}
                  data-plasmic-override={overrides.text10}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text10)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xyw3S)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"dedicatedTeams2"}
                      data-plasmic-override={overrides.dedicatedTeams2}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.dedicatedTeams2
                      )}
                    >
                      <Frame26Icon
                        className={classNames(projectcss.all, sty.svg__aWxua)}
                        role={"img"}
                      />
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zDoLx
                      )}
                    >
                      {"Why We Do It?"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s3NXz
                    )}
                  >
                    {
                      "We believe that technology plays a crucial role in business in today\u2019s world. We have seen hundreds of businesses where technology has either acted as an enabler or a doer, i.e., the main character for solving business problems such as scaling of service, retention of customers, optimisation and automation of processes, reaching new audience, and delivery of service.\n\nWe are driven by our vision to be the best technology company from Bharat and serve nations and enterprises around the globe. We have very high standards of customer satisfaction and delivery promises. We are not just a service provider, but a trusted partner for our clients."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"laborLinkVisual4"}
                  data-plasmic-override={overrides.laborLinkVisual4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.laborLinkVisual4)}
                >
                  <Tilt
                    className={classNames("__wab_instance", sty.tilt__lqQe1)}
                    tiltEnable={false}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0ClPf)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/_29657372Png.png",
                        fullWidth: 2772,
                        fullHeight: 1664,
                        aspectRatio: undefined
                      }}
                    />
                  </Tilt>
                </Stack__>
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              ) ? (
                <Stack__
                  as={"div"}
                  data-plasmic-name={"howWeDoIt2"}
                  data-plasmic-override={overrides.howWeDoIt2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.howWeDoIt2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"text13"}
                    data-plasmic-override={overrides.text13}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.text13)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xSktp)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"technologicalPartnership6"}
                        data-plasmic-override={
                          overrides.technologicalPartnership6
                        }
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.technologicalPartnership6
                        )}
                      >
                        <Frame27Icon
                          className={classNames(projectcss.all, sty.svg__oeOm5)}
                          role={"img"}
                        />
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kIxEg
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "How We Do It?"
                          : "Technological Partnership"}
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__efY1
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "We follow a customer-centric and agile approach to deliver solutions that meet the needs and expectations of our clients. We work closely with our clients to understand their goals, challenges, and requirements. We then design and develop solutions that are tailored to their specific needs and aligned with their vision. We also provide ongoing support and maintenance to ensure the smooth functioning and performance of our solutions."
                        : "We dive into your business, brainstorm solutions, gather feedback, and optimize infrastructure to boost efficiency."}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"ilustations2"}
                    data-plasmic-override={overrides.ilustations2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.ilustations2)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__elUA)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/_29657374Png2.png",
                        fullWidth: 2772,
                        fullHeight: 1664,
                        aspectRatio: undefined
                      }}
                    />
                  </Stack__>
                </Stack__>
              ) : null}
              <Stack__
                as={"div"}
                data-plasmic-name={"howWeDoIt"}
                data-plasmic-override={overrides.howWeDoIt}
                hasGap={true}
                className={classNames(projectcss.all, sty.howWeDoIt)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"laborLinkVisual5"}
                  data-plasmic-override={overrides.laborLinkVisual5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.laborLinkVisual5)}
                >
                  <Tilt
                    className={classNames("__wab_instance", sty.tilt__vNmAm)}
                    tiltEnable={false}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__dzoXi)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/_29657374Png2.png",
                        fullWidth: 2772,
                        fullHeight: 1664,
                        aspectRatio: undefined
                      }}
                    />
                  </Tilt>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"text12"}
                  data-plasmic-override={overrides.text12}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.text12)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nz9Pb)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"technologicalPartnership4"}
                      data-plasmic-override={
                        overrides.technologicalPartnership4
                      }
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.technologicalPartnership4
                      )}
                    >
                      <Frame27Icon
                        className={classNames(projectcss.all, sty.svg__wUjCe)}
                        role={"img"}
                      />
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mPls7
                      )}
                    >
                      {"How We Do It?"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d3R5K
                    )}
                  >
                    {
                      "We follow a customer-centric and agile approach to deliver solutions that meet the needs and expectations of our clients. We work closely with our clients to understand their goals, challenges, and requirements. We then design and develop solutions that are tailored to their specific needs and aligned with their vision. We also provide ongoing support and maintenance to ensure the smooth functioning and performance of our solutions."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"ourValues"}
            data-plasmic-override={overrides.ourValues}
            className={classNames(projectcss.all, sty.ourValues)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__tnmgZ)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xhhuk
                )}
              >
                {"What We Stand For"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__bzZ8I)}
            >
              <div className={classNames(projectcss.all, sty.column__vdbYo)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rPaId)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ykdX)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame427319326"}
                      data-plasmic-override={overrides.frame427319326}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame427319326)}
                    >
                      <div
                        data-plasmic-name={"nounQuality69600691"}
                        data-plasmic-override={overrides.nounQuality69600691}
                        className={classNames(
                          projectcss.all,
                          sty.nounQuality69600691
                        )}
                      >
                        <Frame28Icon
                          className={classNames(projectcss.all, sty.svg__mIGxx)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cvykm
                      )}
                    >
                      {"Concious"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nY2Os
                    )}
                  >
                    {"Be present, introspective, and always improving"}
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__rsj15)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wTqsE)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nRglv)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame427319330"}
                      data-plasmic-override={overrides.frame427319330}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame427319330)}
                    >
                      <div
                        data-plasmic-name={"nounQuality69600695"}
                        data-plasmic-override={overrides.nounQuality69600695}
                        className={classNames(
                          projectcss.all,
                          sty.nounQuality69600695
                        )}
                      >
                        <Frame29Icon
                          className={classNames(projectcss.all, sty.svg__y6Omv)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__m0YP
                      )}
                    >
                      {"Dedicated "}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__funz4
                    )}
                  >
                    {"Stay consistent and committed to our work"}
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__eNjmL)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__y6M5Z)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ibR0W)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame427319331"}
                      data-plasmic-override={overrides.frame427319331}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame427319331)}
                    >
                      <div
                        data-plasmic-name={"nounQuality69600696"}
                        data-plasmic-override={overrides.nounQuality69600696}
                        className={classNames(
                          projectcss.all,
                          sty.nounQuality69600696
                        )}
                      >
                        <Frame30Icon
                          className={classNames(projectcss.all, sty.svg__kMkEa)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gnOjY
                      )}
                    >
                      {"Loyal"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7JoJ8
                    )}
                  >
                    {"Be committed to what we promised"}
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__vvW6)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wtjRb)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lcg7H)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame427319332"}
                      data-plasmic-override={overrides.frame427319332}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.frame427319332)}
                    >
                      <div
                        data-plasmic-name={"nounQuality69600697"}
                        data-plasmic-override={overrides.nounQuality69600697}
                        className={classNames(
                          projectcss.all,
                          sty.nounQuality69600697
                        )}
                      >
                        <Frame31Icon
                          className={classNames(projectcss.all, sty.svg__gUuYg)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7ZyCb
                      )}
                    >
                      {"Relevant"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ckRbQ
                    )}
                  >
                    {"Stay updated with new solutions as times change"}
                  </div>
                </Stack__>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"convertSection"}
            data-plasmic-override={overrides.convertSection}
            className={classNames(projectcss.all, sty.convertSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__o4Paq)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nhPxL
                )}
              >
                {
                  "Set to boost your business with scalable and affordable tech talent?"
                }
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__xTolo)}
            >
              <div className={classNames(projectcss.all, sty.column___4UQmX)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__ia4BL)}
                  color={"white"}
                  link={`/pricing-page`}
                  shape={"rounded"}
                >
                  {"View Pricing"}
                </Button2>
              </div>
              <div className={classNames(projectcss.all, sty.column__ed2Y6)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__w7Xr4)}
                  color={undefined}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                  target={true}
                >
                  {"Book Meeting"}
                </Button2>
              </div>
            </Stack__>
          </section>
          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />

          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "sliderCarousel",
    "meetTheFounder",
    "whoAreWe",
    "whoAreWe2",
    "text8",
    "whoAreWe3",
    "laborLinkVisual2",
    "whatWeDo",
    "text11",
    "technologicalPartnership3",
    "ilustations",
    "whatWeDo2",
    "laborLinkVisual3",
    "text9",
    "technologicalPartnership2",
    "whyWeDoIt",
    "text10",
    "dedicatedTeams2",
    "laborLinkVisual4",
    "howWeDoIt2",
    "text13",
    "technologicalPartnership6",
    "ilustations2",
    "howWeDoIt",
    "laborLinkVisual5",
    "text12",
    "technologicalPartnership4",
    "ourValues",
    "frame427319326",
    "nounQuality69600691",
    "frame427319330",
    "nounQuality69600695",
    "frame427319331",
    "nounQuality69600696",
    "frame427319332",
    "nounQuality69600697",
    "convertSection",
    "navFooter",
    "navHeader"
  ],
  heroSection: ["heroSection"],
  sliderCarousel: ["sliderCarousel"],
  meetTheFounder: ["meetTheFounder"],
  whoAreWe: [
    "whoAreWe",
    "whoAreWe2",
    "text8",
    "whoAreWe3",
    "laborLinkVisual2",
    "whatWeDo",
    "text11",
    "technologicalPartnership3",
    "ilustations",
    "whatWeDo2",
    "laborLinkVisual3",
    "text9",
    "technologicalPartnership2",
    "whyWeDoIt",
    "text10",
    "dedicatedTeams2",
    "laborLinkVisual4",
    "howWeDoIt2",
    "text13",
    "technologicalPartnership6",
    "ilustations2",
    "howWeDoIt",
    "laborLinkVisual5",
    "text12",
    "technologicalPartnership4"
  ],
  whoAreWe2: ["whoAreWe2", "text8", "whoAreWe3", "laborLinkVisual2"],
  text8: ["text8", "whoAreWe3"],
  whoAreWe3: ["whoAreWe3"],
  laborLinkVisual2: ["laborLinkVisual2"],
  whatWeDo: ["whatWeDo", "text11", "technologicalPartnership3", "ilustations"],
  text11: ["text11", "technologicalPartnership3"],
  technologicalPartnership3: ["technologicalPartnership3"],
  ilustations: ["ilustations"],
  whatWeDo2: [
    "whatWeDo2",
    "laborLinkVisual3",
    "text9",
    "technologicalPartnership2"
  ],
  laborLinkVisual3: ["laborLinkVisual3"],
  text9: ["text9", "technologicalPartnership2"],
  technologicalPartnership2: ["technologicalPartnership2"],
  whyWeDoIt: ["whyWeDoIt", "text10", "dedicatedTeams2", "laborLinkVisual4"],
  text10: ["text10", "dedicatedTeams2"],
  dedicatedTeams2: ["dedicatedTeams2"],
  laborLinkVisual4: ["laborLinkVisual4"],
  howWeDoIt2: [
    "howWeDoIt2",
    "text13",
    "technologicalPartnership6",
    "ilustations2"
  ],
  text13: ["text13", "technologicalPartnership6"],
  technologicalPartnership6: ["technologicalPartnership6"],
  ilustations2: ["ilustations2"],
  howWeDoIt: [
    "howWeDoIt",
    "laborLinkVisual5",
    "text12",
    "technologicalPartnership4"
  ],
  laborLinkVisual5: ["laborLinkVisual5"],
  text12: ["text12", "technologicalPartnership4"],
  technologicalPartnership4: ["technologicalPartnership4"],
  ourValues: [
    "ourValues",
    "frame427319326",
    "nounQuality69600691",
    "frame427319330",
    "nounQuality69600695",
    "frame427319331",
    "nounQuality69600696",
    "frame427319332",
    "nounQuality69600697"
  ],
  frame427319326: ["frame427319326", "nounQuality69600691"],
  nounQuality69600691: ["nounQuality69600691"],
  frame427319330: ["frame427319330", "nounQuality69600695"],
  nounQuality69600695: ["nounQuality69600695"],
  frame427319331: ["frame427319331", "nounQuality69600696"],
  nounQuality69600696: ["nounQuality69600696"],
  frame427319332: ["frame427319332", "nounQuality69600697"],
  nounQuality69600697: ["nounQuality69600697"],
  convertSection: ["convertSection"],
  navFooter: ["navFooter"],
  navHeader: ["navHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "div";
  sliderCarousel: typeof SliderWrapper;
  meetTheFounder: "section";
  whoAreWe: "section";
  whoAreWe2: "div";
  text8: "div";
  whoAreWe3: "div";
  laborLinkVisual2: "div";
  whatWeDo: "div";
  text11: "div";
  technologicalPartnership3: "div";
  ilustations: "div";
  whatWeDo2: "div";
  laborLinkVisual3: "div";
  text9: "div";
  technologicalPartnership2: "div";
  whyWeDoIt: "div";
  text10: "div";
  dedicatedTeams2: "div";
  laborLinkVisual4: "div";
  howWeDoIt2: "div";
  text13: "div";
  technologicalPartnership6: "div";
  ilustations2: "div";
  howWeDoIt: "div";
  laborLinkVisual5: "div";
  text12: "div";
  technologicalPartnership4: "div";
  ourValues: "section";
  frame427319326: "div";
  nounQuality69600691: "div";
  frame427319330: "div";
  nounQuality69600695: "div";
  frame427319331: "div";
  nounQuality69600696: "div";
  frame427319332: "div";
  nounQuality69600697: "div";
  convertSection: "section";
  navFooter: typeof NavFooter;
  navHeader: typeof NavHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutUsPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutUsPage__VariantsArgs;
    args?: PlasmicAboutUsPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAboutUsPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAboutUsPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUsPage__ArgProps,
          internalVariantPropNames: PlasmicAboutUsPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUsPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUsPage";
  } else {
    func.displayName = `PlasmicAboutUsPage.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicAboutUsPage = Object.assign(
  // Top-level PlasmicAboutUsPage renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    meetTheFounder: makeNodeComponent("meetTheFounder"),
    whoAreWe: makeNodeComponent("whoAreWe"),
    whoAreWe2: makeNodeComponent("whoAreWe2"),
    text8: makeNodeComponent("text8"),
    whoAreWe3: makeNodeComponent("whoAreWe3"),
    laborLinkVisual2: makeNodeComponent("laborLinkVisual2"),
    whatWeDo: makeNodeComponent("whatWeDo"),
    text11: makeNodeComponent("text11"),
    technologicalPartnership3: makeNodeComponent("technologicalPartnership3"),
    ilustations: makeNodeComponent("ilustations"),
    whatWeDo2: makeNodeComponent("whatWeDo2"),
    laborLinkVisual3: makeNodeComponent("laborLinkVisual3"),
    text9: makeNodeComponent("text9"),
    technologicalPartnership2: makeNodeComponent("technologicalPartnership2"),
    whyWeDoIt: makeNodeComponent("whyWeDoIt"),
    text10: makeNodeComponent("text10"),
    dedicatedTeams2: makeNodeComponent("dedicatedTeams2"),
    laborLinkVisual4: makeNodeComponent("laborLinkVisual4"),
    howWeDoIt2: makeNodeComponent("howWeDoIt2"),
    text13: makeNodeComponent("text13"),
    technologicalPartnership6: makeNodeComponent("technologicalPartnership6"),
    ilustations2: makeNodeComponent("ilustations2"),
    howWeDoIt: makeNodeComponent("howWeDoIt"),
    laborLinkVisual5: makeNodeComponent("laborLinkVisual5"),
    text12: makeNodeComponent("text12"),
    technologicalPartnership4: makeNodeComponent("technologicalPartnership4"),
    ourValues: makeNodeComponent("ourValues"),
    frame427319326: makeNodeComponent("frame427319326"),
    nounQuality69600691: makeNodeComponent("nounQuality69600691"),
    frame427319330: makeNodeComponent("frame427319330"),
    nounQuality69600695: makeNodeComponent("nounQuality69600695"),
    frame427319331: makeNodeComponent("frame427319331"),
    nounQuality69600696: makeNodeComponent("nounQuality69600696"),
    frame427319332: makeNodeComponent("frame427319332"),
    nounQuality69600697: makeNodeComponent("nounQuality69600697"),
    convertSection: makeNodeComponent("convertSection"),
    navFooter: makeNodeComponent("navFooter"),
    navHeader: makeNodeComponent("navHeader"),

    // Metadata about props expected for PlasmicAboutUsPage
    internalVariantProps: PlasmicAboutUsPage__VariantProps,
    internalArgProps: PlasmicAboutUsPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUsPage;
/* prettier-ignore-end */

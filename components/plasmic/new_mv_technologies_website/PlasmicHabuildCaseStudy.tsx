// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: 4utyTcNUfTrA

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicHabuildCaseStudy.module.css"; // plasmic-import: 4utyTcNUfTrA/css

import Frame17Icon from "./icons/PlasmicIcon__Frame17"; // plasmic-import: qCObakUSkcsr/icon
import Frame37Icon from "./icons/PlasmicIcon__Frame37"; // plasmic-import: cB8KooTDO7hj/icon
import Frame30Icon from "./icons/PlasmicIcon__Frame30"; // plasmic-import: VFIXgdenzVs0/icon
import Frame15Icon from "./icons/PlasmicIcon__Frame15"; // plasmic-import: YQCNU9xil-Ab/icon
import Frame34Icon from "./icons/PlasmicIcon__Frame34"; // plasmic-import: SzohbHgr1-om/icon
import Frame60Icon from "./icons/PlasmicIcon__Frame60"; // plasmic-import: Vt40ua52-piV/icon
import Frame56Icon from "./icons/PlasmicIcon__Frame56"; // plasmic-import: GM_QnSrqVQu5/icon

createPlasmicElementProxy;

export type PlasmicHabuildCaseStudy__VariantMembers = {};
export type PlasmicHabuildCaseStudy__VariantsArgs = {};
type VariantPropType = keyof PlasmicHabuildCaseStudy__VariantsArgs;
export const PlasmicHabuildCaseStudy__VariantProps =
  new Array<VariantPropType>();

export type PlasmicHabuildCaseStudy__ArgsType = {
  q12?: React.ReactNode;
  q13?: React.ReactNode;
  q15?: React.ReactNode;
  q17?: React.ReactNode;
  q19?: React.ReactNode;
  q113?: React.ReactNode;
  q114?: React.ReactNode;
  q115?: React.ReactNode;
};
type ArgPropType = keyof PlasmicHabuildCaseStudy__ArgsType;
export const PlasmicHabuildCaseStudy__ArgProps = new Array<ArgPropType>(
  "q12",
  "q13",
  "q15",
  "q17",
  "q19",
  "q113",
  "q114",
  "q115"
);

export type PlasmicHabuildCaseStudy__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"section">;
  overview?: Flex__<"section">;
  challeges?: Flex__<"section">;
  line?: Flex__<"div">;
  frame1000000975?: Flex__<"div">;
  frame427319348?: Flex__<"div">;
  line2?: Flex__<"div">;
  frame1000000977?: Flex__<"div">;
  frame427319349?: Flex__<"div">;
  line3?: Flex__<"div">;
  frame1000000979?: Flex__<"div">;
  frame427319330?: Flex__<"div">;
  line4?: Flex__<"div">;
  frame1000000984?: Flex__<"div">;
  frame427319331?: Flex__<"div">;
  line5?: Flex__<"div">;
  frame1000000987?: Flex__<"div">;
  frame427319332?: Flex__<"div">;
  line6?: Flex__<"div">;
  frame1000000988?: Flex__<"div">;
  frame427319333?: Flex__<"div">;
  line7?: Flex__<"div">;
  frame1000000989?: Flex__<"div">;
  frame427319334?: Flex__<"div">;
  line8?: Flex__<"div">;
  frame1000000990?: Flex__<"div">;
  frame427319335?: Flex__<"div">;
  line9?: Flex__<"div">;
  frame1000000991?: Flex__<"div">;
  frame427319336?: Flex__<"div">;
  line10?: Flex__<"div">;
  frame1000000992?: Flex__<"div">;
  frame427319337?: Flex__<"div">;
  line11?: Flex__<"div">;
  frame1000000993?: Flex__<"div">;
  frame427319344?: Flex__<"div">;
  keyDelivarables?: Flex__<"section">;
  ourSolutions?: Flex__<"section">;
  line12?: Flex__<"div">;
  frame1000000994?: Flex__<"div">;
  frame1000000980?: Flex__<"div">;
  frame1000000976?: Flex__<"div">;
  frame427319328?: Flex__<"div">;
  line18?: Flex__<"div">;
  frame1000001002?: Flex__<"div">;
  frame1000001003?: Flex__<"div">;
  frame1000001004?: Flex__<"div">;
  frame427319342?: Flex__<"div">;
  line19?: Flex__<"div">;
  frame1000001005?: Flex__<"div">;
  frame427319343?: Flex__<"div">;
  solutions?: Flex__<"section">;
  q1?: Flex__<"div">;
  q14?: Flex__<"div">;
  q16?: Flex__<"div">;
  q18?: Flex__<"div">;
  impactInNumbers?: Flex__<"section">;
  conclusion?: Flex__<"section">;
  navFooter?: Flex__<typeof NavFooter>;
  navHeader?: Flex__<typeof NavHeader>;
};

export interface DefaultHabuildCaseStudyProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHabuildCaseStudy__RenderFunc(props: {
  variants: PlasmicHabuildCaseStudy__VariantsArgs;
  args: PlasmicHabuildCaseStudy__ArgsType;
  overrides: PlasmicHabuildCaseStudy__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
          onScroll={async event => {
            const $steps = {};
          }}
        >
          <section
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___5Kk3Z)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__aq6Ob)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fjGz0)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8UUm6
                    )}
                  >
                    {"Scaling HABUILD from 300 to 20 Lakh Members in 10 Months"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nfWlP
                    )}
                  >
                    {
                      "Vidyayatan Infotech transformed HABUILD's habit-building platform through advanced automation, personalized member experiences, and the creation of a skilled development team. Our custom software solutions streamlined operations, enhanced user engagement, and enabled rapid global growth."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__mgHzA)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oKm5E)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/image51.png",
                    fullWidth: 4836,
                    fullHeight: 5104,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"overview"}
            data-plasmic-override={overrides.overview}
            className={classNames(projectcss.all, sty.overview)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__k9U)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jeef2
                )}
              >
                {"Overview"}
              </div>
            </Stack__>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__mbADz)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"800px"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/new_mv_technologies_website/images/image52.png",
                fullWidth: 500,
                fullHeight: 333,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hwJDo
              )}
            >
              {
                "HABUILD was founded with a singular mission - helping people build sustainable habits with the help of technology.\n\nWe are living in a mobile-first world and all our interactions are primarily digital - we play, work, find love, talk, collaborate, buy, sell, and help each other online.\nMany of these interactions are addictive and user's behavior has been modified for the benefit of online companies in a way that is detrimental to his health.\nAt HABUILD, we aim to use these interactions in a way that creates a healthy lifestyle for the people. We are here to help people create good habits for themselves. That\u2019s why the word \u201cHABUILD\u201d is a combination of \u201cHABIT BUILDING\u201d.\n\nThe HABUILD platform has a strong community of over 2 Lakh users across 36 nations."
              }
            </div>
          </section>
          <section
            data-plasmic-name={"challeges"}
            data-plasmic-override={overrides.challeges}
            className={classNames(projectcss.all, sty.challeges)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__reOYs)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__x6Bhq
                )}
              >
                {"Challenges on the Path to Growth"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hBwrC)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cUv9N)}
              >
                <div
                  data-plasmic-name={"line"}
                  data-plasmic-override={overrides.line}
                  className={classNames(projectcss.all, sty.line)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000975"}
                    data-plasmic-override={overrides.frame1000000975}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000975)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___8FtB
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319348"}
                  data-plasmic-override={overrides.frame427319348}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319348)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gplEi
                    )}
                  >
                    {"Managing Membership Growth"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zKm0
                    )}
                  >
                    {
                      "Relying on Google Sheets and manual processes became inefficient as HABUILD's user base expanded rapidly."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__aGebL)}
              >
                <div
                  data-plasmic-name={"line2"}
                  data-plasmic-override={overrides.line2}
                  className={classNames(projectcss.all, sty.line2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000977"}
                    data-plasmic-override={overrides.frame1000000977}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000977)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cjkIl
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319349"}
                  data-plasmic-override={overrides.frame427319349}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319349)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Z9I3
                    )}
                  >
                    {"Scaling Personalized Notifications"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mqsvf
                    )}
                  >
                    {
                      "The need for timely, tailored communication through WhatsApp and Facebook required automation to keep users engaged."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__enFsj)}
              >
                <div
                  data-plasmic-name={"line3"}
                  data-plasmic-override={overrides.line3}
                  className={classNames(projectcss.all, sty.line3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000979"}
                    data-plasmic-override={overrides.frame1000000979}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000979)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ozDyR
                      )}
                    >
                      {"3"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319330"}
                  data-plasmic-override={overrides.frame427319330}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319330)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vqSld
                    )}
                  >
                    {"Tracking Member Sessions"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__htXw6
                    )}
                  >
                    {
                      "Creating and managing unique session links based on preferences and attendance became increasingly complex with more members."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mr2Ot)}
              >
                <div
                  data-plasmic-name={"line4"}
                  data-plasmic-override={overrides.line4}
                  className={classNames(projectcss.all, sty.line4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000984"}
                    data-plasmic-override={overrides.frame1000000984}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000984)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ksKuh
                      )}
                    >
                      {"4"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319331"}
                  data-plasmic-override={overrides.frame427319331}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319331)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bPeTl
                    )}
                  >
                    {"Streamlining Payments and Plans"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eYzFl
                    )}
                  >
                    {
                      "Managing membership payments and custom plans while providing flexibility for pause days demanded streamlined systems"
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ezqF)}
              >
                <div
                  data-plasmic-name={"line5"}
                  data-plasmic-override={overrides.line5}
                  className={classNames(projectcss.all, sty.line5)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000987"}
                    data-plasmic-override={overrides.frame1000000987}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000987)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__smYQ
                      )}
                    >
                      {"5"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319332"}
                  data-plasmic-override={overrides.frame427319332}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319332)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v086L
                    )}
                  >
                    {"Efficient Member Support"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ebhKb
                    )}
                  >
                    {
                      "Member support needed to be fast and efficient to maintain satisfaction as HABUILD scaled its operations."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1L6Av)}
              >
                <div
                  data-plasmic-name={"line6"}
                  data-plasmic-override={overrides.line6}
                  className={classNames(projectcss.all, sty.line6)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000988"}
                    data-plasmic-override={overrides.frame1000000988}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000988)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nvLok
                      )}
                    >
                      {"6"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319333"}
                  data-plasmic-override={overrides.frame427319333}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319333)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fuG7R
                    )}
                  >
                    {"Hiring Skilled Developers"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w1Isp
                    )}
                  >
                    {
                      "As the platform grew, recruiting and managing developers to innovate and scale the product became essential."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___2SbIf)}
              >
                <div
                  data-plasmic-name={"line7"}
                  data-plasmic-override={overrides.line7}
                  className={classNames(projectcss.all, sty.line7)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000989"}
                    data-plasmic-override={overrides.frame1000000989}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000989)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ueWd
                      )}
                    >
                      {"7"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319334"}
                  data-plasmic-override={overrides.frame427319334}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319334)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__er9N5
                    )}
                  >
                    {"Automating Workflows"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nh769
                    )}
                  >
                    {
                      "Manual processes for handling members and leads needed automation to increase efficiency and reduce errors."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rbkzu)}
              >
                <div
                  data-plasmic-name={"line8"}
                  data-plasmic-override={overrides.line8}
                  className={classNames(projectcss.all, sty.line8)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000990"}
                    data-plasmic-override={overrides.frame1000000990}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000990)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ipfpc
                      )}
                    >
                      {"8"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319335"}
                  data-plasmic-override={overrides.frame427319335}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319335)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oeuQt
                    )}
                  >
                    {"Enhancing User Engagement"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rCqin
                    )}
                  >
                    {
                      "Delivering personalized features and a seamless experience became critical to keeping members engaged and satisfied."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__u7YBv)}
              >
                <div
                  data-plasmic-name={"line9"}
                  data-plasmic-override={overrides.line9}
                  className={classNames(projectcss.all, sty.line9)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000991"}
                    data-plasmic-override={overrides.frame1000000991}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000991)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5Qgld
                      )}
                    >
                      {"9"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319336"}
                  data-plasmic-override={overrides.frame427319336}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319336)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ibm1
                    )}
                  >
                    {"Global Platform Scaling"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sFJi8
                    )}
                  >
                    {
                      "Expanding to reach customers across various regions required scalable systems that could handle international growth."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__d6Qj)}
              >
                <div
                  data-plasmic-name={"line10"}
                  data-plasmic-override={overrides.line10}
                  className={classNames(projectcss.all, sty.line10)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000992"}
                    data-plasmic-override={overrides.frame1000000992}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000992)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jqiFi
                      )}
                    >
                      {"10"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319337"}
                  data-plasmic-override={overrides.frame427319337}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319337)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aqK4U
                    )}
                  >
                    {"Improving Performance and Security"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mCwen
                    )}
                  >
                    {
                      "Ensuring the platform\u2019s performance, security, and reliability was key to maintaining user trust and smooth operations."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__uAeXf)}
              >
                <div
                  data-plasmic-name={"line11"}
                  data-plasmic-override={overrides.line11}
                  className={classNames(projectcss.all, sty.line11)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000993"}
                    data-plasmic-override={overrides.frame1000000993}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000993)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bc6Np
                      )}
                    >
                      {"11"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319344"}
                  data-plasmic-override={overrides.frame427319344}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319344)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__i3UAc
                    )}
                  >
                    {"Building a Talented Team"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xlhWu
                    )}
                  >
                    {
                      "A high-performing team was needed to develop innovative features and ensure consistent delivery of quality solutions."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"keyDelivarables"}
            data-plasmic-override={overrides.keyDelivarables}
            className={classNames(projectcss.all, sty.keyDelivarables)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___88Cb8)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__q5G3
                )}
              >
                {"Key deliverables"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___6ZVZn)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__sBwst)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dvGle)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg___7R6)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__lGa5Z)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f4ON
                      )}
                    >
                      {"Automated Attendance Tracking"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vSjRe
                      )}
                    >
                      {
                        "Eliminated manual tracking with an automated system for online class attendance"
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__f76HL)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__i8HG)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__dAfPm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9ZlSs
                      )}
                    >
                      {"Automated Notifications"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uOdR
                      )}
                    >
                      {
                        "Sent timely WhatsApp notifications before and after sessions, with custom messages based on attendance streaks."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hwu9N)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__rYxa9)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__stPA)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qzePi
                      )}
                    >
                      {"Lead Management"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Tuto
                      )}
                    >
                      {
                        "Streamlined lead capture from Facebook, adding them to trials and nurturing conversions."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___0X3H)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__fX0XX)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__tdS5O)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2K9E
                      )}
                    >
                      {"Session Management"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nkKvB
                      )}
                    >
                      {
                        "Created unique short links for members across platforms like Zoom and YouTube for easy access and tracking."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xITru)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__zwOjp)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__coslW)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0OsJ
                      )}
                    >
                      {"Payment & Plan Management"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4KOb
                      )}
                    >
                      {
                        "Secure, automated system for handling payments, membership plans, and pause days."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__o0PwD)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__zvuJr)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ayMet)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yww69
                      )}
                    >
                      {"Custom CRM Dashboard"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__k5Okj
                      )}
                    >
                      {
                        "Designed a CRM dashboard for agents to manage queries, attendance, payments, trials, and leads."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__vCiW2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mnV9K)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__m3BNb)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__wBX4)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kJOjO
                      )}
                    >
                      {"Member Web App"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tsJXj
                      )}
                    >
                      {
                        "Built a member-facing web app to view attendance records and receive trainer alerts."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__moF2Y)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__q5G2X)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__whPhY)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nsQwk
                      )}
                    >
                      {"Hiring Best Practices"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rfZx
                      )}
                    >
                      {
                        "Implemented a data-driven, 4-week hiring process to attract and select top talent."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__a5XfT)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__yf2Tc)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__sJl5O)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dv9NE
                      )}
                    >
                      {"CI/CD Setup"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wx75R
                      )}
                    >
                      {
                        "Established a CI/CD pipeline on AWS for automated code deployment and testing."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yomNi)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__p25T)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__xKBdM)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__togPw
                      )}
                    >
                      {"Task Planning & Management"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5And0
                      )}
                    >
                      {
                        "Supported engineer task planning and project management."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gFiTz)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__whDsu)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__ap917)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pRhX
                      )}
                    >
                      {"Technical Infrastructure"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__c3Xb
                      )}
                    >
                      {
                        "Developed systems for shortlinks (handling 60-80k hits/day), member support, sales cycle management, and data analysis."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kNjC6)}
                >
                  <Frame17Icon
                    className={classNames(projectcss.all, sty.svg__wDq2M)}
                    role={"img"}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__sgBkn)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__x3YUv
                      )}
                    >
                      {"Team Building"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q3NP
                      )}
                    >
                      {
                        "Built a high-performing team of 6 developers and established quality code standards."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"ourSolutions"}
            data-plasmic-override={overrides.ourSolutions}
            className={classNames(projectcss.all, sty.ourSolutions)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cqAd9)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yTk9A
                )}
              >
                {"Our Solution"}
              </div>
            </Stack__>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__bpZx)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/new_mv_technologies_website/images/image63.png",
                fullWidth: 14840,
                fullHeight: 14840,
                aspectRatio: undefined
              }}
            />

            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___3Kpqs)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__garbq
                )}
              >
                {
                  "10x Member Growth in 10 Months with Custom Software Solutions"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__e1HvM
                )}
              >
                {
                  "From 300 to 20 Lakh members: See how efficient systems and technical expertise powered this transformation."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eoDX)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hyksi)}
              >
                <div
                  data-plasmic-name={"line12"}
                  data-plasmic-override={overrides.line12}
                  className={classNames(projectcss.all, sty.line12)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000994"}
                    data-plasmic-override={overrides.frame1000000994}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000994)}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000980"}
                    data-plasmic-override={overrides.frame1000000980}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000980)}
                  >
                    <div
                      data-plasmic-name={"frame1000000976"}
                      data-plasmic-override={overrides.frame1000000976}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000000976
                      )}
                    />
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319328"}
                  data-plasmic-override={overrides.frame427319328}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319328)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vGj9J)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__v7U1E)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ftAkg
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qjpKd
                          )}
                        >
                          {"Milestone 1"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ovPtP
                          )}
                        >
                          {"10x Member Growth"}
                        </div>
                      </Stack__>
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fnw5F
                    )}
                  >
                    {
                      "Scaled from 300-400 members to 10,000 within 10 months with efficient tech support."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xoZ0G)}
              >
                <div
                  data-plasmic-name={"line18"}
                  data-plasmic-override={overrides.line18}
                  className={classNames(projectcss.all, sty.line18)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000001002"}
                    data-plasmic-override={overrides.frame1000001002}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000001002)}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000001003"}
                    data-plasmic-override={overrides.frame1000001003}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000001003)}
                  >
                    <div
                      data-plasmic-name={"frame1000001004"}
                      data-plasmic-override={overrides.frame1000001004}
                      className={classNames(
                        projectcss.all,
                        sty.frame1000001004
                      )}
                    />
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319342"}
                  data-plasmic-override={overrides.frame427319342}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319342)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aSlS)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mqLKz)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__iu4Lo
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5ScK3
                          )}
                        >
                          {"Milestone 2"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__c9XfO
                          )}
                        >
                          {"Global Expansion"}
                        </div>
                      </Stack__>
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3Rf
                    )}
                  >
                    {
                      "Expanded the platform to over 20 Lakh members across 36 nations"
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9Q9E1)}
              >
                <div
                  data-plasmic-name={"line19"}
                  data-plasmic-override={overrides.line19}
                  className={classNames(projectcss.all, sty.line19)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000001005"}
                    data-plasmic-override={overrides.frame1000001005}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000001005)}
                  />
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319343"}
                  data-plasmic-override={overrides.frame427319343}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319343)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__y69AQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rvHOi)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ilSay
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iL61H
                          )}
                        >
                          {"Milestone 3"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uC8E
                          )}
                        >
                          {"Lead Conversion Boost"}
                        </div>
                      </Stack__>
                    </div>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fOZj7
                    )}
                  >
                    {
                      "50% increase in conversion of leads to paid members with automation."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"solutions"}
            data-plasmic-override={overrides.solutions}
            className={classNames(projectcss.all, sty.solutions)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__zCfoa)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gwPs7
                )}
              >
                {"Solutions That Power Exponential Growth"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__whEph
                )}
              >
                {
                  "From automation to scalability, see how innovative systems and personalized features created a foundation for HABUILD\u2019s global success."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__g888)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__r6WoT)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__oDXg7)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"q1"}
                    data-plasmic-override={overrides.q1}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.q1)}
                  >
                    {renderPlasmicSlot({
                      defaultContents: (
                        <Frame37Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7ZvZn
                          )}
                          role={"img"}
                        />
                      ),

                      value: args.q12
                    })}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xxzEu)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ak7TZ
                      )}
                    >
                      {"Operational Efficiency"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xyN7
                      )}
                    >
                      {
                        "Automation replaced manual processes, saving time and resources."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__m50H8)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"q14"}
                    data-plasmic-override={overrides.q14}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.q14)}
                  >
                    {renderPlasmicSlot({
                      defaultContents: (
                        <Frame30Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___4QLeV
                          )}
                          role={"img"}
                        />
                      ),

                      value: args.q13
                    })}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__aE55Y)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nYeRw
                      )}
                    >
                      {"Member Experience"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kzr31
                      )}
                    >
                      {
                        "Personalized notifications and easy access improved satisfaction."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__uDmSq)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"q16"}
                    data-plasmic-override={overrides.q16}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.q16)}
                  >
                    {renderPlasmicSlot({
                      defaultContents: (
                        <Frame15Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___1JIvt
                          )}
                          role={"img"}
                        />
                      ),

                      value: args.q15
                    })}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___77URy)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d2L5D
                      )}
                    >
                      {"Data Insights"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rtgTe
                      )}
                    >
                      {
                        "Integrated systems for better decision-making through data."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__k3XGe)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"q18"}
                    data-plasmic-override={overrides.q18}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.q18)}
                  >
                    {renderPlasmicSlot({
                      defaultContents: (
                        <Frame34Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9J4J4
                          )}
                          role={"img"}
                        />
                      ),

                      value: args.q17
                    })}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__dGA)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v7RXy
                      )}
                    >
                      {"Scalable Infrastructure"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___93Fvr
                      )}
                    >
                      {
                        "Robust systems for long-term growth and sustainability."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"impactInNumbers"}
            data-plasmic-override={overrides.impactInNumbers}
            className={classNames(projectcss.all, sty.impactInNumbers)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tqvh5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bdU3
                )}
              >
                {"Impact in Numbers"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__uK3Mz)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___387KR)}
              >
                {renderPlasmicSlot({
                  defaultContents: (
                    <Frame60Icon
                      className={classNames(projectcss.all, sty.svg__xzaLz)}
                      role={"img"}
                    />
                  ),

                  value: args.q19
                })}
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__x8UpU)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aFOgC
                    )}
                  >
                    {"50 %"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cwDw
                    )}
                  >
                    {"Lead Conversion Increase"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__jh01W)}
              >
                {renderPlasmicSlot({
                  defaultContents: (
                    <Frame60Icon
                      className={classNames(projectcss.all, sty.svg___7FgDs)}
                      role={"img"}
                    />
                  ),

                  value: args.q113
                })}
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fx3U9)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lbAeY
                    )}
                  >
                    {"40 %"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zg2Jg
                    )}
                  >
                    {"Retention Boost"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__z6Xg)}
              >
                {renderPlasmicSlot({
                  defaultContents: (
                    <Frame60Icon
                      className={classNames(projectcss.all, sty.svg__uYhsh)}
                      role={"img"}
                    />
                  ),

                  value: args.q114
                })}
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c1Zx9)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cWcX
                    )}
                  >
                    {"60 %"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__m7WMx
                    )}
                  >
                    {"User Satisfaction Improvement"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__nXtwN)}
              >
                {renderPlasmicSlot({
                  defaultContents: (
                    <Frame56Icon
                      className={classNames(projectcss.all, sty.svg__d5O5W)}
                      role={"img"}
                    />
                  ),

                  value: args.q115
                })}
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qpiou)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eIhLk
                    )}
                  >
                    {"70 %"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rjO1C
                    )}
                  >
                    {"Reduction in Operational Costs"}
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"conclusion"}
            data-plasmic-override={overrides.conclusion}
            className={classNames(projectcss.all, sty.conclusion)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qCXs)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__massG
                )}
              >
                {"Conclusion"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__taukw
                )}
              >
                {
                  "Vidyayatan Technologies's innovative software solutions and technical expertise were instrumental in driving HABUILD\u2019s exponential growth. Through a comprehensive strategy that included automation, tailored development, team-building, and robust infrastructure, Vidyayatan Infotech enabled HABUILD to optimize operations, elevate the member experience, and successfully scale to meet its growing ambitions."
                }
              </div>
            </Stack__>
          </section>
          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />

          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "overview",
    "challeges",
    "line",
    "frame1000000975",
    "frame427319348",
    "line2",
    "frame1000000977",
    "frame427319349",
    "line3",
    "frame1000000979",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame427319332",
    "line6",
    "frame1000000988",
    "frame427319333",
    "line7",
    "frame1000000989",
    "frame427319334",
    "line8",
    "frame1000000990",
    "frame427319335",
    "line9",
    "frame1000000991",
    "frame427319336",
    "line10",
    "frame1000000992",
    "frame427319337",
    "line11",
    "frame1000000993",
    "frame427319344",
    "keyDelivarables",
    "ourSolutions",
    "line12",
    "frame1000000994",
    "frame1000000980",
    "frame1000000976",
    "frame427319328",
    "line18",
    "frame1000001002",
    "frame1000001003",
    "frame1000001004",
    "frame427319342",
    "line19",
    "frame1000001005",
    "frame427319343",
    "solutions",
    "q1",
    "q14",
    "q16",
    "q18",
    "impactInNumbers",
    "conclusion",
    "navFooter",
    "navHeader"
  ],
  heroSection: ["heroSection"],
  overview: ["overview"],
  challeges: [
    "challeges",
    "line",
    "frame1000000975",
    "frame427319348",
    "line2",
    "frame1000000977",
    "frame427319349",
    "line3",
    "frame1000000979",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame427319332",
    "line6",
    "frame1000000988",
    "frame427319333",
    "line7",
    "frame1000000989",
    "frame427319334",
    "line8",
    "frame1000000990",
    "frame427319335",
    "line9",
    "frame1000000991",
    "frame427319336",
    "line10",
    "frame1000000992",
    "frame427319337",
    "line11",
    "frame1000000993",
    "frame427319344"
  ],
  line: ["line", "frame1000000975"],
  frame1000000975: ["frame1000000975"],
  frame427319348: ["frame427319348"],
  line2: ["line2", "frame1000000977"],
  frame1000000977: ["frame1000000977"],
  frame427319349: ["frame427319349"],
  line3: ["line3", "frame1000000979"],
  frame1000000979: ["frame1000000979"],
  frame427319330: ["frame427319330"],
  line4: ["line4", "frame1000000984"],
  frame1000000984: ["frame1000000984"],
  frame427319331: ["frame427319331"],
  line5: ["line5", "frame1000000987"],
  frame1000000987: ["frame1000000987"],
  frame427319332: ["frame427319332"],
  line6: ["line6", "frame1000000988"],
  frame1000000988: ["frame1000000988"],
  frame427319333: ["frame427319333"],
  line7: ["line7", "frame1000000989"],
  frame1000000989: ["frame1000000989"],
  frame427319334: ["frame427319334"],
  line8: ["line8", "frame1000000990"],
  frame1000000990: ["frame1000000990"],
  frame427319335: ["frame427319335"],
  line9: ["line9", "frame1000000991"],
  frame1000000991: ["frame1000000991"],
  frame427319336: ["frame427319336"],
  line10: ["line10", "frame1000000992"],
  frame1000000992: ["frame1000000992"],
  frame427319337: ["frame427319337"],
  line11: ["line11", "frame1000000993"],
  frame1000000993: ["frame1000000993"],
  frame427319344: ["frame427319344"],
  keyDelivarables: ["keyDelivarables"],
  ourSolutions: [
    "ourSolutions",
    "line12",
    "frame1000000994",
    "frame1000000980",
    "frame1000000976",
    "frame427319328",
    "line18",
    "frame1000001002",
    "frame1000001003",
    "frame1000001004",
    "frame427319342",
    "line19",
    "frame1000001005",
    "frame427319343"
  ],
  line12: ["line12", "frame1000000994", "frame1000000980", "frame1000000976"],
  frame1000000994: ["frame1000000994"],
  frame1000000980: ["frame1000000980", "frame1000000976"],
  frame1000000976: ["frame1000000976"],
  frame427319328: ["frame427319328"],
  line18: ["line18", "frame1000001002", "frame1000001003", "frame1000001004"],
  frame1000001002: ["frame1000001002"],
  frame1000001003: ["frame1000001003", "frame1000001004"],
  frame1000001004: ["frame1000001004"],
  frame427319342: ["frame427319342"],
  line19: ["line19", "frame1000001005"],
  frame1000001005: ["frame1000001005"],
  frame427319343: ["frame427319343"],
  solutions: ["solutions", "q1", "q14", "q16", "q18"],
  q1: ["q1"],
  q14: ["q14"],
  q16: ["q16"],
  q18: ["q18"],
  impactInNumbers: ["impactInNumbers"],
  conclusion: ["conclusion"],
  navFooter: ["navFooter"],
  navHeader: ["navHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "section";
  overview: "section";
  challeges: "section";
  line: "div";
  frame1000000975: "div";
  frame427319348: "div";
  line2: "div";
  frame1000000977: "div";
  frame427319349: "div";
  line3: "div";
  frame1000000979: "div";
  frame427319330: "div";
  line4: "div";
  frame1000000984: "div";
  frame427319331: "div";
  line5: "div";
  frame1000000987: "div";
  frame427319332: "div";
  line6: "div";
  frame1000000988: "div";
  frame427319333: "div";
  line7: "div";
  frame1000000989: "div";
  frame427319334: "div";
  line8: "div";
  frame1000000990: "div";
  frame427319335: "div";
  line9: "div";
  frame1000000991: "div";
  frame427319336: "div";
  line10: "div";
  frame1000000992: "div";
  frame427319337: "div";
  line11: "div";
  frame1000000993: "div";
  frame427319344: "div";
  keyDelivarables: "section";
  ourSolutions: "section";
  line12: "div";
  frame1000000994: "div";
  frame1000000980: "div";
  frame1000000976: "div";
  frame427319328: "div";
  line18: "div";
  frame1000001002: "div";
  frame1000001003: "div";
  frame1000001004: "div";
  frame427319342: "div";
  line19: "div";
  frame1000001005: "div";
  frame427319343: "div";
  solutions: "section";
  q1: "div";
  q14: "div";
  q16: "div";
  q18: "div";
  impactInNumbers: "section";
  conclusion: "section";
  navFooter: typeof NavFooter;
  navHeader: typeof NavHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHabuildCaseStudy__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHabuildCaseStudy__VariantsArgs;
    args?: PlasmicHabuildCaseStudy__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHabuildCaseStudy__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHabuildCaseStudy__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHabuildCaseStudy__ArgProps,
          internalVariantPropNames: PlasmicHabuildCaseStudy__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHabuildCaseStudy__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHabuildCaseStudy";
  } else {
    func.displayName = `PlasmicHabuildCaseStudy.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicHabuildCaseStudy = Object.assign(
  // Top-level PlasmicHabuildCaseStudy renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    overview: makeNodeComponent("overview"),
    challeges: makeNodeComponent("challeges"),
    line: makeNodeComponent("line"),
    frame1000000975: makeNodeComponent("frame1000000975"),
    frame427319348: makeNodeComponent("frame427319348"),
    line2: makeNodeComponent("line2"),
    frame1000000977: makeNodeComponent("frame1000000977"),
    frame427319349: makeNodeComponent("frame427319349"),
    line3: makeNodeComponent("line3"),
    frame1000000979: makeNodeComponent("frame1000000979"),
    frame427319330: makeNodeComponent("frame427319330"),
    line4: makeNodeComponent("line4"),
    frame1000000984: makeNodeComponent("frame1000000984"),
    frame427319331: makeNodeComponent("frame427319331"),
    line5: makeNodeComponent("line5"),
    frame1000000987: makeNodeComponent("frame1000000987"),
    frame427319332: makeNodeComponent("frame427319332"),
    line6: makeNodeComponent("line6"),
    frame1000000988: makeNodeComponent("frame1000000988"),
    frame427319333: makeNodeComponent("frame427319333"),
    line7: makeNodeComponent("line7"),
    frame1000000989: makeNodeComponent("frame1000000989"),
    frame427319334: makeNodeComponent("frame427319334"),
    line8: makeNodeComponent("line8"),
    frame1000000990: makeNodeComponent("frame1000000990"),
    frame427319335: makeNodeComponent("frame427319335"),
    line9: makeNodeComponent("line9"),
    frame1000000991: makeNodeComponent("frame1000000991"),
    frame427319336: makeNodeComponent("frame427319336"),
    line10: makeNodeComponent("line10"),
    frame1000000992: makeNodeComponent("frame1000000992"),
    frame427319337: makeNodeComponent("frame427319337"),
    line11: makeNodeComponent("line11"),
    frame1000000993: makeNodeComponent("frame1000000993"),
    frame427319344: makeNodeComponent("frame427319344"),
    keyDelivarables: makeNodeComponent("keyDelivarables"),
    ourSolutions: makeNodeComponent("ourSolutions"),
    line12: makeNodeComponent("line12"),
    frame1000000994: makeNodeComponent("frame1000000994"),
    frame1000000980: makeNodeComponent("frame1000000980"),
    frame1000000976: makeNodeComponent("frame1000000976"),
    frame427319328: makeNodeComponent("frame427319328"),
    line18: makeNodeComponent("line18"),
    frame1000001002: makeNodeComponent("frame1000001002"),
    frame1000001003: makeNodeComponent("frame1000001003"),
    frame1000001004: makeNodeComponent("frame1000001004"),
    frame427319342: makeNodeComponent("frame427319342"),
    line19: makeNodeComponent("line19"),
    frame1000001005: makeNodeComponent("frame1000001005"),
    frame427319343: makeNodeComponent("frame427319343"),
    solutions: makeNodeComponent("solutions"),
    q1: makeNodeComponent("q1"),
    q14: makeNodeComponent("q14"),
    q16: makeNodeComponent("q16"),
    q18: makeNodeComponent("q18"),
    impactInNumbers: makeNodeComponent("impactInNumbers"),
    conclusion: makeNodeComponent("conclusion"),
    navFooter: makeNodeComponent("navFooter"),
    navHeader: makeNodeComponent("navHeader"),

    // Metadata about props expected for PlasmicHabuildCaseStudy
    internalVariantProps: PlasmicHabuildCaseStudy__VariantProps,
    internalArgProps: PlasmicHabuildCaseStudy__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHabuildCaseStudy;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: kK8OQeoXq0eN

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicFullCycleSoftwareDevelopment.module.css"; // plasmic-import: kK8OQeoXq0eN/css

createPlasmicElementProxy;

export type PlasmicFullCycleSoftwareDevelopment__VariantMembers = {};
export type PlasmicFullCycleSoftwareDevelopment__VariantsArgs = {};
type VariantPropType = keyof PlasmicFullCycleSoftwareDevelopment__VariantsArgs;
export const PlasmicFullCycleSoftwareDevelopment__VariantProps =
  new Array<VariantPropType>();

export type PlasmicFullCycleSoftwareDevelopment__ArgsType = {};
type ArgPropType = keyof PlasmicFullCycleSoftwareDevelopment__ArgsType;
export const PlasmicFullCycleSoftwareDevelopment__ArgProps =
  new Array<ArgPropType>();

export type PlasmicFullCycleSoftwareDevelopment__OverridesType = {
  fullCycleSoftwareDevelopment?: Flex__<"section">;
  line?: Flex__<"div">;
  frame1000000975?: Flex__<"div">;
  frame1000000980?: Flex__<"div">;
  frame1000000976?: Flex__<"div">;
  frame427319328?: Flex__<"div">;
  line2?: Flex__<"div">;
  frame1000000977?: Flex__<"div">;
  frame1000000981?: Flex__<"div">;
  frame1000000978?: Flex__<"div">;
  frame427319329?: Flex__<"div">;
  line3?: Flex__<"div">;
  frame1000000979?: Flex__<"div">;
  frame1000000982?: Flex__<"div">;
  frame1000000983?: Flex__<"div">;
  frame427319330?: Flex__<"div">;
  line4?: Flex__<"div">;
  frame1000000984?: Flex__<"div">;
  frame1000000985?: Flex__<"div">;
  frame1000000986?: Flex__<"div">;
  frame427319331?: Flex__<"div">;
  line5?: Flex__<"div">;
  frame1000000987?: Flex__<"div">;
  frame1000000988?: Flex__<"div">;
  frame1000000989?: Flex__<"div">;
  frame427319332?: Flex__<"div">;
  line6?: Flex__<"div">;
  frame1000000990?: Flex__<"div">;
  frame427319333?: Flex__<"div">;
};

export interface DefaultFullCycleSoftwareDevelopmentProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFullCycleSoftwareDevelopment__RenderFunc(props: {
  variants: PlasmicFullCycleSoftwareDevelopment__VariantsArgs;
  args: PlasmicFullCycleSoftwareDevelopment__ArgsType;
  overrides: PlasmicFullCycleSoftwareDevelopment__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <section
      data-plasmic-name={"fullCycleSoftwareDevelopment"}
      data-plasmic-override={overrides.fullCycleSoftwareDevelopment}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_vidyayatan_landing_page_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.fullCycleSoftwareDevelopment
      )}
    >
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__rNd8B)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__w1KYz
          )}
        >
          {"Full-Cycle Software Development Management"}
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__evH80)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__afJw6)}
        >
          <div
            data-plasmic-name={"line"}
            data-plasmic-override={overrides.line}
            className={classNames(projectcss.all, sty.line)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000975"}
              data-plasmic-override={overrides.frame1000000975}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000975)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aJmo9
                )}
              >
                {"1"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000980"}
              data-plasmic-override={overrides.frame1000000980}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000980)}
            >
              <div
                data-plasmic-name={"frame1000000976"}
                data-plasmic-override={overrides.frame1000000976}
                className={classNames(projectcss.all, sty.frame1000000976)}
              />
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame427319328"}
            data-plasmic-override={overrides.frame427319328}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame427319328)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hb0Mf
              )}
            >
              {"Design"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__sAxfJ
              )}
            >
              {
                "Our designers will deliver engaging software prototypes, supported by technical oversight to ensure practical and robust design."
              }
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__ph0Gn)}
        >
          <div
            data-plasmic-name={"line2"}
            data-plasmic-override={overrides.line2}
            className={classNames(projectcss.all, sty.line2)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000977"}
              data-plasmic-override={overrides.frame1000000977}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000977)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__p1Qjf
                )}
              >
                {"2"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000981"}
              data-plasmic-override={overrides.frame1000000981}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000981)}
            >
              <div
                data-plasmic-name={"frame1000000978"}
                data-plasmic-override={overrides.frame1000000978}
                className={classNames(projectcss.all, sty.frame1000000978)}
              />
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame427319329"}
            data-plasmic-override={overrides.frame427319329}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame427319329)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__hQbe1
              )}
            >
              {"Development"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__iJwn4
              )}
            >
              {
                "Our experienced engineers will employ the latest technologies to create a resilient, scalable app designed to meet your business goals."
              }
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__wnisK)}
        >
          <div
            data-plasmic-name={"line3"}
            data-plasmic-override={overrides.line3}
            className={classNames(projectcss.all, sty.line3)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000979"}
              data-plasmic-override={overrides.frame1000000979}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000979)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rSbE2
                )}
              >
                {"3"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000982"}
              data-plasmic-override={overrides.frame1000000982}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000982)}
            >
              <div
                data-plasmic-name={"frame1000000983"}
                data-plasmic-override={overrides.frame1000000983}
                className={classNames(projectcss.all, sty.frame1000000983)}
              />
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame427319330"}
            data-plasmic-override={overrides.frame427319330}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame427319330)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__haqmP
              )}
            >
              {"Quality assurance"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__opx5K
              )}
            >
              {
                "Our QA experts will perform thorough evaluations of your software to guarantee smooth operation, with a focus on identifying and rectifying any defects."
              }
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__q8KjM)}
        >
          <div
            data-plasmic-name={"line4"}
            data-plasmic-override={overrides.line4}
            className={classNames(projectcss.all, sty.line4)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000984"}
              data-plasmic-override={overrides.frame1000000984}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000984)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9YWyc
                )}
              >
                {"4"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000985"}
              data-plasmic-override={overrides.frame1000000985}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000985)}
            >
              <div
                data-plasmic-name={"frame1000000986"}
                data-plasmic-override={overrides.frame1000000986}
                className={classNames(projectcss.all, sty.frame1000000986)}
              />
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame427319331"}
            data-plasmic-override={overrides.frame427319331}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame427319331)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___05MzZ
              )}
            >
              {"Deployment"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__mZgob
              )}
            >
              {
                "We\u2019ll handle the deployment process, making sure your platform is accessible to users through app stores using our direct market channels."
              }
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__f96W4)}
        >
          <div
            data-plasmic-name={"line5"}
            data-plasmic-override={overrides.line5}
            className={classNames(projectcss.all, sty.line5)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000987"}
              data-plasmic-override={overrides.frame1000000987}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000987)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rXj1Q
                )}
              >
                {"5"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000988"}
              data-plasmic-override={overrides.frame1000000988}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000988)}
            >
              <div
                data-plasmic-name={"frame1000000989"}
                data-plasmic-override={overrides.frame1000000989}
                className={classNames(projectcss.all, sty.frame1000000989)}
              />
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame427319332"}
            data-plasmic-override={overrides.frame427319332}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame427319332)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qv78Z
              )}
            >
              {"Maintenance"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__xAwa
              )}
            >
              {
                "Once launched, we\u2019ll oversee the ongoing maintenance of your software. Our services include continuous hosting and support to keep your app updated and performing flawlessly."
              }
            </div>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__gbCYp)}
        >
          <div
            data-plasmic-name={"line6"}
            data-plasmic-override={overrides.line6}
            className={classNames(projectcss.all, sty.line6)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"frame1000000990"}
              data-plasmic-override={overrides.frame1000000990}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame1000000990)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0PUdn
                )}
              >
                {"6"}
              </div>
            </Stack__>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"frame427319333"}
            data-plasmic-override={overrides.frame427319333}
            hasGap={true}
            className={classNames(projectcss.all, sty.frame427319333)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__od3Kj
              )}
            >
              {"Continuous growth"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qMcQ
              )}
            >
              {
                "Easily scale your team to align with your business growth. Gain the expertise and resources necessary to support your success."
              }
            </div>
          </Stack__>
        </Stack__>
      </Stack__>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  fullCycleSoftwareDevelopment: [
    "fullCycleSoftwareDevelopment",
    "line",
    "frame1000000975",
    "frame1000000980",
    "frame1000000976",
    "frame427319328",
    "line2",
    "frame1000000977",
    "frame1000000981",
    "frame1000000978",
    "frame427319329",
    "line3",
    "frame1000000979",
    "frame1000000982",
    "frame1000000983",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame1000000985",
    "frame1000000986",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame1000000988",
    "frame1000000989",
    "frame427319332",
    "line6",
    "frame1000000990",
    "frame427319333"
  ],
  line: ["line", "frame1000000975", "frame1000000980", "frame1000000976"],
  frame1000000975: ["frame1000000975"],
  frame1000000980: ["frame1000000980", "frame1000000976"],
  frame1000000976: ["frame1000000976"],
  frame427319328: ["frame427319328"],
  line2: ["line2", "frame1000000977", "frame1000000981", "frame1000000978"],
  frame1000000977: ["frame1000000977"],
  frame1000000981: ["frame1000000981", "frame1000000978"],
  frame1000000978: ["frame1000000978"],
  frame427319329: ["frame427319329"],
  line3: ["line3", "frame1000000979", "frame1000000982", "frame1000000983"],
  frame1000000979: ["frame1000000979"],
  frame1000000982: ["frame1000000982", "frame1000000983"],
  frame1000000983: ["frame1000000983"],
  frame427319330: ["frame427319330"],
  line4: ["line4", "frame1000000984", "frame1000000985", "frame1000000986"],
  frame1000000984: ["frame1000000984"],
  frame1000000985: ["frame1000000985", "frame1000000986"],
  frame1000000986: ["frame1000000986"],
  frame427319331: ["frame427319331"],
  line5: ["line5", "frame1000000987", "frame1000000988", "frame1000000989"],
  frame1000000987: ["frame1000000987"],
  frame1000000988: ["frame1000000988", "frame1000000989"],
  frame1000000989: ["frame1000000989"],
  frame427319332: ["frame427319332"],
  line6: ["line6", "frame1000000990"],
  frame1000000990: ["frame1000000990"],
  frame427319333: ["frame427319333"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  fullCycleSoftwareDevelopment: "section";
  line: "div";
  frame1000000975: "div";
  frame1000000980: "div";
  frame1000000976: "div";
  frame427319328: "div";
  line2: "div";
  frame1000000977: "div";
  frame1000000981: "div";
  frame1000000978: "div";
  frame427319329: "div";
  line3: "div";
  frame1000000979: "div";
  frame1000000982: "div";
  frame1000000983: "div";
  frame427319330: "div";
  line4: "div";
  frame1000000984: "div";
  frame1000000985: "div";
  frame1000000986: "div";
  frame427319331: "div";
  line5: "div";
  frame1000000987: "div";
  frame1000000988: "div";
  frame1000000989: "div";
  frame427319332: "div";
  line6: "div";
  frame1000000990: "div";
  frame427319333: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFullCycleSoftwareDevelopment__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFullCycleSoftwareDevelopment__VariantsArgs;
    args?: PlasmicFullCycleSoftwareDevelopment__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit< // Specify variants directly as props
    PlasmicFullCycleSoftwareDevelopment__VariantsArgs,
    ReservedPropsType
  > &
    /* Specify args directly as props*/ Omit<
      PlasmicFullCycleSoftwareDevelopment__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicFullCycleSoftwareDevelopment__ArgProps,
          internalVariantPropNames:
            PlasmicFullCycleSoftwareDevelopment__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFullCycleSoftwareDevelopment__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "fullCycleSoftwareDevelopment") {
    func.displayName = "PlasmicFullCycleSoftwareDevelopment";
  } else {
    func.displayName = `PlasmicFullCycleSoftwareDevelopment.${nodeName}`;
  }
  return func;
}

export const PlasmicFullCycleSoftwareDevelopment = Object.assign(
  // Top-level PlasmicFullCycleSoftwareDevelopment renders the root element
  makeNodeComponent("fullCycleSoftwareDevelopment"),
  {
    // Helper components rendering sub-elements
    line: makeNodeComponent("line"),
    frame1000000975: makeNodeComponent("frame1000000975"),
    frame1000000980: makeNodeComponent("frame1000000980"),
    frame1000000976: makeNodeComponent("frame1000000976"),
    frame427319328: makeNodeComponent("frame427319328"),
    line2: makeNodeComponent("line2"),
    frame1000000977: makeNodeComponent("frame1000000977"),
    frame1000000981: makeNodeComponent("frame1000000981"),
    frame1000000978: makeNodeComponent("frame1000000978"),
    frame427319329: makeNodeComponent("frame427319329"),
    line3: makeNodeComponent("line3"),
    frame1000000979: makeNodeComponent("frame1000000979"),
    frame1000000982: makeNodeComponent("frame1000000982"),
    frame1000000983: makeNodeComponent("frame1000000983"),
    frame427319330: makeNodeComponent("frame427319330"),
    line4: makeNodeComponent("line4"),
    frame1000000984: makeNodeComponent("frame1000000984"),
    frame1000000985: makeNodeComponent("frame1000000985"),
    frame1000000986: makeNodeComponent("frame1000000986"),
    frame427319331: makeNodeComponent("frame427319331"),
    line5: makeNodeComponent("line5"),
    frame1000000987: makeNodeComponent("frame1000000987"),
    frame1000000988: makeNodeComponent("frame1000000988"),
    frame1000000989: makeNodeComponent("frame1000000989"),
    frame427319332: makeNodeComponent("frame427319332"),
    line6: makeNodeComponent("line6"),
    frame1000000990: makeNodeComponent("frame1000000990"),
    frame427319333: makeNodeComponent("frame427319333"),

    // Metadata about props expected for PlasmicFullCycleSoftwareDevelopment
    internalVariantProps: PlasmicFullCycleSoftwareDevelopment__VariantProps,
    internalArgProps: PlasmicFullCycleSoftwareDevelopment__ArgProps
  }
);

export default PlasmicFullCycleSoftwareDevelopment;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: EPER6XBgkWz5

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import Button2 from "../../Button2"; // plasmic-import: iFFcBUnvZUl0/component
import WeExcelInSection from "../../WeExcelInSection"; // plasmic-import: GOGTEeayq0FO/component
import Testimonials from "../../Testimonials"; // plasmic-import: q8KVAm97HyX-/component
import FaqSection from "../../FaqSection"; // plasmic-import: BSnSueyvgk6P/component
import ConnectWithUs from "../../ConnectWithUs"; // plasmic-import: w9fJfCJ45KHV/component
import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicUiUxDesignServices.module.css"; // plasmic-import: EPER6XBgkWz5/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tSFoGfIVWAwT/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: FoPRmBUdi-FM/icon
import Frame18Icon from "./icons/PlasmicIcon__Frame18"; // plasmic-import: n4n-qgslZ89z/icon
import Frame9Icon from "./icons/PlasmicIcon__Frame9"; // plasmic-import: BeC73lXIzA9b/icon
import Frame46Icon from "./icons/PlasmicIcon__Frame46"; // plasmic-import: z7C0aShKl-zi/icon
import Frame50Icon from "./icons/PlasmicIcon__Frame50"; // plasmic-import: Jl22KJcan1vr/icon
import Frame34Icon from "./icons/PlasmicIcon__Frame34"; // plasmic-import: SzohbHgr1-om/icon
import Frame8Icon from "./icons/PlasmicIcon__Frame8"; // plasmic-import: X78MX0X2Vsrq/icon
import Frame48Icon from "./icons/PlasmicIcon__Frame48"; // plasmic-import: T3HYn4Zp7IFd/icon
import Frame5Icon from "./icons/PlasmicIcon__Frame5"; // plasmic-import: jElqlrDEH9Gg/icon

createPlasmicElementProxy;

export type PlasmicUiUxDesignServices__VariantMembers = {};
export type PlasmicUiUxDesignServices__VariantsArgs = {};
type VariantPropType = keyof PlasmicUiUxDesignServices__VariantsArgs;
export const PlasmicUiUxDesignServices__VariantProps =
  new Array<VariantPropType>();

export type PlasmicUiUxDesignServices__ArgsType = {};
type ArgPropType = keyof PlasmicUiUxDesignServices__ArgsType;
export const PlasmicUiUxDesignServices__ArgProps = new Array<ArgPropType>();

export type PlasmicUiUxDesignServices__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"section">;
  trustedBy?: Flex__<"section">;
  whyChooseVidyayatan?: Flex__<"section">;
  frame1000000978?: Flex__<"div">;
  frame1000000982?: Flex__<"div">;
  frame1000000983?: Flex__<"div">;
  weExcelInSection?: Flex__<typeof WeExcelInSection>;
  whyChooseVidyayatan3?: Flex__<"section">;
  frame1000000977?: Flex__<"div">;
  frame1000000979?: Flex__<"div">;
  developmentTeamStructureOverview?: Flex__<"section">;
  frame427319338?: Flex__<"div">;
  frame427319339?: Flex__<"div">;
  frame427319340?: Flex__<"div">;
  frame427319341?: Flex__<"div">;
  frame427319342?: Flex__<"div">;
  frame427319343?: Flex__<"div">;
  testimonials?: Flex__<typeof Testimonials>;
  faqSection?: Flex__<typeof FaqSection>;
  connectWithUs?: Flex__<typeof ConnectWithUs>;
  navFooter?: Flex__<typeof NavFooter>;
  navHeader?: Flex__<typeof NavHeader>;
};

export interface DefaultUiUxDesignServicesProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicUiUxDesignServices__RenderFunc(props: {
  variants: PlasmicUiUxDesignServices__VariantsArgs;
  args: PlasmicUiUxDesignServices__ArgsType;
  overrides: PlasmicUiUxDesignServices__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__e400Z)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__uSq8C)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ftufV)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z0ELz
                    )}
                  >
                    {"UI UX Design Services"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zn3Ru
                    )}
                  >
                    {
                      "Collaborate with our top-tier UI/UX Design team to bring your vision to reality. Our Blueprint Service lets you fully plan your software development project before coding starts."
                    }
                  </div>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__pDpK3)}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                  target={true}
                >
                  {"Book meeting"}
                </Button2>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__qGoaS)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___3FCzm)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/naDec21Converted1Png.png",
                    fullWidth: 12000,
                    fullHeight: 8000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"trustedBy"}
            data-plasmic-override={overrides.trustedBy}
            className={classNames(projectcss.all, sty.trustedBy)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hj9PJ)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bfQwc
                )}
              >
                {"Trusted by"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fcm8F)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__zn8Ty)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__gxUcL)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__dWx98)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/labourLinkLogo1Png2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__fZ5W)}>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ioTv8)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___3TfU1)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__dm6Tj)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "28px"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__xdodl)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jFfDn)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___86RXx)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___9SHnr)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__uRFav)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng3.png",
                        fullWidth: 1116,
                        fullHeight: 192,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__kVYwL)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__tcuHz)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__tGgrG)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__njf)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__d2VIz)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ewTon)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyChooseVidyayatan"}
            data-plasmic-override={overrides.whyChooseVidyayatan}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__v8ZfM)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xi4Zy
                )}
              >
                {"Bespoke Interface Design"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___6CErC)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___935Dd)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__d1CtZ
                  )}
                >
                  {
                    "Our dedicated UX and UI design teams drive the product design process for forward-thinking companies, delivering user-centric and visually striking interfaces."
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wyz3P)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000978"}
                    data-plasmic-override={overrides.frame1000000978}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000978)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gPiYx
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nrheV)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b3Obw
                      )}
                    >
                      {"What You Provide"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hp1M
                      )}
                    >
                      {
                        "The key issue and the experts who know the problem best."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kRKhb)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000982"}
                    data-plasmic-override={overrides.frame1000000982}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000982)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__daemP
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4DYc1)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wpPMj
                      )}
                    >
                      {"Where Ideas Become Reality"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d6Ytr
                      )}
                    >
                      {
                        "From concept to prototype in 10 days, thanks to our team's daily iterations."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dOzEp)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000983"}
                    data-plasmic-override={overrides.frame1000000983}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000983)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hlObg
                      )}
                    >
                      {"3"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__nASl8)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__glqd5
                      )}
                    >
                      {"What We Deliver"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lNCuV
                      )}
                    >
                      {
                        "A ready-to-go prototype, set for Engineering to transform into a live product."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2___7PSDr)}
                  endIcon={
                    <Frame18Icon
                      className={classNames(projectcss.all, sty.svg__ogIEb)}
                      role={"img"}
                    />
                  }
                  link={`/contact-page`}
                  shape={"rounded"}
                >
                  {"Get in Touch"}
                </Button2>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__gqZmj)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___4CySz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/uiDesignServicePng.png",
                    fullWidth: 4508,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <WeExcelInSection
            data-plasmic-name={"weExcelInSection"}
            data-plasmic-override={overrides.weExcelInSection}
            className={classNames("__wab_instance", sty.weExcelInSection)}
          />

          <section
            data-plasmic-name={"whyChooseVidyayatan3"}
            data-plasmic-override={overrides.whyChooseVidyayatan3}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan3)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kBhRe)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5ULdh
                )}
              >
                {"Professional UI/UX Design Solutions"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___0WZk)}
            >
              <div className={classNames(projectcss.all, sty.column__riGCo)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__tVuoV)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/uiDesignService2Png.png",
                    fullWidth: 4725,
                    fullHeight: 4800,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__xihLt)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mzqrr
                  )}
                >
                  {
                    "User interface design, or user interface engineering, involves creating interfaces for machines and software, including computers, web applications, mobile devices, and other platforms, with a primary focus on enhancing usability and optimizing the overall user experience."
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___5OHmP)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000977"}
                    data-plasmic-override={overrides.frame1000000977}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000977)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6KoOs
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__anzQ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uj0Kk
                      )}
                    >
                      {"User interface (UI) "}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__riKce
                      )}
                    >
                      {
                        "The user interface (UI) is where human-computer interaction occurs, encompassing elements like display screens, keyboards, mice, and the overall appearance of a desktop. It serves as the bridge for communication between the user and the device."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__yvpqt)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000979"}
                    data-plasmic-override={overrides.frame1000000979}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000979)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gi4C
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__inBHz)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bEhPo
                      )}
                    >
                      {"User Experience (UX)"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q02D
                      )}
                    >
                      {
                        "User experience (UX) encompasses how individuals interact with and perceive a product, system, or service. It includes their overall impressions of its utility, ease of use, and efficiency."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__tKuXz)}
                  endIcon={
                    <Frame18Icon
                      className={classNames(projectcss.all, sty.svg__mG31Y)}
                      role={"img"}
                    />
                  }
                  link={`/contact-page`}
                  shape={"rounded"}
                >
                  {"Get in Touch"}
                </Button2>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"developmentTeamStructureOverview"}
            data-plasmic-override={overrides.developmentTeamStructureOverview}
            className={classNames(
              projectcss.all,
              sty.developmentTeamStructureOverview
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rRrel)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kp6Bs
                )}
              >
                {"Our Software Development Workflow"}
              </div>
              <Button2
                className={classNames("__wab_instance", sty.button2__fQe7E)}
                color={"softPeriwinkleBlue"}
                endIcon={
                  <Frame9Icon
                    className={classNames(projectcss.all, sty.svg__pZoHu)}
                    role={"img"}
                  />
                }
                showEndIcon={true}
              >
                {"Google Form"}
              </Button2>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jAfyF)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__kze5A)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__p2Y)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319338"}
                    data-plasmic-override={overrides.frame427319338}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319338)}
                  >
                    <Frame46Icon
                      className={classNames(projectcss.all, sty.svg__w3O1N)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__xpdbc)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0I4Ns
                      )}
                    >
                      {"Project Kickstart"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aAm4I
                      )}
                    >
                      {
                        "Complete our form with your project information and software idea. We're excited to get started."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__nxw0P)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319339"}
                    data-plasmic-override={overrides.frame427319339}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319339)}
                  >
                    <Frame50Icon
                      className={classNames(projectcss.all, sty.svg___10Khs)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ej08U)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pGL
                      )}
                    >
                      {"Prototype Design"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gIw4
                      )}
                    >
                      {
                        "Our talented design team will craft a working prototype, allowing you to visualize the design and functionality of your software."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__n9T5A)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319340"}
                    data-plasmic-override={overrides.frame427319340}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319340)}
                  >
                    <Frame34Icon
                      className={classNames(projectcss.all, sty.svg__ui41E)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sQlOq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ese7
                      )}
                    >
                      {"Product Deployment"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s3Yvo
                      )}
                    >
                      {
                        "Expect consistent updates and progress reports from your dedicated project manager, ensuring you're always informed about the project\u2019s status."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__nl2Wt)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__nCwNx)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319341"}
                    data-plasmic-override={overrides.frame427319341}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319341)}
                  >
                    <Frame8Icon
                      className={classNames(projectcss.all, sty.svg___4VpPn)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rEqHi)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7P8QJ
                      )}
                    >
                      {"Meet Your Experts"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7K57
                      )}
                    >
                      {
                        "Get to know your dedicated team of top Engineers, Analysts, Scrum Masters, and QA Testers."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___2W4Dv)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319342"}
                    data-plasmic-override={overrides.frame427319342}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319342)}
                  >
                    <Frame48Icon
                      className={classNames(projectcss.all, sty.svg__jD7Io)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qhkz9)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fs6MH
                      )}
                    >
                      {"Software Development"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kzwVp
                      )}
                    >
                      {
                        "Your project is realized through the expertise of our software engineers, leveraging the most current technologies in the industry."
                      }
                    </div>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___72FKb)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319343"}
                    data-plasmic-override={overrides.frame427319343}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319343)}
                  >
                    <Frame5Icon
                      className={classNames(projectcss.all, sty.svg__umPxj)}
                      role={"img"}
                    />
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lrzSr)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uiAx3
                      )}
                    >
                      {"Dedicated Maintenance & Support"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__b10Nh
                      )}
                    >
                      {
                        "Keep your software in top shape with our premium support and maintenance services. Our team ensures seamless updates and expert assistance for optimal performance."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <Testimonials
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames("__wab_instance", sty.testimonials)}
          />

          <FaqSection
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          />

          <ConnectWithUs
            data-plasmic-name={"connectWithUs"}
            data-plasmic-override={overrides.connectWithUs}
            className={classNames("__wab_instance", sty.connectWithUs)}
          />

          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />

          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "trustedBy",
    "whyChooseVidyayatan",
    "frame1000000978",
    "frame1000000982",
    "frame1000000983",
    "weExcelInSection",
    "whyChooseVidyayatan3",
    "frame1000000977",
    "frame1000000979",
    "developmentTeamStructureOverview",
    "frame427319338",
    "frame427319339",
    "frame427319340",
    "frame427319341",
    "frame427319342",
    "frame427319343",
    "testimonials",
    "faqSection",
    "connectWithUs",
    "navFooter",
    "navHeader"
  ],
  heroSection: ["heroSection"],
  trustedBy: ["trustedBy"],
  whyChooseVidyayatan: [
    "whyChooseVidyayatan",
    "frame1000000978",
    "frame1000000982",
    "frame1000000983"
  ],
  frame1000000978: ["frame1000000978"],
  frame1000000982: ["frame1000000982"],
  frame1000000983: ["frame1000000983"],
  weExcelInSection: ["weExcelInSection"],
  whyChooseVidyayatan3: [
    "whyChooseVidyayatan3",
    "frame1000000977",
    "frame1000000979"
  ],
  frame1000000977: ["frame1000000977"],
  frame1000000979: ["frame1000000979"],
  developmentTeamStructureOverview: [
    "developmentTeamStructureOverview",
    "frame427319338",
    "frame427319339",
    "frame427319340",
    "frame427319341",
    "frame427319342",
    "frame427319343"
  ],
  frame427319338: ["frame427319338"],
  frame427319339: ["frame427319339"],
  frame427319340: ["frame427319340"],
  frame427319341: ["frame427319341"],
  frame427319342: ["frame427319342"],
  frame427319343: ["frame427319343"],
  testimonials: ["testimonials"],
  faqSection: ["faqSection"],
  connectWithUs: ["connectWithUs"],
  navFooter: ["navFooter"],
  navHeader: ["navHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "section";
  trustedBy: "section";
  whyChooseVidyayatan: "section";
  frame1000000978: "div";
  frame1000000982: "div";
  frame1000000983: "div";
  weExcelInSection: typeof WeExcelInSection;
  whyChooseVidyayatan3: "section";
  frame1000000977: "div";
  frame1000000979: "div";
  developmentTeamStructureOverview: "section";
  frame427319338: "div";
  frame427319339: "div";
  frame427319340: "div";
  frame427319341: "div";
  frame427319342: "div";
  frame427319343: "div";
  testimonials: typeof Testimonials;
  faqSection: typeof FaqSection;
  connectWithUs: typeof ConnectWithUs;
  navFooter: typeof NavFooter;
  navHeader: typeof NavHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicUiUxDesignServices__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicUiUxDesignServices__VariantsArgs;
    args?: PlasmicUiUxDesignServices__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicUiUxDesignServices__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicUiUxDesignServices__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicUiUxDesignServices__ArgProps,
          internalVariantPropNames: PlasmicUiUxDesignServices__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicUiUxDesignServices__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicUiUxDesignServices";
  } else {
    func.displayName = `PlasmicUiUxDesignServices.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicUiUxDesignServices = Object.assign(
  // Top-level PlasmicUiUxDesignServices renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    trustedBy: makeNodeComponent("trustedBy"),
    whyChooseVidyayatan: makeNodeComponent("whyChooseVidyayatan"),
    frame1000000978: makeNodeComponent("frame1000000978"),
    frame1000000982: makeNodeComponent("frame1000000982"),
    frame1000000983: makeNodeComponent("frame1000000983"),
    weExcelInSection: makeNodeComponent("weExcelInSection"),
    whyChooseVidyayatan3: makeNodeComponent("whyChooseVidyayatan3"),
    frame1000000977: makeNodeComponent("frame1000000977"),
    frame1000000979: makeNodeComponent("frame1000000979"),
    developmentTeamStructureOverview: makeNodeComponent(
      "developmentTeamStructureOverview"
    ),
    frame427319338: makeNodeComponent("frame427319338"),
    frame427319339: makeNodeComponent("frame427319339"),
    frame427319340: makeNodeComponent("frame427319340"),
    frame427319341: makeNodeComponent("frame427319341"),
    frame427319342: makeNodeComponent("frame427319342"),
    frame427319343: makeNodeComponent("frame427319343"),
    testimonials: makeNodeComponent("testimonials"),
    faqSection: makeNodeComponent("faqSection"),
    connectWithUs: makeNodeComponent("connectWithUs"),
    navFooter: makeNodeComponent("navFooter"),
    navHeader: makeNodeComponent("navHeader"),

    // Metadata about props expected for PlasmicUiUxDesignServices
    internalVariantProps: PlasmicUiUxDesignServices__VariantProps,
    internalArgProps: PlasmicUiUxDesignServices__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicUiUxDesignServices;
/* prettier-ignore-end */

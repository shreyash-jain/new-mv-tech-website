// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: FaTv8gX5y4bP

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicComparisonSection.module.css"; // plasmic-import: FaTv8gX5y4bP/css

import Frame21Icon from "./icons/PlasmicIcon__Frame21"; // plasmic-import: xj_RbYOmwGik/icon
import Frame20Icon from "./icons/PlasmicIcon__Frame20"; // plasmic-import: 6tYQqlLmStc2/icon

createPlasmicElementProxy;

export type PlasmicComparisonSection__VariantMembers = {};
export type PlasmicComparisonSection__VariantsArgs = {};
type VariantPropType = keyof PlasmicComparisonSection__VariantsArgs;
export const PlasmicComparisonSection__VariantProps =
  new Array<VariantPropType>();

export type PlasmicComparisonSection__ArgsType = {};
type ArgPropType = keyof PlasmicComparisonSection__ArgsType;
export const PlasmicComparisonSection__ArgProps = new Array<ArgPropType>();

export type PlasmicComparisonSection__OverridesType = {
  comparisonSection?: Flex__<"section">;
  columns?: Flex__<"div">;
};

export interface DefaultComparisonSectionProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicComparisonSection__RenderFunc(props: {
  variants: PlasmicComparisonSection__VariantsArgs;
  args: PlasmicComparisonSection__ArgsType;
  overrides: PlasmicComparisonSection__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <section
      data-plasmic-name={"comparisonSection"}
      data-plasmic-override={overrides.comparisonSection}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_vidyayatan_landing_page_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.comparisonSection
      )}
    >
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__eqPxr)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__oNfQb)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rrl4R
            )}
          >
            {"The MV Advantage"}
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__jw9Oq)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___7GGht
            )}
          >
            {
              "Discover the key reasons why MV Technologies consistently outperforms traditional solutions, offering unparalleled efficiency, innovation, and value that set us apart from the rest."
            }
          </div>
        </div>
      </Stack__>
      <div
        data-plasmic-name={"columns"}
        data-plasmic-override={overrides.columns}
        className={classNames(projectcss.all, sty.columns)}
      >
        <div className={classNames(projectcss.all, sty.column___5CrVa)}>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__p9Ide)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zefye
              )}
            >
              {"Market Alternatives"}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pC4W0)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6BhXv)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vnQ7K
                  )}
                >
                  {"Customized Solutions"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg___9V7HU)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___8U93Y)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__j0Vhu
                  )}
                >
                  {"Seamless System Integration"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg__rmJpa)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nCe0D)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qmL19
                  )}
                >
                  {"Industry - Specific Expertise"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg__lZRt)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qj1En)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2LCq6
                  )}
                >
                  {"24/7 Support"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg___7YhKw)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__bopeW)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bbwUl
                  )}
                >
                  {"Cost-Effective Pricing"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg__rMrc0)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__opD5Q)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1WzWp
                  )}
                >
                  {"Rapid Deployment and Delivery"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg__rM3Fo)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___35ZtW)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__flVR
                  )}
                >
                  {"Complete Documentation & Training"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg__bQtPj)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ndTPb)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__veD3W
                  )}
                >
                  {"Scalable and Flexible Solution"}
                </div>
                <Frame20Icon
                  className={classNames(projectcss.all, sty.svg__hrzvb)}
                  role={"img"}
                />
              </Stack__>
            </Stack__>
          </Stack__>
        </div>
        <div className={classNames(projectcss.all, sty.column__vGdDh)}>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__y4HQ)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fqGzQ
              )}
            >
              {"MV Technologies"}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__okas4)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cfvE4)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jbWsh
                  )}
                >
                  {"Customized Solutions"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__aFNf)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dFfKj)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ijUnY
                  )}
                >
                  {"Seamless System Integration"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg___0A511)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qrOlj)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gUh
                  )}
                >
                  {"Industry - Specific Expertise"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__riB52)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vQU)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qAarj
                  )}
                >
                  {"24/7 Support"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__gr94Q)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pvyI)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xEdo3
                  )}
                >
                  {"Cost-Effective Pricing"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__swW0M)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wUu3J)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bYqx
                  )}
                >
                  {"Rapid Deployment and Delivery"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__z95Cj)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ez9Fi)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wuXhe
                  )}
                >
                  {"Complete Documentation & Training"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__l8TY)}
                  role={"img"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__guPpm)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__j5TIa
                  )}
                >
                  {"Scalable and Flexible Solution"}
                </div>
                <Frame21Icon
                  className={classNames(projectcss.all, sty.svg__hIjnH)}
                  role={"img"}
                />
              </Stack__>
            </Stack__>
          </Stack__>
        </div>
      </div>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  comparisonSection: ["comparisonSection", "columns"],
  columns: ["columns"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  comparisonSection: "section";
  columns: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicComparisonSection__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicComparisonSection__VariantsArgs;
    args?: PlasmicComparisonSection__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicComparisonSection__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicComparisonSection__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicComparisonSection__ArgProps,
          internalVariantPropNames: PlasmicComparisonSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicComparisonSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "comparisonSection") {
    func.displayName = "PlasmicComparisonSection";
  } else {
    func.displayName = `PlasmicComparisonSection.${nodeName}`;
  }
  return func;
}

export const PlasmicComparisonSection = Object.assign(
  // Top-level PlasmicComparisonSection renders the root element
  makeNodeComponent("comparisonSection"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),

    // Metadata about props expected for PlasmicComparisonSection
    internalVariantProps: PlasmicComparisonSection__VariantProps,
    internalArgProps: PlasmicComparisonSection__ArgProps
  }
);

export default PlasmicComparisonSection;
/* prettier-ignore-end */

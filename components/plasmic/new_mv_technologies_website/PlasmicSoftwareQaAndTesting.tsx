// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: hEAM6mdVSet-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import Button2 from "../../Button2"; // plasmic-import: iFFcBUnvZUl0/component
import CaseStudiesSection from "../../CaseStudiesSection"; // plasmic-import: 8UZVGOKdExLM/component
import Testimonials from "../../Testimonials"; // plasmic-import: q8KVAm97HyX-/component
import FaqSection from "../../FaqSection"; // plasmic-import: BSnSueyvgk6P/component
import ConnectWithUs from "../../ConnectWithUs"; // plasmic-import: w9fJfCJ45KHV/component
import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicSoftwareQaAndTesting.module.css"; // plasmic-import: hEAM6mdVSet-/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tSFoGfIVWAwT/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: FoPRmBUdi-FM/icon
import Frame53Icon from "./icons/PlasmicIcon__Frame53"; // plasmic-import: Aalt8xkuCPcf/icon
import Frame54Icon from "./icons/PlasmicIcon__Frame54"; // plasmic-import: Q12t37D_omS_/icon
import Frame55Icon from "./icons/PlasmicIcon__Frame55"; // plasmic-import: QSO5mDHHHMUu/icon
import Frame37Icon from "./icons/PlasmicIcon__Frame37"; // plasmic-import: cB8KooTDO7hj/icon
import Frame35Icon from "./icons/PlasmicIcon__Frame35"; // plasmic-import: Xo8YGBtW_pZe/icon
import Frame56Icon from "./icons/PlasmicIcon__Frame56"; // plasmic-import: GM_QnSrqVQu5/icon
import Frame14Icon from "./icons/PlasmicIcon__Frame14"; // plasmic-import: xTAdjC1CrvhS/icon
import Frame51Icon from "./icons/PlasmicIcon__Frame51"; // plasmic-import: cA9AlvcOEqte/icon

createPlasmicElementProxy;

export type PlasmicSoftwareQaAndTesting__VariantMembers = {};
export type PlasmicSoftwareQaAndTesting__VariantsArgs = {};
type VariantPropType = keyof PlasmicSoftwareQaAndTesting__VariantsArgs;
export const PlasmicSoftwareQaAndTesting__VariantProps =
  new Array<VariantPropType>();

export type PlasmicSoftwareQaAndTesting__ArgsType = {
  q12?: React.ReactNode;
  q13?: React.ReactNode;
  q15?: React.ReactNode;
  q17?: React.ReactNode;
};
type ArgPropType = keyof PlasmicSoftwareQaAndTesting__ArgsType;
export const PlasmicSoftwareQaAndTesting__ArgProps = new Array<ArgPropType>(
  "q12",
  "q13",
  "q15",
  "q17"
);

export type PlasmicSoftwareQaAndTesting__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"section">;
  trustedBy?: Flex__<"section">;
  whyChooseVidyayatan?: Flex__<"section">;
  qualityProducts?: Flex__<"div">;
  frame427319326?: Flex__<"div">;
  frame427319327?: Flex__<"div">;
  qualityProducts2?: Flex__<"div">;
  frame427319334?: Flex__<"div">;
  frame427319335?: Flex__<"div">;
  qualityProducts3?: Flex__<"div">;
  frame427319336?: Flex__<"div">;
  frame427319337?: Flex__<"div">;
  whyVidyayatan?: Flex__<"section">;
  q1?: Flex__<"div">;
  q14?: Flex__<"div">;
  q16?: Flex__<"div">;
  q18?: Flex__<"div">;
  convertSection?: Flex__<"section">;
  aiUseCases?: Flex__<"section">;
  line?: Flex__<"div">;
  frame1000000975?: Flex__<"div">;
  frame427319348?: Flex__<"div">;
  line2?: Flex__<"div">;
  frame1000000977?: Flex__<"div">;
  frame427319349?: Flex__<"div">;
  line3?: Flex__<"div">;
  frame1000000979?: Flex__<"div">;
  frame427319330?: Flex__<"div">;
  line4?: Flex__<"div">;
  frame1000000984?: Flex__<"div">;
  frame427319331?: Flex__<"div">;
  line5?: Flex__<"div">;
  frame1000000987?: Flex__<"div">;
  frame427319332?: Flex__<"div">;
  line6?: Flex__<"div">;
  frame1000000988?: Flex__<"div">;
  frame427319333?: Flex__<"div">;
  caseStudiesSection?: Flex__<typeof CaseStudiesSection>;
  whyChooseVidyayatan2?: Flex__<"section">;
  qualityProducts4?: Flex__<"div">;
  frame427319338?: Flex__<"div">;
  frame427319339?: Flex__<"div">;
  qualityProducts5?: Flex__<"div">;
  frame427319340?: Flex__<"div">;
  frame427319341?: Flex__<"div">;
  qualityProducts6?: Flex__<"div">;
  frame427319342?: Flex__<"div">;
  frame427319343?: Flex__<"div">;
  testimonials?: Flex__<typeof Testimonials>;
  faqSection?: Flex__<typeof FaqSection>;
  connectWithUs?: Flex__<typeof ConnectWithUs>;
  navFooter?: Flex__<typeof NavFooter>;
  navHeader?: Flex__<typeof NavHeader>;
};

export interface DefaultSoftwareQaAndTestingProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSoftwareQaAndTesting__RenderFunc(props: {
  variants: PlasmicSoftwareQaAndTesting__VariantsArgs;
  args: PlasmicSoftwareQaAndTesting__ArgsType;
  overrides: PlasmicSoftwareQaAndTesting__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
          onScroll={async event => {
            const $steps = {};
          }}
        >
          <section
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__jyRwd)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__brmyp)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__bgUhM)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bmOLy
                    )}
                  >
                    {"Top-Notch QA & QC Testing Talent"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__y10HN
                    )}
                  >
                    {
                      "Enhance your software quality with MV Technologies' expert QA and QC testers. Our specialists ensure seamless performance and reliability for growing companies and enterprises."
                    }
                  </div>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__eRh0F)}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                  target={true}
                >
                  {"Book meeting"}
                </Button2>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__aAge)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__gXGi)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/softwareQaAndTestingHeroPng.png",
                    fullWidth: 12228,
                    fullHeight: 10696,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"trustedBy"}
            data-plasmic-override={overrides.trustedBy}
            className={classNames(projectcss.all, sty.trustedBy)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__zpyJp)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yfOp3
                )}
              >
                {"Trusted by"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___7Ge9)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__gDQe2)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__x6A4U)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__rPcuU)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/labourLinkLogo1Png2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__dLcI0)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__t6OJd)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___9V5X)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__gpEv2)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "28px"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__tYz61)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__r804G)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__nVGb)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__gcIqj)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xrJxo)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng3.png",
                        fullWidth: 1116,
                        fullHeight: 192,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__xDaG)}>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___7FCIh)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___01K6F)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lnf5M)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__zLtK7)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__tbSUq)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyChooseVidyayatan"}
            data-plasmic-override={overrides.whyChooseVidyayatan}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fUGp4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ceRfV
                )}
              >
                {"QA, QC, and Testing Explained"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qukB
                )}
              >
                {
                  "In IT, Quality Assurance (QA), Quality Control (QC), and Testing are often confused for one another. It's important to understand that each of these processes serves a different function, though they're frequently misunderstood by companies and clients alike. Let's clear up the confusion."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__txjyH)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__bW5Ys)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts"}
                  data-plasmic-override={overrides.qualityProducts}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319326"}
                    data-plasmic-override={overrides.frame427319326}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319326)}
                  >
                    <Frame53Icon
                      className={classNames(projectcss.all, sty.svg__fkx8X)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319327"}
                    data-plasmic-override={overrides.frame427319327}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319327)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kfoTr
                      )}
                    >
                      {"Quality assurance (QA)"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pn0RB
                      )}
                    >
                      {
                        "Quality Assurance (QA) establishes and adheres to processes aimed at preventing defects by focusing on identifying root causes and improving systems. Key practices include process auditing, employee training, and selecting the right tools for continuous improvement."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts2"}
                  data-plasmic-override={overrides.qualityProducts2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319334"}
                    data-plasmic-override={overrides.frame427319334}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319334)}
                  >
                    <Frame54Icon
                      className={classNames(projectcss.all, sty.svg__pb1Af)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319335"}
                    data-plasmic-override={overrides.frame427319335}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319335)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q8O2K
                      )}
                    >
                      {"Quality control (QC)"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zMlQw
                      )}
                    >
                      {
                        "Quality Control (QC) focuses on examining the final product to identify defects and ensure it meets established standards. This process includes technical reviews, testing procedures, and thorough code inspections."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts3"}
                  data-plasmic-override={overrides.qualityProducts3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319336"}
                    data-plasmic-override={overrides.frame427319336}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319336)}
                  >
                    <Frame55Icon
                      className={classNames(projectcss.all, sty.svg___3LcT8)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319337"}
                    data-plasmic-override={overrides.frame427319337}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319337)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tQKm8
                      )}
                    >
                      {"Testing"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wz0C9
                      )}
                    >
                      {
                        "Testing, a crucial aspect of quality control, entails running a system to uncover and fix bugs, ensuring the product operates as intended and meets design specifications."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__hL56)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__eDiLq)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/qaAndTestingPng.png",
                    fullWidth: 2000,
                    fullHeight: 2000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyVidyayatan"}
            data-plasmic-override={overrides.whyVidyayatan}
            className={classNames(projectcss.all, sty.whyVidyayatan)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tPKpo)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eukN9
                )}
              >
                {"Cost-effective QA, QC, and Testing"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__b0Mtq
                )}
              >
                {
                  "At MV Technologies, we specialize in delivering top-tier Quality Assurance, Quality Control, and Testing services. Our skilled QA team ensures your software meets the highest standards at every stage. Count on us to provide dependable, high-performance QA testers that consistently exceed expectations."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__nADtU)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__zbpsK)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q1"}
                  data-plasmic-override={overrides.q1}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q1)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame37Icon
                        className={classNames(projectcss.all, sty.svg___0Pa9D)}
                        role={"img"}
                      />
                    ),

                    value: args.q12
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___4B1PP)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iii4
                    )}
                  >
                    {"Optimised Product Quality"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kxVhK
                    )}
                  >
                    {
                      "Guarantee flawless software performance with our all-encompassing QA, QC, and Testing services. Enhance user satisfaction while minimizing expensive post-launch corrections."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___60TwV)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q14"}
                  data-plasmic-override={overrides.q14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q14)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame35Icon
                        className={classNames(projectcss.all, sty.svg__t0Oyl)}
                        role={"img"}
                      />
                    ),

                    value: args.q13
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8Pzy)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xN61F
                    )}
                  >
                    {"Speedy Product Launch"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gtBef
                    )}
                  >
                    {
                      "Boost your development timeline by addressing issues early, enabling faster product delivery without sacrificing quality. Keep your launch on track with efficient processes."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__eSuOy)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q16"}
                  data-plasmic-override={overrides.q16}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q16)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame56Icon
                        className={classNames(projectcss.all, sty.svg__wa7Id)}
                        role={"img"}
                      />
                    ),

                    value: args.q15
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wr8Uc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dArqs
                    )}
                  >
                    {"Minimized Risk"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zenGf
                    )}
                  >
                    {
                      "Safeguard your business by ensuring all software meets top-quality standards and regulatory requirements before market release, effectively reducing potential risks."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___0Io6Q)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q18"}
                  data-plasmic-override={overrides.q18}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q18)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame14Icon
                        className={classNames(projectcss.all, sty.svg__by12I)}
                        role={"img"}
                      />
                    ),

                    value: args.q17
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wnex)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vtlrt
                    )}
                  >
                    {"Cost Efficiency"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8DJ8
                    )}
                  >
                    {
                      "Reduce development expenses with our expert quality assurance team, minimizing revisions and preventing costly defects, ensuring a more budget-friendly process."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"convertSection"}
            data-plasmic-override={overrides.convertSection}
            className={classNames(projectcss.all, sty.convertSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__va4W2)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dkqMn
                )}
              >
                {"Looking for top-value quality assurance testers?"}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__e7LtY)}
            >
              <div className={classNames(projectcss.all, sty.column__l5Zl0)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__bNtx)}
                  color={"white"}
                  link={`/pricing-page`}
                  shape={"rounded"}
                >
                  {"View Pricing"}
                </Button2>
              </div>
              <div className={classNames(projectcss.all, sty.column__qzv5E)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__cJdeL)}
                  color={undefined}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                >
                  {"Book Meeting"}
                </Button2>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"aiUseCases"}
            data-plasmic-override={overrides.aiUseCases}
            className={classNames(projectcss.all, sty.aiUseCases)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bYvQ4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__pGw5T
                )}
              >
                {"Maximize Success with QA, QC, and Testing"}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xizPl)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6P4BF)}
              >
                <div
                  data-plasmic-name={"line"}
                  data-plasmic-override={overrides.line}
                  className={classNames(projectcss.all, sty.line)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000975"}
                    data-plasmic-override={overrides.frame1000000975}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000975)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9J11Y
                      )}
                    >
                      {"1"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319348"}
                  data-plasmic-override={overrides.frame427319348}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319348)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__r9ZsO
                    )}
                  >
                    {"Enhanced Product Reliability"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Z9GN
                    )}
                  >
                    {
                      "With rigorous quality assurance, control, and testing, your software meets high reliability standards, minimizing defects and boosting customer satisfaction."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__z7Yk)}
              >
                <div
                  data-plasmic-name={"line2"}
                  data-plasmic-override={overrides.line2}
                  className={classNames(projectcss.all, sty.line2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000977"}
                    data-plasmic-override={overrides.frame1000000977}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000977)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aWzSj
                      )}
                    >
                      {"2"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319349"}
                  data-plasmic-override={overrides.frame427319349}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319349)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__drvAf
                    )}
                  >
                    {"Accelerated Time-to-Market"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h71Ep
                    )}
                  >
                    {
                      "QA, QC, and testing streamline the development process by identifying and resolving issues early, enabling faster product delivery."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__deUuy)}
              >
                <div
                  data-plasmic-name={"line3"}
                  data-plasmic-override={overrides.line3}
                  className={classNames(projectcss.all, sty.line3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000979"}
                    data-plasmic-override={overrides.frame1000000979}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000979)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2Lvun
                      )}
                    >
                      {"3"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319330"}
                  data-plasmic-override={overrides.frame427319330}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319330)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8Mra
                    )}
                  >
                    {"Elevated Customer Experience"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fu02V
                    )}
                  >
                    {
                      "Ensure your software exceeds expectations through thorough QA, QC, and testing, fostering improved user satisfaction and loyalty."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__o9E34)}
              >
                <div
                  data-plasmic-name={"line4"}
                  data-plasmic-override={overrides.line4}
                  className={classNames(projectcss.all, sty.line4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000984"}
                    data-plasmic-override={overrides.frame1000000984}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000984)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ctQxR
                      )}
                    >
                      {"4"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319331"}
                  data-plasmic-override={overrides.frame427319331}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319331)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1ZqsW
                    )}
                  >
                    {"Cost Efficiency"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wn9Ao
                    )}
                  >
                    {
                      "Early detection of issues reduces rework and debugging costs, saving valuable time and resources in the development cycle."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gpsYl)}
              >
                <div
                  data-plasmic-name={"line5"}
                  data-plasmic-override={overrides.line5}
                  className={classNames(projectcss.all, sty.line5)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000987"}
                    data-plasmic-override={overrides.frame1000000987}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000987)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wBCqZ
                      )}
                    >
                      {"5"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319332"}
                  data-plasmic-override={overrides.frame427319332}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319332)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zwpYg
                    )}
                  >
                    {"Regulatory Compliance"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rbMqi
                    )}
                  >
                    {
                      "Ensure your software adheres to industry regulations and standards through comprehensive QA, QC, and testing, mitigating legal risks."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__daUx)}
              >
                <div
                  data-plasmic-name={"line6"}
                  data-plasmic-override={overrides.line6}
                  className={classNames(projectcss.all, sty.line6)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1000000988"}
                    data-plasmic-override={overrides.frame1000000988}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1000000988)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q9Dq
                      )}
                    >
                      {"6"}
                    </div>
                  </Stack__>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame427319333"}
                  data-plasmic-override={overrides.frame427319333}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame427319333)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7AlXk
                    )}
                  >
                    {"Ongoing Improvement"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ej4W
                    )}
                  >
                    {
                      "QA, QC, and testing provide critical feedback, driving continuous enhancements and leading to higher-quality products over time."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <CaseStudiesSection
            data-plasmic-name={"caseStudiesSection"}
            data-plasmic-override={overrides.caseStudiesSection}
            className={classNames("__wab_instance", sty.caseStudiesSection)}
          />

          <section
            data-plasmic-name={"whyChooseVidyayatan2"}
            data-plasmic-override={overrides.whyChooseVidyayatan2}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan2)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__e9O3X)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ut7Ap
                )}
              >
                {
                  "Mastering Quality Assurance (QA), Quality Control (QC), and Testing"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__daJsd
                )}
              >
                {
                  "To truly harness the benefits of QA, QC, and testing, you need experts who grasp their pivotal role in software development. Experienced professionals are essential for delivering dependable and high-quality software solutions."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___9M1Ak)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__xbDq9)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts4"}
                  data-plasmic-override={overrides.qualityProducts4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319338"}
                    data-plasmic-override={overrides.frame427319338}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319338)}
                  >
                    <Frame55Icon
                      className={classNames(projectcss.all, sty.svg__bRlLw)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319339"}
                    data-plasmic-override={overrides.frame427319339}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319339)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iRmbF
                      )}
                    >
                      {"Strategic Test Planning"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___00Pvf
                      )}
                    >
                      {
                        "The best QA testers excel in test planning. They turn broad requirements into detailed user acceptance criteria, carefully enumerate test cases, and arrange them into strategic, well-organized test plans."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts5"}
                  data-plasmic-override={overrides.qualityProducts5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts5)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319340"}
                    data-plasmic-override={overrides.frame427319340}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319340)}
                  >
                    <Frame37Icon
                      className={classNames(projectcss.all, sty.svg__w7Sa2)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319341"}
                    data-plasmic-override={overrides.frame427319341}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319341)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rsKwo
                      )}
                    >
                      {"Enhanced Value Contributions"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rGUz1
                      )}
                    >
                      {
                        "Leading QA testers add value by endorsing early testing integration in the development process. They champion the use of regression testing to drive improvements in efficiency and quality across the project lifecycle."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts6"}
                  data-plasmic-override={overrides.qualityProducts6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts6)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319342"}
                    data-plasmic-override={overrides.frame427319342}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319342)}
                  >
                    <Frame51Icon
                      className={classNames(projectcss.all, sty.svg__ujJic)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319343"}
                    data-plasmic-override={overrides.frame427319343}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319343)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fRR
                      )}
                    >
                      {"Technical Expertise"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eItgj
                      )}
                    >
                      {
                        "Leading QA testers go beyond manual testing by mastering automation, performance testing, and white box testing. Their technical skills enable seamless integration of automated testing frameworks and thorough performance evaluations."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__wjzly)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__dgWya)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/qaAndTesting2Png.png",
                    fullWidth: 2000,
                    fullHeight: 2000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <Testimonials
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames("__wab_instance", sty.testimonials)}
          />

          <FaqSection
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          />

          <ConnectWithUs
            data-plasmic-name={"connectWithUs"}
            data-plasmic-override={overrides.connectWithUs}
            className={classNames("__wab_instance", sty.connectWithUs)}
          />

          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />

          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "trustedBy",
    "whyChooseVidyayatan",
    "qualityProducts",
    "frame427319326",
    "frame427319327",
    "qualityProducts2",
    "frame427319334",
    "frame427319335",
    "qualityProducts3",
    "frame427319336",
    "frame427319337",
    "whyVidyayatan",
    "q1",
    "q14",
    "q16",
    "q18",
    "convertSection",
    "aiUseCases",
    "line",
    "frame1000000975",
    "frame427319348",
    "line2",
    "frame1000000977",
    "frame427319349",
    "line3",
    "frame1000000979",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame427319332",
    "line6",
    "frame1000000988",
    "frame427319333",
    "caseStudiesSection",
    "whyChooseVidyayatan2",
    "qualityProducts4",
    "frame427319338",
    "frame427319339",
    "qualityProducts5",
    "frame427319340",
    "frame427319341",
    "qualityProducts6",
    "frame427319342",
    "frame427319343",
    "testimonials",
    "faqSection",
    "connectWithUs",
    "navFooter",
    "navHeader"
  ],
  heroSection: ["heroSection"],
  trustedBy: ["trustedBy"],
  whyChooseVidyayatan: [
    "whyChooseVidyayatan",
    "qualityProducts",
    "frame427319326",
    "frame427319327",
    "qualityProducts2",
    "frame427319334",
    "frame427319335",
    "qualityProducts3",
    "frame427319336",
    "frame427319337"
  ],
  qualityProducts: ["qualityProducts", "frame427319326", "frame427319327"],
  frame427319326: ["frame427319326"],
  frame427319327: ["frame427319327"],
  qualityProducts2: ["qualityProducts2", "frame427319334", "frame427319335"],
  frame427319334: ["frame427319334"],
  frame427319335: ["frame427319335"],
  qualityProducts3: ["qualityProducts3", "frame427319336", "frame427319337"],
  frame427319336: ["frame427319336"],
  frame427319337: ["frame427319337"],
  whyVidyayatan: ["whyVidyayatan", "q1", "q14", "q16", "q18"],
  q1: ["q1"],
  q14: ["q14"],
  q16: ["q16"],
  q18: ["q18"],
  convertSection: ["convertSection"],
  aiUseCases: [
    "aiUseCases",
    "line",
    "frame1000000975",
    "frame427319348",
    "line2",
    "frame1000000977",
    "frame427319349",
    "line3",
    "frame1000000979",
    "frame427319330",
    "line4",
    "frame1000000984",
    "frame427319331",
    "line5",
    "frame1000000987",
    "frame427319332",
    "line6",
    "frame1000000988",
    "frame427319333"
  ],
  line: ["line", "frame1000000975"],
  frame1000000975: ["frame1000000975"],
  frame427319348: ["frame427319348"],
  line2: ["line2", "frame1000000977"],
  frame1000000977: ["frame1000000977"],
  frame427319349: ["frame427319349"],
  line3: ["line3", "frame1000000979"],
  frame1000000979: ["frame1000000979"],
  frame427319330: ["frame427319330"],
  line4: ["line4", "frame1000000984"],
  frame1000000984: ["frame1000000984"],
  frame427319331: ["frame427319331"],
  line5: ["line5", "frame1000000987"],
  frame1000000987: ["frame1000000987"],
  frame427319332: ["frame427319332"],
  line6: ["line6", "frame1000000988"],
  frame1000000988: ["frame1000000988"],
  frame427319333: ["frame427319333"],
  caseStudiesSection: ["caseStudiesSection"],
  whyChooseVidyayatan2: [
    "whyChooseVidyayatan2",
    "qualityProducts4",
    "frame427319338",
    "frame427319339",
    "qualityProducts5",
    "frame427319340",
    "frame427319341",
    "qualityProducts6",
    "frame427319342",
    "frame427319343"
  ],
  qualityProducts4: ["qualityProducts4", "frame427319338", "frame427319339"],
  frame427319338: ["frame427319338"],
  frame427319339: ["frame427319339"],
  qualityProducts5: ["qualityProducts5", "frame427319340", "frame427319341"],
  frame427319340: ["frame427319340"],
  frame427319341: ["frame427319341"],
  qualityProducts6: ["qualityProducts6", "frame427319342", "frame427319343"],
  frame427319342: ["frame427319342"],
  frame427319343: ["frame427319343"],
  testimonials: ["testimonials"],
  faqSection: ["faqSection"],
  connectWithUs: ["connectWithUs"],
  navFooter: ["navFooter"],
  navHeader: ["navHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "section";
  trustedBy: "section";
  whyChooseVidyayatan: "section";
  qualityProducts: "div";
  frame427319326: "div";
  frame427319327: "div";
  qualityProducts2: "div";
  frame427319334: "div";
  frame427319335: "div";
  qualityProducts3: "div";
  frame427319336: "div";
  frame427319337: "div";
  whyVidyayatan: "section";
  q1: "div";
  q14: "div";
  q16: "div";
  q18: "div";
  convertSection: "section";
  aiUseCases: "section";
  line: "div";
  frame1000000975: "div";
  frame427319348: "div";
  line2: "div";
  frame1000000977: "div";
  frame427319349: "div";
  line3: "div";
  frame1000000979: "div";
  frame427319330: "div";
  line4: "div";
  frame1000000984: "div";
  frame427319331: "div";
  line5: "div";
  frame1000000987: "div";
  frame427319332: "div";
  line6: "div";
  frame1000000988: "div";
  frame427319333: "div";
  caseStudiesSection: typeof CaseStudiesSection;
  whyChooseVidyayatan2: "section";
  qualityProducts4: "div";
  frame427319338: "div";
  frame427319339: "div";
  qualityProducts5: "div";
  frame427319340: "div";
  frame427319341: "div";
  qualityProducts6: "div";
  frame427319342: "div";
  frame427319343: "div";
  testimonials: typeof Testimonials;
  faqSection: typeof FaqSection;
  connectWithUs: typeof ConnectWithUs;
  navFooter: typeof NavFooter;
  navHeader: typeof NavHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSoftwareQaAndTesting__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSoftwareQaAndTesting__VariantsArgs;
    args?: PlasmicSoftwareQaAndTesting__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSoftwareQaAndTesting__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSoftwareQaAndTesting__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSoftwareQaAndTesting__ArgProps,
          internalVariantPropNames: PlasmicSoftwareQaAndTesting__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSoftwareQaAndTesting__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSoftwareQaAndTesting";
  } else {
    func.displayName = `PlasmicSoftwareQaAndTesting.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicSoftwareQaAndTesting = Object.assign(
  // Top-level PlasmicSoftwareQaAndTesting renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    trustedBy: makeNodeComponent("trustedBy"),
    whyChooseVidyayatan: makeNodeComponent("whyChooseVidyayatan"),
    qualityProducts: makeNodeComponent("qualityProducts"),
    frame427319326: makeNodeComponent("frame427319326"),
    frame427319327: makeNodeComponent("frame427319327"),
    qualityProducts2: makeNodeComponent("qualityProducts2"),
    frame427319334: makeNodeComponent("frame427319334"),
    frame427319335: makeNodeComponent("frame427319335"),
    qualityProducts3: makeNodeComponent("qualityProducts3"),
    frame427319336: makeNodeComponent("frame427319336"),
    frame427319337: makeNodeComponent("frame427319337"),
    whyVidyayatan: makeNodeComponent("whyVidyayatan"),
    q1: makeNodeComponent("q1"),
    q14: makeNodeComponent("q14"),
    q16: makeNodeComponent("q16"),
    q18: makeNodeComponent("q18"),
    convertSection: makeNodeComponent("convertSection"),
    aiUseCases: makeNodeComponent("aiUseCases"),
    line: makeNodeComponent("line"),
    frame1000000975: makeNodeComponent("frame1000000975"),
    frame427319348: makeNodeComponent("frame427319348"),
    line2: makeNodeComponent("line2"),
    frame1000000977: makeNodeComponent("frame1000000977"),
    frame427319349: makeNodeComponent("frame427319349"),
    line3: makeNodeComponent("line3"),
    frame1000000979: makeNodeComponent("frame1000000979"),
    frame427319330: makeNodeComponent("frame427319330"),
    line4: makeNodeComponent("line4"),
    frame1000000984: makeNodeComponent("frame1000000984"),
    frame427319331: makeNodeComponent("frame427319331"),
    line5: makeNodeComponent("line5"),
    frame1000000987: makeNodeComponent("frame1000000987"),
    frame427319332: makeNodeComponent("frame427319332"),
    line6: makeNodeComponent("line6"),
    frame1000000988: makeNodeComponent("frame1000000988"),
    frame427319333: makeNodeComponent("frame427319333"),
    caseStudiesSection: makeNodeComponent("caseStudiesSection"),
    whyChooseVidyayatan2: makeNodeComponent("whyChooseVidyayatan2"),
    qualityProducts4: makeNodeComponent("qualityProducts4"),
    frame427319338: makeNodeComponent("frame427319338"),
    frame427319339: makeNodeComponent("frame427319339"),
    qualityProducts5: makeNodeComponent("qualityProducts5"),
    frame427319340: makeNodeComponent("frame427319340"),
    frame427319341: makeNodeComponent("frame427319341"),
    qualityProducts6: makeNodeComponent("qualityProducts6"),
    frame427319342: makeNodeComponent("frame427319342"),
    frame427319343: makeNodeComponent("frame427319343"),
    testimonials: makeNodeComponent("testimonials"),
    faqSection: makeNodeComponent("faqSection"),
    connectWithUs: makeNodeComponent("connectWithUs"),
    navFooter: makeNodeComponent("navFooter"),
    navHeader: makeNodeComponent("navHeader"),

    // Metadata about props expected for PlasmicSoftwareQaAndTesting
    internalVariantProps: PlasmicSoftwareQaAndTesting__VariantProps,
    internalArgProps: PlasmicSoftwareQaAndTesting__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSoftwareQaAndTesting;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: qg9BUJrNtisePZMs8FM4BQ
// Component: peknsr16iHzh

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import Button2 from "../../Button2"; // plasmic-import: iFFcBUnvZUl0/component
import FullCycleSoftwareDevelopment from "../../FullCycleSoftwareDevelopment"; // plasmic-import: kK8OQeoXq0eN/component
import CaseStudiesSection from "../../CaseStudiesSection"; // plasmic-import: 8UZVGOKdExLM/component
import Testimonials from "../../Testimonials"; // plasmic-import: q8KVAm97HyX-/component
import FaqSection from "../../FaqSection"; // plasmic-import: BSnSueyvgk6P/component
import ConnectWithUs from "../../ConnectWithUs"; // plasmic-import: w9fJfCJ45KHV/component
import NavFooter from "../../NavFooter"; // plasmic-import: s0a682-ToGsq/component
import NavHeader from "../../NavHeader"; // plasmic-import: pZ9Yrp1wEL8X/component

import { useScreenVariants as useScreenVariantsptc9VYm7Ur9B } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: PTC9vYM7UR9b/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_vidyayatan_landing_page_css from "../vidyayatan_landing_page/plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: qg9BUJrNtisePZMs8FM4BQ/projectcss
import sty from "./PlasmicCustomSoftware.module.css"; // plasmic-import: peknsr16iHzh/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: tSFoGfIVWAwT/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: FoPRmBUdi-FM/icon
import Frame33Icon from "./icons/PlasmicIcon__Frame33"; // plasmic-import: AYJgwKYPdbx0/icon
import Frame34Icon from "./icons/PlasmicIcon__Frame34"; // plasmic-import: SzohbHgr1-om/icon
import Frame35Icon from "./icons/PlasmicIcon__Frame35"; // plasmic-import: Xo8YGBtW_pZe/icon
import Frame27Icon from "./icons/PlasmicIcon__Frame27"; // plasmic-import: 9kE_v7ERYwed/icon
import Frame36Icon from "./icons/PlasmicIcon__Frame36"; // plasmic-import: IaFDnOFEwbyz/icon
import Frame37Icon from "./icons/PlasmicIcon__Frame37"; // plasmic-import: cB8KooTDO7hj/icon
import Frame2Icon from "./icons/PlasmicIcon__Frame2"; // plasmic-import: CUoUM4FwIhNV/icon
import Frame38Icon from "./icons/PlasmicIcon__Frame38"; // plasmic-import: wLDga_XwdJ0e/icon
import Frame39Icon from "./icons/PlasmicIcon__Frame39"; // plasmic-import: PIPOI_VyBas3/icon
import FrameIcon from "./icons/PlasmicIcon__Frame"; // plasmic-import: N64XRDanG7jJ/icon

createPlasmicElementProxy;

export type PlasmicCustomSoftware__VariantMembers = {};
export type PlasmicCustomSoftware__VariantsArgs = {};
type VariantPropType = keyof PlasmicCustomSoftware__VariantsArgs;
export const PlasmicCustomSoftware__VariantProps = new Array<VariantPropType>();

export type PlasmicCustomSoftware__ArgsType = {
  q12?: React.ReactNode;
  q13?: React.ReactNode;
  q15?: React.ReactNode;
  q17?: React.ReactNode;
};
type ArgPropType = keyof PlasmicCustomSoftware__ArgsType;
export const PlasmicCustomSoftware__ArgProps = new Array<ArgPropType>(
  "q12",
  "q13",
  "q15",
  "q17"
);

export type PlasmicCustomSoftware__OverridesType = {
  root?: Flex__<"div">;
  heroSection?: Flex__<"section">;
  trustedBy?: Flex__<"section">;
  whyChooseVidyayatan?: Flex__<"section">;
  qualityProducts?: Flex__<"div">;
  frame427319326?: Flex__<"div">;
  frame427319327?: Flex__<"div">;
  qualityProducts2?: Flex__<"div">;
  frame427319334?: Flex__<"div">;
  frame427319335?: Flex__<"div">;
  qualityProducts3?: Flex__<"div">;
  frame427319336?: Flex__<"div">;
  frame427319337?: Flex__<"div">;
  whyVidyayatan?: Flex__<"section">;
  q1?: Flex__<"div">;
  q14?: Flex__<"div">;
  q16?: Flex__<"div">;
  q18?: Flex__<"div">;
  convertSection?: Flex__<"section">;
  fullCycleSoftwareDevelopment?: Flex__<typeof FullCycleSoftwareDevelopment>;
  caseStudiesSection?: Flex__<typeof CaseStudiesSection>;
  whyChooseVidyayatan2?: Flex__<"section">;
  qualityProducts4?: Flex__<"div">;
  frame427319338?: Flex__<"div">;
  frame427319339?: Flex__<"div">;
  qualityProducts5?: Flex__<"div">;
  frame427319340?: Flex__<"div">;
  frame427319341?: Flex__<"div">;
  qualityProducts6?: Flex__<"div">;
  frame427319342?: Flex__<"div">;
  frame427319343?: Flex__<"div">;
  testimonials?: Flex__<typeof Testimonials>;
  faqSection?: Flex__<typeof FaqSection>;
  connectWithUs?: Flex__<typeof ConnectWithUs>;
  navFooter?: Flex__<typeof NavFooter>;
  navHeader?: Flex__<typeof NavHeader>;
};

export interface DefaultCustomSoftwareProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCustomSoftware__RenderFunc(props: {
  variants: PlasmicCustomSoftware__VariantsArgs;
  args: PlasmicCustomSoftware__ArgsType;
  overrides: PlasmicCustomSoftware__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsptc9VYm7Ur9B()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_vidyayatan_landing_page_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            plasmic_apple_css.plasmic_tokens,
            plasmic_vercel_workflow_css.plasmic_tokens,
            plasmic_saa_s_website_css.plasmic_tokens,
            sty.root
          )}
          onScroll={async event => {
            const $steps = {};
          }}
        >
          <section
            data-plasmic-name={"heroSection"}
            data-plasmic-override={overrides.heroSection}
            className={classNames(projectcss.all, sty.heroSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__z02Ov)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__jiyQ)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uT8If)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fww7G
                    )}
                  >
                    {"Custom software development"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kSsjk
                    )}
                  >
                    {
                      "Custom software crafted for success. With scalable, secure, and cost-effective solutions, we provide seamless integration that ensures your business achieves real ROI."
                    }
                  </div>
                </Stack__>
                <Button2
                  className={classNames("__wab_instance", sty.button2__rf5OS)}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                  target={true}
                >
                  {"Book meeting"}
                </Button2>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column___7WtqN)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__nxnFz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/customSoftwaresHeroPng.png",
                    fullWidth: 12228,
                    fullHeight: 10636,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"trustedBy"}
            data-plasmic-override={overrides.trustedBy}
            className={classNames(projectcss.all, sty.trustedBy)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bFml)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r9BmD
                )}
              >
                {"Trusted by"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___4X2Xp)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__q5GZi)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__np09R)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__yiBco)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/labourLinkLogo1Png2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__yj3V)}>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__tZezL)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/habuildLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__dpiLm)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__qmon)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "28px"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/satvaaPng5.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__rw4HE)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__ubxI)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/starBazzarLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___7UPpc)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__oMzfE)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__sZwV)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "auto"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/maroiBoerderyBkLogoPng3.png",
                        fullWidth: 1116,
                        fullHeight: 192,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ll0Ir)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__s0YW8)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/innowellLogoPng3.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___9NYq)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0RlXg)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "auto"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/dcmShriRamPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__eAlJw)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___5IoVr)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/new_mv_technologies_website/images/bharatPeLogoPng2.png",
                        fullWidth: 425,
                        fullHeight: 80,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyChooseVidyayatan"}
            data-plasmic-override={overrides.whyChooseVidyayatan}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__xH9HA)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__imIW
                )}
              >
                {
                  "Looking for a cost-effective platform to scale your operations?"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rtq1O
                )}
              >
                {
                  "Vidyayatan Technologies delivers software solutions tailored to your unique business needs. For growing companies, startups, and enterprises, we provide impactful software, seamlessly integrating cutting-edge technologies to streamline operations and boost customer engagement."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___8Fccf)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__lwaWg)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts"}
                  data-plasmic-override={overrides.qualityProducts}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319326"}
                    data-plasmic-override={overrides.frame427319326}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319326)}
                  >
                    <Frame33Icon
                      className={classNames(projectcss.all, sty.svg__iegP5)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319327"}
                    data-plasmic-override={overrides.frame427319327}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319327)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cHerI
                      )}
                    >
                      {"Custom Solutions Designed for Your Industry"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wtSg2
                      )}
                    >
                      {
                        "Tailored software solutions for various industries, designed to meet your unique market needs and business goals."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts2"}
                  data-plasmic-override={overrides.qualityProducts2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts2)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319334"}
                    data-plasmic-override={overrides.frame427319334}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319334)}
                  >
                    <Frame34Icon
                      className={classNames(projectcss.all, sty.svg___7A2BP)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319335"}
                    data-plasmic-override={overrides.frame427319335}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319335)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fQJq
                      )}
                    >
                      {"Built for growth, secure, and future-ready"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__leacu
                      )}
                    >
                      {
                        "Your platform will be crafted for scalability, reinforced with strong security protocols, and designed to adapt to future needs."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts3"}
                  data-plasmic-override={overrides.qualityProducts3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319336"}
                    data-plasmic-override={overrides.frame427319336}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319336)}
                  >
                    <Frame35Icon
                      className={classNames(projectcss.all, sty.svg__oLpSc)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319337"}
                    data-plasmic-override={overrides.frame427319337}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319337)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t7QzE
                      )}
                    >
                      {"Seamless Integration and Cutting-edge Technology"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iZbtk
                      )}
                    >
                      {
                        "Unifying software systems for enhanced efficiency and data flow, while leveraging innovations like AI and IoT to drive your business forward."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column___3PKym)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oRWuR)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/_47994091Png2.png",
                    fullWidth: 3000,
                    fullHeight: 2000,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"whyVidyayatan"}
            data-plasmic-override={overrides.whyVidyayatan}
            className={classNames(projectcss.all, sty.whyVidyayatan)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___1B37
              )}
            >
              {"Software Development Services"}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lV9KI)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rYzI
                )}
              >
                {"Quality-driven software, designed with your business in mind"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kGttm
                )}
              >
                {
                  "Our dedicated development teams blend specialized knowledge with deep industry insights to bring your software vision to life. Leveraging the latest technologies and agile methodologies, we create tailored solutions aligned with your business goals and future ambitions."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__jtU3R)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__kNpT)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q1"}
                  data-plasmic-override={overrides.q1}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q1)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame27Icon
                        className={classNames(projectcss.all, sty.svg___9KvS9)}
                        role={"img"}
                      />
                    ),

                    value: args.q12
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__zkJ9W)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z7Y1M
                    )}
                  >
                    {"End-to-End Software Development"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vSmU
                    )}
                  >
                    {
                      "Optimize operations, simplify workflows, and unlock valuable insights to boost efficiency and performance."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__j8RIa)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q14"}
                  data-plasmic-override={overrides.q14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q14)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame36Icon
                        className={classNames(projectcss.all, sty.svg__rjsn2)}
                        role={"img"}
                      />
                    ),

                    value: args.q13
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___6PGzD)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__lWr2E
                    )}
                  >
                    {"Adaptive Agile Strategies"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b2Ap8
                    )}
                  >
                    {
                      "Quick, adaptable project delivery emphasizing consistency and ongoing enhancement."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__zWc9J)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q16"}
                  data-plasmic-override={overrides.q16}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q16)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame37Icon
                        className={classNames(projectcss.all, sty.svg__cde0L)}
                        role={"img"}
                      />
                    ),

                    value: args.q15
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__t8CUm)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wmZBy
                    )}
                  >
                    {"Holistic Software Expertise"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aa0T5
                    )}
                  >
                    {
                      "Complete front-end and back-end development for optimal user experience and consistent application performance."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__qBkH)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"q18"}
                  data-plasmic-override={overrides.q18}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.q18)}
                >
                  {renderPlasmicSlot({
                    defaultContents: (
                      <Frame2Icon
                        className={classNames(projectcss.all, sty.svg___59Mcr)}
                        role={"img"}
                      />
                    ),

                    value: args.q17
                  })}
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__k1OmP)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nflIu
                    )}
                  >
                    {"Consistent Quality and Support"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jibM7
                    )}
                  >
                    {
                      "Regular updates and dedicated support to ensure your software remains current and performs optimally."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"convertSection"}
            data-plasmic-override={overrides.convertSection}
            className={classNames(projectcss.all, sty.convertSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__jgFlp)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kcYGn
                )}
              >
                {"Seeking the best value in software development? "}
              </div>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__bubr9)}
            >
              <div className={classNames(projectcss.all, sty.column__xvx7Q)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2__etCw)}
                  color={"white"}
                  link={`/pricing-page`}
                  shape={"rounded"}
                >
                  {"View Pricing"}
                </Button2>
              </div>
              <div className={classNames(projectcss.all, sty.column__zbynV)}>
                <Button2
                  className={classNames("__wab_instance", sty.button2___8HtN2)}
                  color={undefined}
                  link={"https://calendar.app.google/7GAyDKQLPvjA5rca6"}
                  shape={"rounded"}
                  showEndIcon={true}
                >
                  {"Book Meeting"}
                </Button2>
              </div>
            </Stack__>
          </section>
          <FullCycleSoftwareDevelopment
            data-plasmic-name={"fullCycleSoftwareDevelopment"}
            data-plasmic-override={overrides.fullCycleSoftwareDevelopment}
            className={classNames(
              "__wab_instance",
              sty.fullCycleSoftwareDevelopment
            )}
          />

          <CaseStudiesSection
            data-plasmic-name={"caseStudiesSection"}
            data-plasmic-override={overrides.caseStudiesSection}
            className={classNames("__wab_instance", sty.caseStudiesSection)}
          />

          <section
            data-plasmic-name={"whyChooseVidyayatan2"}
            data-plasmic-override={overrides.whyChooseVidyayatan2}
            className={classNames(projectcss.all, sty.whyChooseVidyayatan2)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___6Lw8B)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kknke
                )}
              >
                {"Next-Generation Tech at Your Disposal"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hdi06
                )}
              >
                {
                  "Our team specializes in a wide array of tools and platforms, from cloud computing to AI and IoT, ensuring your software is both cutting-edge and future-ready."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns___1LAw7)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column__ryTec)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts4"}
                  data-plasmic-override={overrides.qualityProducts4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts4)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319338"}
                    data-plasmic-override={overrides.frame427319338}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319338)}
                  >
                    <Frame38Icon
                      className={classNames(projectcss.all, sty.svg__twNas)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319339"}
                    data-plasmic-override={overrides.frame427319339}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319339)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vYcFv
                      )}
                    >
                      {"Expert-level development capabilities"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pBdWv
                      )}
                    >
                      {
                        "Proficient in modern programming languages like Python, JavaScript, and Ruby, with expertise in top frameworks like React, Angular, and Node.js."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts5"}
                  data-plasmic-override={overrides.qualityProducts5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts5)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319340"}
                    data-plasmic-override={overrides.frame427319340}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319340)}
                  >
                    <Frame39Icon
                      className={classNames(projectcss.all, sty.svg__esuf)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319341"}
                    data-plasmic-override={overrides.frame427319341}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319341)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__psbo5
                      )}
                    >
                      {"Cloud and Database Expertise"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cXxT1
                      )}
                    >
                      {
                        "Expertise in SQL and NoSQL databases, delivering robust solutions on leading cloud platforms such as AWS, Azure, and Google Cloud."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"qualityProducts6"}
                  data-plasmic-override={overrides.qualityProducts6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.qualityProducts6)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319342"}
                    data-plasmic-override={overrides.frame427319342}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319342)}
                  >
                    <FrameIcon
                      className={classNames(projectcss.all, sty.svg__aUtQ7)}
                      role={"img"}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame427319343"}
                    data-plasmic-override={overrides.frame427319343}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame427319343)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t6Ytt
                      )}
                    >
                      {"Advanced Technology Implementation"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nXodq
                      )}
                    >
                      {
                        "Expertise in integrating cutting-edge technologies such as AI, machine learning, blockchain, and IoT to build next-generation applications."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.column__p4ZB)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__vpfRq)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/new_mv_technologies_website/images/_20943761Converted1Png.png",
                    fullWidth: 3200,
                    fullHeight: 3200,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <Testimonials
            data-plasmic-name={"testimonials"}
            data-plasmic-override={overrides.testimonials}
            className={classNames("__wab_instance", sty.testimonials)}
          />

          <FaqSection
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames("__wab_instance", sty.faqSection)}
          />

          <ConnectWithUs
            data-plasmic-name={"connectWithUs"}
            data-plasmic-override={overrides.connectWithUs}
            className={classNames("__wab_instance", sty.connectWithUs)}
          />

          <NavFooter
            data-plasmic-name={"navFooter"}
            data-plasmic-override={overrides.navFooter}
            className={classNames("__wab_instance", sty.navFooter)}
          />

          <NavHeader
            data-plasmic-name={"navHeader"}
            data-plasmic-override={overrides.navHeader}
            className={classNames("__wab_instance", sty.navHeader)}
            scrolledVariant={(() => {
              try {
                return $ctx.isScrolled;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return [];
                }
                throw e;
              }
            })()}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "heroSection",
    "trustedBy",
    "whyChooseVidyayatan",
    "qualityProducts",
    "frame427319326",
    "frame427319327",
    "qualityProducts2",
    "frame427319334",
    "frame427319335",
    "qualityProducts3",
    "frame427319336",
    "frame427319337",
    "whyVidyayatan",
    "q1",
    "q14",
    "q16",
    "q18",
    "convertSection",
    "fullCycleSoftwareDevelopment",
    "caseStudiesSection",
    "whyChooseVidyayatan2",
    "qualityProducts4",
    "frame427319338",
    "frame427319339",
    "qualityProducts5",
    "frame427319340",
    "frame427319341",
    "qualityProducts6",
    "frame427319342",
    "frame427319343",
    "testimonials",
    "faqSection",
    "connectWithUs",
    "navFooter",
    "navHeader"
  ],
  heroSection: ["heroSection"],
  trustedBy: ["trustedBy"],
  whyChooseVidyayatan: [
    "whyChooseVidyayatan",
    "qualityProducts",
    "frame427319326",
    "frame427319327",
    "qualityProducts2",
    "frame427319334",
    "frame427319335",
    "qualityProducts3",
    "frame427319336",
    "frame427319337"
  ],
  qualityProducts: ["qualityProducts", "frame427319326", "frame427319327"],
  frame427319326: ["frame427319326"],
  frame427319327: ["frame427319327"],
  qualityProducts2: ["qualityProducts2", "frame427319334", "frame427319335"],
  frame427319334: ["frame427319334"],
  frame427319335: ["frame427319335"],
  qualityProducts3: ["qualityProducts3", "frame427319336", "frame427319337"],
  frame427319336: ["frame427319336"],
  frame427319337: ["frame427319337"],
  whyVidyayatan: ["whyVidyayatan", "q1", "q14", "q16", "q18"],
  q1: ["q1"],
  q14: ["q14"],
  q16: ["q16"],
  q18: ["q18"],
  convertSection: ["convertSection"],
  fullCycleSoftwareDevelopment: ["fullCycleSoftwareDevelopment"],
  caseStudiesSection: ["caseStudiesSection"],
  whyChooseVidyayatan2: [
    "whyChooseVidyayatan2",
    "qualityProducts4",
    "frame427319338",
    "frame427319339",
    "qualityProducts5",
    "frame427319340",
    "frame427319341",
    "qualityProducts6",
    "frame427319342",
    "frame427319343"
  ],
  qualityProducts4: ["qualityProducts4", "frame427319338", "frame427319339"],
  frame427319338: ["frame427319338"],
  frame427319339: ["frame427319339"],
  qualityProducts5: ["qualityProducts5", "frame427319340", "frame427319341"],
  frame427319340: ["frame427319340"],
  frame427319341: ["frame427319341"],
  qualityProducts6: ["qualityProducts6", "frame427319342", "frame427319343"],
  frame427319342: ["frame427319342"],
  frame427319343: ["frame427319343"],
  testimonials: ["testimonials"],
  faqSection: ["faqSection"],
  connectWithUs: ["connectWithUs"],
  navFooter: ["navFooter"],
  navHeader: ["navHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  heroSection: "section";
  trustedBy: "section";
  whyChooseVidyayatan: "section";
  qualityProducts: "div";
  frame427319326: "div";
  frame427319327: "div";
  qualityProducts2: "div";
  frame427319334: "div";
  frame427319335: "div";
  qualityProducts3: "div";
  frame427319336: "div";
  frame427319337: "div";
  whyVidyayatan: "section";
  q1: "div";
  q14: "div";
  q16: "div";
  q18: "div";
  convertSection: "section";
  fullCycleSoftwareDevelopment: typeof FullCycleSoftwareDevelopment;
  caseStudiesSection: typeof CaseStudiesSection;
  whyChooseVidyayatan2: "section";
  qualityProducts4: "div";
  frame427319338: "div";
  frame427319339: "div";
  qualityProducts5: "div";
  frame427319340: "div";
  frame427319341: "div";
  qualityProducts6: "div";
  frame427319342: "div";
  frame427319343: "div";
  testimonials: typeof Testimonials;
  faqSection: typeof FaqSection;
  connectWithUs: typeof ConnectWithUs;
  navFooter: typeof NavFooter;
  navHeader: typeof NavHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCustomSoftware__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCustomSoftware__VariantsArgs;
    args?: PlasmicCustomSoftware__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicCustomSoftware__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicCustomSoftware__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCustomSoftware__ArgProps,
          internalVariantPropNames: PlasmicCustomSoftware__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCustomSoftware__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCustomSoftware";
  } else {
    func.displayName = `PlasmicCustomSoftware.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "qg9BUJrNtisePZMs8FM4BQ"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicCustomSoftware = Object.assign(
  // Top-level PlasmicCustomSoftware renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    heroSection: makeNodeComponent("heroSection"),
    trustedBy: makeNodeComponent("trustedBy"),
    whyChooseVidyayatan: makeNodeComponent("whyChooseVidyayatan"),
    qualityProducts: makeNodeComponent("qualityProducts"),
    frame427319326: makeNodeComponent("frame427319326"),
    frame427319327: makeNodeComponent("frame427319327"),
    qualityProducts2: makeNodeComponent("qualityProducts2"),
    frame427319334: makeNodeComponent("frame427319334"),
    frame427319335: makeNodeComponent("frame427319335"),
    qualityProducts3: makeNodeComponent("qualityProducts3"),
    frame427319336: makeNodeComponent("frame427319336"),
    frame427319337: makeNodeComponent("frame427319337"),
    whyVidyayatan: makeNodeComponent("whyVidyayatan"),
    q1: makeNodeComponent("q1"),
    q14: makeNodeComponent("q14"),
    q16: makeNodeComponent("q16"),
    q18: makeNodeComponent("q18"),
    convertSection: makeNodeComponent("convertSection"),
    fullCycleSoftwareDevelopment: makeNodeComponent(
      "fullCycleSoftwareDevelopment"
    ),
    caseStudiesSection: makeNodeComponent("caseStudiesSection"),
    whyChooseVidyayatan2: makeNodeComponent("whyChooseVidyayatan2"),
    qualityProducts4: makeNodeComponent("qualityProducts4"),
    frame427319338: makeNodeComponent("frame427319338"),
    frame427319339: makeNodeComponent("frame427319339"),
    qualityProducts5: makeNodeComponent("qualityProducts5"),
    frame427319340: makeNodeComponent("frame427319340"),
    frame427319341: makeNodeComponent("frame427319341"),
    qualityProducts6: makeNodeComponent("qualityProducts6"),
    frame427319342: makeNodeComponent("frame427319342"),
    frame427319343: makeNodeComponent("frame427319343"),
    testimonials: makeNodeComponent("testimonials"),
    faqSection: makeNodeComponent("faqSection"),
    connectWithUs: makeNodeComponent("connectWithUs"),
    navFooter: makeNodeComponent("navFooter"),
    navHeader: makeNodeComponent("navHeader"),

    // Metadata about props expected for PlasmicCustomSoftware
    internalVariantProps: PlasmicCustomSoftware__VariantProps,
    internalArgProps: PlasmicCustomSoftware__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicCustomSoftware;
/* prettier-ignore-end */

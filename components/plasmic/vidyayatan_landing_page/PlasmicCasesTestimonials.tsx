// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aqUnUFeSAtbFb77THsmBtm
// Component: JEmC1IRLhUS7

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import ImgHeadText from "../../ImgHeadText"; // plasmic-import: JIJ52LL9nY5v/component

import { useScreenVariants as useScreenVariantsa96SlEqEsQcV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: A96SlEqESQcV/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import sty from "./PlasmicCasesTestimonials.module.css"; // plasmic-import: JEmC1IRLhUS7/css

createPlasmicElementProxy;

export type PlasmicCasesTestimonials__VariantMembers = {};
export type PlasmicCasesTestimonials__VariantsArgs = {};
type VariantPropType = keyof PlasmicCasesTestimonials__VariantsArgs;
export const PlasmicCasesTestimonials__VariantProps =
  new Array<VariantPropType>();

export type PlasmicCasesTestimonials__ArgsType = {};
type ArgPropType = keyof PlasmicCasesTestimonials__ArgsType;
export const PlasmicCasesTestimonials__ArgProps = new Array<ArgPropType>();

export type PlasmicCasesTestimonials__OverridesType = {
  root?: Flex__<"div">;
  columns?: Flex__<"div">;
  imgHeadText?: Flex__<typeof ImgHeadText>;
  _6?: Flex__<typeof ImgHeadText>;
  _7?: Flex__<typeof ImgHeadText>;
};

export interface DefaultCasesTestimonialsProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCasesTestimonials__RenderFunc(props: {
  variants: PlasmicCasesTestimonials__VariantsArgs;
  args: PlasmicCasesTestimonials__ArgsType;
  overrides: PlasmicCasesTestimonials__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsa96SlEqEsQcV()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.root
      )}
    >
      <div
        data-plasmic-name={"columns"}
        data-plasmic-override={overrides.columns}
        className={classNames(projectcss.all, sty.columns)}
      >
        <div className={classNames(projectcss.all, sty.column___2NNW)}>
          <div
            className={classNames(projectcss.all, sty.freeBox___8IclX)}
            onClick={async event => {
              const $steps = {};

              $steps["goToHttpsVidyayatanComAgriPrecision"] = true
                ? (() => {
                    const actionArgs = {
                      destination: "https://vidyayatan.com/agri-precision"
                    };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        __nextRouter?.push(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["goToHttpsVidyayatanComAgriPrecision"] != null &&
                typeof $steps["goToHttpsVidyayatanComAgriPrecision"] ===
                  "object" &&
                typeof $steps["goToHttpsVidyayatanComAgriPrecision"].then ===
                  "function"
              ) {
                $steps["goToHttpsVidyayatanComAgriPrecision"] = await $steps[
                  "goToHttpsVidyayatanComAgriPrecision"
                ];
              }
            }}
          >
            <ImgHeadText
              data-plasmic-name={"imgHeadText"}
              data-plasmic-override={overrides.imgHeadText}
              className={classNames("__wab_instance", sty.imgHeadText)}
              slot={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__se36X
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "Facing challenges in crop management and yield optimization, they reached out to us, to transform their farms into digital, data-driven enterprises\n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, color: "#259213" }}
                    >
                      {"Know More"}
                    </span>
                  </React.Fragment>
                </div>
              }
              slot2={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yjeka)}
                  displayHeight={"200px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"200px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/whatIsPrecisionAgricultureTeaserJpg.jpg",
                    fullWidth: 1200,
                    fullHeight: 800,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__d9Pzr
                )}
              >
                {"Precision Farming in Gujarat"}
              </div>
            </ImgHeadText>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.column__nQhuk)}>
          <div
            className={classNames(projectcss.all, sty.freeBox__nkBPy)}
            onClick={async event => {
              const $steps = {};

              $steps["goToHttpsVidyayatanComAgriLaborManagement"] = true
                ? (() => {
                    const actionArgs = {
                      destination:
                        "https://vidyayatan.com/agri-labor-management"
                    };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        __nextRouter?.push(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["goToHttpsVidyayatanComAgriLaborManagement"] != null &&
                typeof $steps["goToHttpsVidyayatanComAgriLaborManagement"] ===
                  "object" &&
                typeof $steps["goToHttpsVidyayatanComAgriLaborManagement"]
                  .then === "function"
              ) {
                $steps["goToHttpsVidyayatanComAgriLaborManagement"] =
                  await $steps["goToHttpsVidyayatanComAgriLaborManagement"];
              }
            }}
          >
            <ImgHeadText
              data-plasmic-name={"_6"}
              data-plasmic-override={overrides._6}
              className={classNames("__wab_instance", sty._6)}
              slot={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___74Bav
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "We were approached by multiple large farms which had a workforce of more than 5000 labourers facing labour management challenges\n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, color: "#259213" }}
                    >
                      {"Know More"}
                    </span>
                  </React.Fragment>
                </div>
              }
              slot2={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___7B5Ki)}
                  displayHeight={"200px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"200px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/maxresdefault1Jpg.jpg",
                    fullWidth: 1280,
                    fullHeight: 720,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__owknD
                )}
              >
                {"Farm Management in SA"}
              </div>
            </ImgHeadText>
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.column__fAnHc)}>
          <div
            className={classNames(projectcss.all, sty.freeBox__xxlGv)}
            onClick={async event => {
              const $steps = {};

              $steps["goToHttpsVidyayatanComAgriLivestock"] = true
                ? (() => {
                    const actionArgs = {
                      destination: "https://vidyayatan.com/agri-livestock"
                    };
                    return (({ destination }) => {
                      if (
                        typeof destination === "string" &&
                        destination.startsWith("#")
                      ) {
                        document
                          .getElementById(destination.substr(1))
                          .scrollIntoView({ behavior: "smooth" });
                      } else {
                        __nextRouter?.push(destination);
                      }
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["goToHttpsVidyayatanComAgriLivestock"] != null &&
                typeof $steps["goToHttpsVidyayatanComAgriLivestock"] ===
                  "object" &&
                typeof $steps["goToHttpsVidyayatanComAgriLivestock"].then ===
                  "function"
              ) {
                $steps["goToHttpsVidyayatanComAgriLivestock"] = await $steps[
                  "goToHttpsVidyayatanComAgriLivestock"
                ];
              }
            }}
          >
            <ImgHeadText
              data-plasmic-name={"_7"}
              data-plasmic-override={overrides._7}
              className={classNames("__wab_instance", sty._7)}
              slot={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dJfM
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "A leading FMCG dairy company operating in 19 districts of MP, India, faced profitability challenges attributed to ineffective management practices\n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, color: "#259213" }}
                    >
                      {"Know More"}
                    </span>
                  </React.Fragment>
                </div>
              }
              slot2={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__pkEaT)}
                  displayHeight={"200px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"200px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/unadjustednonrawThumb172DJpg.jpg",
                    fullWidth: 1024,
                    fullHeight: 768,
                    aspectRatio: undefined
                  }}
                />
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mCE6
                )}
              >
                {"Cattle Management in MP"}
              </div>
            </ImgHeadText>
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "columns", "imgHeadText", "_6", "_7"],
  columns: ["columns", "imgHeadText", "_6", "_7"],
  imgHeadText: ["imgHeadText"],
  _6: ["_6"],
  _7: ["_7"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  columns: "div";
  imgHeadText: typeof ImgHeadText;
  _6: typeof ImgHeadText;
  _7: typeof ImgHeadText;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCasesTestimonials__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCasesTestimonials__VariantsArgs;
    args?: PlasmicCasesTestimonials__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicCasesTestimonials__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicCasesTestimonials__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCasesTestimonials__ArgProps,
          internalVariantPropNames: PlasmicCasesTestimonials__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCasesTestimonials__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCasesTestimonials";
  } else {
    func.displayName = `PlasmicCasesTestimonials.${nodeName}`;
  }
  return func;
}

export const PlasmicCasesTestimonials = Object.assign(
  // Top-level PlasmicCasesTestimonials renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    columns: makeNodeComponent("columns"),
    imgHeadText: makeNodeComponent("imgHeadText"),
    _6: makeNodeComponent("_6"),
    _7: makeNodeComponent("_7"),

    // Metadata about props expected for PlasmicCasesTestimonials
    internalVariantProps: PlasmicCasesTestimonials__VariantProps,
    internalArgProps: PlasmicCasesTestimonials__ArgProps
  }
);

export default PlasmicCasesTestimonials;
/* prettier-ignore-end */

// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: aqUnUFeSAtbFb77THsmBtm
// Component: q4mB0ZQ7DZd6

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button2 from "../../Button2"; // plasmic-import: Y6gLqOJ3m2d1/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { Video } from "@plasmicpkgs/plasmic-basic-components";
import { SliderWrapper } from "@plasmicpkgs/react-slick";
import { sliderHelpers as SliderWrapper_Helpers } from "@plasmicpkgs/react-slick";
import CasesTestimonials from "../../CasesTestimonials"; // plasmic-import: JEmC1IRLhUS7/component
import ImgHeadText from "../../ImgHeadText"; // plasmic-import: JIJ52LL9nY5v/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import { AntdRangeSlider } from "@plasmicpkgs/antd5/skinny/registerSlider";
import { rangeSliderHelpers as AntdRangeSlider_Helpers } from "@plasmicpkgs/antd5/skinny/registerSlider";
import { AntdSliderMark } from "@plasmicpkgs/antd5/skinny/registerSlider";
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import VidFooter from "../../VidFooter"; // plasmic-import: JNOw3B7fPGe3/component
import BottomHeader from "../../BottomHeader"; // plasmic-import: eJzIS1yT3FXa/component
import TopHeader from "../../TopHeader"; // plasmic-import: rRWDJYvDoW0E/component

import { useScreenVariants as useScreenVariantsa96SlEqEsQcV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: A96SlEqESQcV/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import plasmic_apple_css from "../apple/plasmic.module.css"; // plasmic-import: 3eY1qD8fYUzK6iRzHmP8VZ/projectcss
import plasmic_vercel_workflow_css from "../vercel_workflow/plasmic.module.css"; // plasmic-import: 9geyujr9Gmmnu34Qh9ic8E/projectcss
import plasmic_saa_s_website_css from "../saa_s_website/plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: aqUnUFeSAtbFb77THsmBtm/projectcss
import sty from "./PlasmicLandingPage.module.css"; // plasmic-import: q4mB0ZQ7DZd6/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: cWlmgNGmwySE/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: MEJ7tz7N1GbV/icon
import TransferSvgrepoComSvgIcon from "./icons/PlasmicIcon__TransferSvgrepoComSvg"; // plasmic-import: serFtftuIyWc/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: inlVo6lwWqgT/icon
import Scale02SvgrepoComSvgIcon from "./icons/PlasmicIcon__Scale02SvgrepoComSvg"; // plasmic-import: m-gd5U9X4SZ-/icon
import Icon15Icon from "./icons/PlasmicIcon__Icon15"; // plasmic-import: 3jZtmWJ6YQ8d/icon
import Icon18Icon from "./icons/PlasmicIcon__Icon18"; // plasmic-import: gYIIAVEpf9zE/icon
import SecureSvgrepoComSvgIcon from "./icons/PlasmicIcon__SecureSvgrepoComSvg"; // plasmic-import: 9ePIhBetavi0/icon
import EngineerConfigSvgrepoComSvgIcon from "./icons/PlasmicIcon__EngineerConfigSvgrepoComSvg"; // plasmic-import: WOmuybmmroGk/icon
import CloudWiredSvgrepoComSvgIcon from "./icons/PlasmicIcon__CloudWiredSvgrepoComSvg"; // plasmic-import: ZChA8lPh-PTj/icon
import AutomationSvgrepoComSvgIcon from "./icons/PlasmicIcon__AutomationSvgrepoComSvg"; // plasmic-import: NT0xsP_48im-/icon
import ChartScatter3DSvgrepoComSvgIcon from "./icons/PlasmicIcon__ChartScatter3DSvgrepoComSvg"; // plasmic-import: vP5YAtu-Asv-/icon
import StrategySvgrepoCom1SvgIcon from "./icons/PlasmicIcon__StrategySvgrepoCom1Svg"; // plasmic-import: BLP4IHq0Z61x/icon
import GuiManagementSvgrepoComSvgIcon from "./icons/PlasmicIcon__GuiManagementSvgrepoComSvg"; // plasmic-import: dCVeWdDzJFEt/icon
import Icon9Icon from "../apple/icons/PlasmicIcon__Icon9"; // plasmic-import: Vf_sMoKoxEpl/icon

createPlasmicElementProxy;

export type PlasmicLandingPage__VariantMembers = {
  hoverVarient: "productOpen" | "dataOpen" | "cloudOpen" | "iotOpen";
};
export type PlasmicLandingPage__VariantsArgs = {
  hoverVarient?: SingleChoiceArg<
    "productOpen" | "dataOpen" | "cloudOpen" | "iotOpen"
  >;
};
type VariantPropType = keyof PlasmicLandingPage__VariantsArgs;
export const PlasmicLandingPage__VariantProps = new Array<VariantPropType>(
  "hoverVarient"
);

export type PlasmicLandingPage__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPage__ArgsType;
export const PlasmicLandingPage__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPage__OverridesType = {
  openMenu1?: Flex__<"div">;
  copy?: Flex__<"div">;
  bharatpeLogo2?: Flex__<typeof PlasmicImg__>;
  sliderCarousel?: Flex__<typeof SliderWrapper>;
  bharatpeLogo?: Flex__<typeof PlasmicImg__>;
  foreground?: Flex__<"div">;
  casesTestimonials?: Flex__<typeof CasesTestimonials>;
  imgHeadText?: Flex__<typeof ImgHeadText>;
  _4?: Flex__<typeof ImgHeadText>;
  _5?: Flex__<typeof ImgHeadText>;
  reveal?: Flex__<typeof Reveal>;
  sliderCarousel2?: Flex__<typeof SliderWrapper>;
  rangeSlider?: Flex__<typeof AntdRangeSlider>;
  sliderMark?: Flex__<typeof AntdSliderMark>;
  accordion7?: Flex__<typeof AntdAccordion>;
  accordion8?: Flex__<typeof AntdAccordion>;
  accordion9?: Flex__<typeof AntdAccordion>;
  accordion10?: Flex__<typeof AntdAccordion>;
  accordion11?: Flex__<typeof AntdAccordion>;
  accordion12?: Flex__<typeof AntdAccordion>;
  blockquote?: Flex__<"blockquote">;
  vidFooter?: Flex__<typeof VidFooter>;
  bottomHeader?: Flex__<typeof BottomHeader>;
  topHeader?: Flex__<typeof TopHeader>;
};

export interface DefaultLandingPageProps {
  hoverVarient?: SingleChoiceArg<
    "productOpen" | "dataOpen" | "cloudOpen" | "iotOpen"
  >;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLandingPage__RenderFunc(props: {
  variants: PlasmicLandingPage__VariantsArgs;
  args: PlasmicLandingPage__ArgsType;
  overrides: PlasmicLandingPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "accordion7.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion8.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion9.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion10.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion11.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "accordion12.activePanelId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      },
      {
        path: "hoverVarient",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props.hoverVarient
      },
      {
        path: "sliderCarousel.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      },
      {
        path: "rangeSlider.min",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("min", AntdRangeSlider_Helpers)
      },
      {
        path: "rangeSlider.max",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("max", AntdRangeSlider_Helpers)
      },
      {
        path: "sliderCarousel2.currentSlide",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0,

        refName: "sliderCarousel2",
        onMutate: generateOnMutateForSpec("currentSlide", SliderWrapper_Helpers)
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsa96SlEqEsQcV()
  });

  return (
    <div
      data-plasmic-name={"openMenu1"}
      data-plasmic-override={overrides.openMenu1}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        plasmic_apple_css.plasmic_tokens,
        plasmic_vercel_workflow_css.plasmic_tokens,
        plasmic_saa_s_website_css.plasmic_tokens,
        sty.openMenu1,
        {
          [sty.openMenu1hoverVarient_cloudOpen]: hasVariant(
            $state,
            "hoverVarient",
            "cloudOpen"
          ),
          [sty.openMenu1hoverVarient_dataOpen]: hasVariant(
            $state,
            "hoverVarient",
            "dataOpen"
          ),
          [sty.openMenu1hoverVarient_iotOpen]: hasVariant(
            $state,
            "hoverVarient",
            "iotOpen"
          ),
          [sty.openMenu1hoverVarient_productOpen]: hasVariant(
            $state,
            "hoverVarient",
            "productOpen"
          )
        }
      )}
      onClick={async event => {
        const $steps = {};
      }}
    >
      <div className={classNames(projectcss.all, sty.freeBox__sy4D)}>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__bQVi)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___9T7Ko)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__hw4Fq)}>
              <div
                className={classNames(projectcss.all, sty.columns__hHcm, {
                  [sty.columnshoverVarient_iotOpen__hHcmtsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  )
                })}
              >
                <div className={classNames(projectcss.all, sty.column__scKwa)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lIY8)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"copy"}
                      data-plasmic-override={overrides.copy}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.copy)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fVcd,
                          {
                            [sty.freeBoxhoverVarient_iotOpen__fVcdtsKsX]:
                              hasVariant($state, "hoverVarient", "iotOpen")
                          }
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uAycj
                          )}
                        >
                          {hasVariant(
                            globalVariants,
                            "screen",
                            "mobileOnly"
                          ) ? (
                            <React.Fragment>
                              <React.Fragment>{"We craft "}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__f4LkO
                                  )}
                                >
                                  {""}
                                </span>
                              }
                              <React.Fragment>{""}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__laLTa
                                  )}
                                >
                                  {hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? "Great Software"
                                    : "Great Software"}
                                </span>
                              }
                              <React.Fragment>
                                {" \ncatered to you"}
                              </React.Fragment>
                            </React.Fragment>
                          ) : (
                            <React.Fragment>
                              <React.Fragment>{"We craft\n"}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__edkp
                                  )}
                                >
                                  {"Great Software"}
                                </span>
                              }
                              <React.Fragment>
                                {" \ncatered to you"}
                              </React.Fragment>
                            </React.Fragment>
                          )}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ieWek,
                            {
                              [sty.texthoverVarient_iotOpen__ieWeKtsKsX]:
                                hasVariant($state, "hoverVarient", "iotOpen")
                            }
                          )}
                        >
                          {hasVariant(
                            globalVariants,
                            "screen",
                            "mobileOnly"
                          ) ? (
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 400 }}
                              >
                                {"Your\u00a0"}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__u13C4
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{
                                        color: "#000000",
                                        fontWeight: 400
                                      }}
                                    >
                                      {"technology"}
                                    </span>
                                  </React.Fragment>
                                </span>
                              }
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 400 }}
                              >
                                {" "}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__umPr8
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{ fontWeight: 400 }}
                                    >
                                      {"consulting"}
                                    </span>
                                  </React.Fragment>
                                </span>
                              }
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 400 }}
                              >
                                {" and "}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span___6LCl
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{ fontWeight: 400 }}
                                    >
                                      {"engineering partner"}
                                    </span>
                                  </React.Fragment>
                                </span>
                              }
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          ) : (
                            "Need the Best, Beautiful and Clean software ?"
                          )}
                        </div>
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eEby
                          )}
                        >
                          <Button2
                            className={classNames(
                              "__wab_instance",
                              sty.button2__rT5J1
                            )}
                            endIcon={
                              <Icon38Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___9TzWk
                                )}
                                role={"img"}
                              />
                            }
                            startIcon={
                              <CheckSvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gaSk2
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={false}
                          >
                            <Embed
                              className={classNames(
                                "__wab_instance",
                                sty.embedHtml___5Cgov
                              )}
                              code={
                                hasVariant(
                                  globalVariants,
                                  "screen",
                                  "mobileOnly"
                                )
                                  ? '<!-- Calendly link widget begin -->\n<link href="https://assets.calendly.com/assets/external/widget.css" rel="stylesheet">\n<script src="https://assets.calendly.com/assets/external/widget.js" type="text/javascript" async></script>\n<a href=""  style="color:white;text-decoration:none"  onclick="Calendly.initPopupWidget({url: \'https://calendly.com/shreyashjain1996/connect-with-vidyayatan?hide_event_type_details=1&hide_gdpr_banner=1\'});return false;">Book Free <br>Consultation</a>\n<!-- Calendly link widget end -->'
                                  : '<!-- Calendly link widget begin -->\n<link href="https://assets.calendly.com/assets/external/widget.css" rel="stylesheet">\n<script src="https://assets.calendly.com/assets/external/widget.js" type="text/javascript" async></script>\n<a href=""  style="color:white;text-decoration:none"  onclick="Calendly.initPopupWidget({url: \'https://calendly.com/shreyashjain1996/connect-with-vidyayatan?hide_event_type_details=1&hide_gdpr_banner=1\'});return false;">Book Free Consultation</a>\n<!-- Calendly link widget end -->\n'
                              }
                            />
                          </Button2>
                          <Button2
                            className={classNames(
                              "__wab_instance",
                              sty.button2__onOyr
                            )}
                            endIcon={
                              <Icon38Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aUr3
                                )}
                                role={"img"}
                              />
                            }
                            link={"https://wa.me/919425677707"}
                            startIcon={
                              <CheckSvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___8Sru0
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={true}
                            target={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eysRm
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "Message\non Whatsapp"
                                : hasVariant(
                                    globalVariants,
                                    "screen",
                                    "tabletOnly"
                                  )
                                ? "Message\non Whatsapp"
                                : "Message on Whatsapp"}
                            </div>
                          </Button2>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__no6F
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span___8G3C1
                                )}
                              >
                                <React.Fragment>
                                  <span
                                    className={
                                      "plasmic_default__all plasmic_default__span"
                                    }
                                    style={{ fontWeight: 700 }}
                                  >
                                    {"Open secret to this greatness"}
                                  </span>
                                </React.Fragment>
                              </span>
                            }
                            <React.Fragment>
                              {
                                "\nOur products are tailor-made to meet every one of your software requirements, We make "
                              }
                            </React.Fragment>
                            {
                              <span
                                className={classNames(
                                  projectcss.all,
                                  projectcss.span,
                                  projectcss.__wab_text,
                                  projectcss.plasmic_default__inline,
                                  sty.span__jrqY4
                                )}
                              >
                                {
                                  "Web & Mobile Applications, B2B or B2C Products"
                                }
                              </span>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  className={classNames(projectcss.all, sty.column__kjddm, {
                    [sty.columnhoverVarient_iotOpen__kjddmtsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    )
                  })}
                >
                  <Video
                    autoPlay={true}
                    className={classNames(
                      "__wab_instance",
                      sty.htmlVideo__oG5Rz
                    )}
                    controls={false}
                    loop={true}
                    muted={true}
                    playsInline={true}
                    src={
                      "https://firebasestorage.googleapis.com/v0/b/vidyayatan-d398a.appspot.com/o/Sequence%2001.mp4?alt=media&token=505f7496-1c7e-4a01-892b-388c1c3391cd"
                    }
                  />
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__dIYe)}>
                <div className={classNames(projectcss.all, sty.column___6Jwup)}>
                  <div
                    className={classNames(projectcss.all, sty.columns__tshLo)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__gnxMg)}
                    >
                      <PlasmicImg__
                        data-plasmic-name={"bharatpeLogo2"}
                        data-plasmic-override={overrides.bharatpeLogo2}
                        alt={"Bharatpe"}
                        className={classNames(sty.bharatpeLogo2)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "70px"
                            : "70px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vidyayatan_landing_page/images/bharatpeLogoPng.png",
                          fullWidth: 1366,
                          fullHeight: 768,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__irp7P)}
                    >
                      <PlasmicImg__
                        alt={"Habuild"}
                        className={classNames(sty.img___6Ez26)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "70px"
                            : "70px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vidyayatan_landing_page/images/habuildLogoPng.png",
                          fullWidth: 1366,
                          fullHeight: 768,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__hVx2J)}
                    >
                      <PlasmicImg__
                        alt={"Mccia"}
                        className={classNames(sty.img__unkT)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "70px"
                            : "70px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vidyayatan_landing_page/images/mcciaLogoPng.png",
                          fullWidth: 1366,
                          fullHeight: 768,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__sIaM)}
                    >
                      <PlasmicImg__
                        alt={"Mccia"}
                        className={classNames(sty.img___9PrL)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "70px"
                            : "70px"
                        }
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vidyayatan_landing_page/images/group1Png.png",
                          fullWidth: 923,
                          fullHeight: 106,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </div>
              </div>
              <section
                className={classNames(projectcss.all, sty.section__gwgJj)}
              >
                {(() => {
                  const child$Props = {
                    arrows: false,
                    autoplay: true,
                    autoplaySpeed: 3000,
                    beforeChange: generateStateOnChangePropForCodeComponents(
                      $state,
                      "currentSlide",
                      ["sliderCarousel", "currentSlide"],
                      SliderWrapper_Helpers
                    ),
                    centerMode: true,
                    centerPadding: "0",
                    className: classNames("__wab_instance", sty.sliderCarousel),
                    dots: false,
                    infinite: true,
                    initialSlide: generateStateValueProp($state, [
                      "sliderCarousel",
                      "currentSlide"
                    ]),
                    ref: ref => {
                      $refs["sliderCarousel"] = ref;
                    },
                    sliderScopeClassName: sty["sliderCarousel__slider"],
                    variableWidth: true
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "currentSlide",
                        plasmicStateName: "sliderCarousel.currentSlide"
                      }
                    ],
                    [],
                    SliderWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <SliderWrapper
                      data-plasmic-name={"sliderCarousel"}
                      data-plasmic-override={overrides.sliderCarousel}
                      {...child$Props}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pkAma
                        )}
                      >
                        <PlasmicImg__
                          data-plasmic-name={"bharatpeLogo"}
                          data-plasmic-override={overrides.bharatpeLogo}
                          alt={"Bharatpe"}
                          className={classNames(sty.bharatpeLogo)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "70px"
                              : "auto"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/vidyayatan_landing_page/images/bharatpeLogoPng.png",
                            fullWidth: 1366,
                            fullHeight: 768,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nxNaP
                        )}
                      >
                        <PlasmicImg__
                          alt={"Habuild"}
                          className={classNames(sty.img__irrOz)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "70px"
                              : "auto"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/vidyayatan_landing_page/images/habuildLogoPng.png",
                            fullWidth: 1366,
                            fullHeight: 768,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__dieq
                        )}
                      >
                        <PlasmicImg__
                          alt={"Mccia"}
                          className={classNames(sty.img__w7BSx)}
                          displayHeight={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "70px"
                              : "auto"
                          }
                          displayMaxHeight={"none"}
                          displayMaxWidth={"100%"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"auto"}
                          loading={"lazy"}
                          src={{
                            src: "/plasmic/vidyayatan_landing_page/images/mcciaLogoPng.png",
                            fullWidth: 1366,
                            fullHeight: 768,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </SliderWrapper>
                  );
                })()}
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__zdtXq
                  )}
                >
                  {
                    "helping enterprises and fast-growing organizations succeed in today\u2019s digital-first world"
                  }
                </h1>
                <Button2
                  className={classNames("__wab_instance", sty.button2__gRp4)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__xeDdb)}
                      role={"img"}
                    />
                  }
                  link={`/case-studies`}
                  showEndIcon={true}
                  startIcon={
                    <CheckSvgIcon
                      className={classNames(projectcss.all, sty.svg___3So2Z)}
                      role={"img"}
                    />
                  }
                  submitsForm={false}
                  target={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7TkA
                    )}
                  >
                    {"Read the Case Studies"}
                  </div>
                </Button2>
              </section>
            </div>
            <section className={classNames(projectcss.all, sty.section__zUpN9)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cdEvD)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ci2Ky)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yhdC)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mSeYi
                        )}
                      >
                        <TransferSvgrepoComSvgIcon
                          className={classNames(projectcss.all, sty.svg__jais3)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___5PBho
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kpyx0
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__t7Bmv
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___1C5Hr
                          )}
                        >
                          {"Offload"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lpJGc
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {"Our team handles complete software lifecycle"}
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iStfC)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__n1Yt6
                        )}
                      >
                        <Scale02SvgrepoComSvgIcon
                          className={classNames(projectcss.all, sty.svg__fFDt)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xxeph
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__d8P8D
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__r7C2X
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__skq8M
                          )}
                        >
                          {"Scale"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__z426J
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "Our software can handle load of all your features at scale"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__h41Sj)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ohQab
                        )}
                      >
                        <Icon15Icon
                          className={classNames(projectcss.all, sty.svg___0D7U)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__i8Pbl
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nw9Fk
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___8SFvp
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6DfLz
                          )}
                        >
                          {"Maintain"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cjVtK
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "Our clean & modular code does not expire for decades"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__aBg1E)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lexDy
                        )}
                      >
                        <Icon18Icon
                          className={classNames(projectcss.all, sty.svg__ddKd)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oDbUa
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__z4LCi
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zzDxE
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__omPqj
                          )}
                        >
                          {"Control"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mt6Ds
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "Our team take charge for quality and maintenance"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2Zaok
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mBuoQ
                        )}
                      >
                        <SecureSvgrepoComSvgIcon
                          className={classNames(projectcss.all, sty.svg__uBqth)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__gTr1
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__iXag
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ndqCj
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bKhP2
                          )}
                        >
                          {"Secure"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7KSy
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "Our applications are secure for external threats"
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </Stack__>
                    </Stack__>
                  </Stack__>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : false
                  ) ? (
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__imvFf)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__m8Xkx
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__moCep
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cWdvi
                            )}
                          >
                            <TransferSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__chyU6
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___0Z8Pe
                              )}
                            >
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__micff
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__kuqOr
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___44ToE
                              )}
                            >
                              {"Offload"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__icEI
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {
                                    "Our team handles complete software lifecycle"
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </Stack__>
                        </Stack__>
                      </div>
                      <div
                        className={classNames(projectcss.all, sty.column__bIwI)}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bGpJq
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9BnSu
                            )}
                          >
                            <Scale02SvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zainv
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__eqUbn
                              )}
                            >
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__afup7
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ueCl5
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1OQi
                              )}
                            >
                              {"Scale"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fXcxk
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {
                                    "Our software can handle load of all your features at scale"
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </Stack__>
                        </Stack__>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__doPmp
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jaIn4
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bsCwW
                            )}
                          >
                            <Icon15Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rzKsj
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__edZid
                              )}
                            >
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__tfesZ
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cirXw
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3MT
                              )}
                            >
                              {"Maintain"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gCmrZ
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {
                                    "Our clean & modular code does not expire for decades"
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </Stack__>
                        </Stack__>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__yBfE4
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__egfMr
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___81Jnz
                            )}
                          >
                            <Icon18Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___2Zm0Q
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__uCqxW
                              )}
                            >
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__p2GcK
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bPl1C
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3REh
                              )}
                            >
                              {"Control"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__s6ZOx
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {
                                    "Our team take charge for quality and maintenance"
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </Stack__>
                        </Stack__>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___7LMht
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mCieC
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yw788
                            )}
                          >
                            <SecureSvgrepoComSvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yp6VM
                              )}
                              role={"img"}
                            />
                          </div>
                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bP4Qg
                              )}
                            >
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mQeQs
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__wPDuC
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rwwsp
                              )}
                            >
                              {"Secure"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qAlqg
                              )}
                            >
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#000000" }}
                                >
                                  {
                                    "Our applications are secure for external threats"
                                  }
                                </span>
                              </React.Fragment>
                            </div>
                          </Stack__>
                        </Stack__>
                      </div>
                    </Stack__>
                  ) : null}
                </Stack__>
              </Stack__>
            </section>
          </Stack__>
          <CasesTestimonials
            data-plasmic-name={"casesTestimonials"}
            data-plasmic-override={overrides.casesTestimonials}
            className={classNames("__wab_instance", sty.casesTestimonials)}
          />
        </Stack__>
      </div>
      <div className={classNames(projectcss.all, sty.freeBox__mNqYv)}>
        <ImgHeadText
          data-plasmic-name={"imgHeadText"}
          data-plasmic-override={overrides.imgHeadText}
          className={classNames("__wab_instance", sty.imgHeadText)}
          slot={
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__g04Q9
              )}
            >
              {
                "Design and deliver new digital experiences, revenue streams and\nbusiness models to accelerate your \ngrowth."
              }
            </div>
          }
          slot2={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___2ZbPi)}
              displayHeight={"200px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"auto"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/vidyayatan_landing_page/images/kellySikkemaV9Fqr4TbIq8UnsplashJpg.jpg",
                fullWidth: 5568,
                fullHeight: 3712,
                aspectRatio: undefined
              }}
            />
          }
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__t7Xq5
            )}
          >
            {"We imagine."}
          </div>
        </ImgHeadText>
        <ImgHeadText
          data-plasmic-name={"_4"}
          data-plasmic-override={overrides._4}
          className={classNames("__wab_instance", sty._4)}
          slot={
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ah7Ey
              )}
            >
              {
                "Streamline your software engineering to drive greater efficiency and enable resiliency across your products and platforms."
              }
            </div>
          }
          slot2={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__mgqIl)}
              displayHeight={"100%"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/vidyayatan_landing_page/images/fotisFotopoulos6SAl6AQ4OwiUnsplashJpg.jpg",
                fullWidth: 3893,
                fullHeight: 2494,
                aspectRatio: undefined
              }}
            />
          }
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__coS4E
            )}
          >
            {"We engineer."}
          </div>
        </ImgHeadText>
        <ImgHeadText
          data-plasmic-name={"_5"}
          data-plasmic-override={overrides._5}
          className={classNames("__wab_instance", sty._5)}
          slot={
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fhneH
              )}
            >
              {
                "Transform and optimize the heartbeat of your operations, systems and product development to reduce costs and facilitate growth."
              }
            </div>
          }
          slot2={
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___2QgHl)}
              displayHeight={"100%"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/vidyayatan_landing_page/images/deniseChanKzPyx0Kls0UnsplashJpg.jpg",
                fullWidth: 4942,
                fullHeight: 3706,
                aspectRatio: undefined
              }}
            />
          }
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___8WfZw
            )}
          >
            {"We manage."}
          </div>
        </ImgHeadText>
      </div>
      <Reveal
        data-plasmic-name={"reveal"}
        data-plasmic-override={overrides.reveal}
        className={classNames("__wab_instance", sty.reveal)}
        triggerOnce={true}
      >
        <section
          className={classNames(projectcss.all, sty.section__cfadG, {
            [sty.sectionhoverVarient_dataOpen__cfadGqo5Yc]: hasVariant(
              $state,
              "hoverVarient",
              "dataOpen"
            ),
            [sty.sectionhoverVarient_iotOpen__cfadGtsKsX]: hasVariant(
              $state,
              "hoverVarient",
              "iotOpen"
            ),
            [sty.sectionhoverVarient_productOpen__cfadGNtFxp]: hasVariant(
              $state,
              "hoverVarient",
              "productOpen"
            )
          })}
        >
          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1__xkji2
            )}
          >
            {"Our Services"}
          </h1>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eiQ9N
            )}
          >
            {
              "Delivering domain expertise and technology-driven offerings to help you turn digital challenges into opportunities"
            }
          </div>
          {(() => {
            const child$Props = {
              accessibility: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined,
              arrows: hasVariant(globalVariants, "screen", "mobileOnly")
                ? false
                : false,
              autoplay: true,
              autoplaySpeed: 3000,
              beforeChange: generateStateOnChangePropForCodeComponents(
                $state,
                "currentSlide",
                ["sliderCarousel2", "currentSlide"],
                SliderWrapper_Helpers
              ),
              centerMode: hasVariant(globalVariants, "screen", "mobileOnly")
                ? false
                : true,
              centerPadding: "0",
              className: classNames("__wab_instance", sty.sliderCarousel2),
              cssEase: "linear",
              draggable: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined,
              infinite: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined,
              initialSlide: generateStateValueProp($state, [
                "sliderCarousel2",
                "currentSlide"
              ]),
              pauseOnHover: hasVariant(globalVariants, "screen", "mobileOnly")
                ? false
                : undefined,
              ref: ref => {
                $refs["sliderCarousel2"] = ref;
              },
              sliderScopeClassName: sty["sliderCarousel2__slider"],
              slidesPerRow: hasVariant(globalVariants, "screen", "mobileOnly")
                ? 1
                : 3,
              speed: 5000,
              swipe: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined,
              swipeToSlide: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined,
              touchMove: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined,
              useTransform: hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : undefined
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "currentSlide",
                  plasmicStateName: "sliderCarousel2.currentSlide"
                }
              ],
              [],
              SliderWrapper_Helpers ?? {},
              child$Props
            );

            return (
              <SliderWrapper
                data-plasmic-name={"sliderCarousel2"}
                data-plasmic-override={overrides.sliderCarousel2}
                {...child$Props}
              >
                <div className={classNames(projectcss.all, sty.freeBox__pz4Nn)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__xhp2R
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "tabletOnly")
                      ? "Outsourcing\nSoftware"
                      : "Outsourcing\nSoftware"}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yc0OY
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "tabletOnly") ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {
                            "We discuss your business needs and requirements, and upon your approval, take  for project delivery. All artefacts, intellectual property rights and  expertise are handed over  to your organisation after deployment. We aim to solve real business problem."
                          }
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {
                            "We discuss your business needs and requirements, and upon your approval, take  for project delivery. All artefacts, intellectual property rights and  expertise are handed over  to your organisation after deployment. We aim to solve real business problem."
                          }
                        </span>
                      </React.Fragment>
                    )}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__kDtDb)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__m0FPo
                    )}
                  >
                    {"Technological\nPartnership"}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yq1JF
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {
                          "We dive deep into your business by putting forward pertinent questions, brainstorming solutions, contributing with our expert knowledge and rapidly gathering feedback. In addition to helping with infrastructure optimisation and cost analysis."
                        }
                      </span>
                    </React.Fragment>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__iu1G)}>
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__daKdk
                    )}
                  >
                    {"Dedicated\nTeams"}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__imEHw
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {
                          "We provide customers with fully equipped, dedicated development teams. We are ready to serve you under your direct management. Our team members work exclusively on the projects they are assigned to. Teams tend to be and involve specialists in multiple roles."
                        }
                      </span>
                    </React.Fragment>
                  </div>
                </div>
              </SliderWrapper>
            );
          })()}
          <div
            className={classNames(projectcss.all, sty.freeBox___9SCP, {
              [sty.freeBoxhoverVarient_cloudOpen___9SCPPwdvm]: hasVariant(
                $state,
                "hoverVarient",
                "cloudOpen"
              ),
              [sty.freeBoxhoverVarient_dataOpen___9SCPQo5Yc]: hasVariant(
                $state,
                "hoverVarient",
                "dataOpen"
              ),
              [sty.freeBoxhoverVarient_iotOpen___9SCPtsKsX]: hasVariant(
                $state,
                "hoverVarient",
                "iotOpen"
              ),
              [sty.freeBoxhoverVarient_productOpen___9SCPNtFxp]: hasVariant(
                $state,
                "hoverVarient",
                "productOpen"
              )
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__gz44G, {
                [sty.freeBoxhoverVarient_cloudOpen__gz44Gpwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__gz44Gqo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__gz44GtsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__gz44GNtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__unFmj, {
                  [sty.freeBoxhoverVarient_productOpen__unFmjNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <EngineerConfigSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg__wbSqd, {
                    [sty.svghoverVarient_dataOpen__wbSqdqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.svghoverVarient_productOpen__wbSqdNtFxp]: hasVariant(
                      $state,
                      "hoverVarient",
                      "productOpen"
                    )
                  })}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rIgxA,
                    {
                      [sty.texthoverVarient_productOpen__rIgxANtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    }
                  )}
                >
                  {"Software Product Engineering"}
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sSeVs, {
                  [sty.freeBoxhoverVarient_cloudOpen__sSeVsPwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__sSeVsQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_iotOpen__sSeVstsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__sSeVsNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___6EMjQ, {
                    [sty.freeBoxhoverVarient_productOpen___6EMjQNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__viqOs,
                      {
                        [sty.texthoverVarient_productOpen__viqOsNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Design your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__aJKiQ, {
                      [sty.svghoverVarient_productOpen__aJKiQNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__vn4E, {
                    [sty.freeBoxhoverVarient_productOpen__vn4ENtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7K9K6,
                      {
                        [sty.texthoverVarient_productOpen___7K9K6NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-kzT08fQBAHgz)" }}
                      >
                        {"Build Web or Mobile Application"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__e54Yt, {
                      [sty.svghoverVarient_productOpen__e54YtNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___2ZMhS, {
                    [sty.freeBoxhoverVarient_productOpen___2ZMhSNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__elv6L,
                      {
                        [sty.texthoverVarient_productOpen__elv6LNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Scale or Maintain your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___7Za7P, {
                      [sty.svghoverVarient_productOpen___7Za7PNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___6Q608, {
                    [sty.freeBoxhoverVarient_productOpen___6Q608NtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__rSw8Y,
                      {
                        [sty.texthoverVarient_productOpen__rSw8YNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Quality Assurance of your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__gRpTs, {
                      [sty.svghoverVarient_dataOpen__gRpTsQo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__gRpTsNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ijZWe, {
                    [sty.freeBoxhoverVarient_productOpen__ijZWeNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9Sur1,
                      {
                        [sty.texthoverVarient_productOpen___9Sur1NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Migrate to Micro-Services"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__iSsI, {
                      [sty.svghoverVarient_dataOpen__iSsIqo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__iSsINtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
              </Stack__>
              {(() => {
                const child$Props = {
                  className: classNames("__wab_instance", sty.rangeSlider),
                  draggableTrack: false,
                  onChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "min",
                      ["rangeSlider", "min"],
                      AntdRangeSlider_Helpers
                    ).apply(null, eventArgs);
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "max",
                      ["rangeSlider", "max"],
                      AntdRangeSlider_Helpers
                    ).apply(null, eventArgs);
                  },
                  sliderScopeClassName: sty["rangeSlider__slider"],
                  stylableMarks: (
                    <AntdSliderMark
                      data-plasmic-name={"sliderMark"}
                      data-plasmic-override={overrides.sliderMark}
                      className={classNames("__wab_instance", sty.sliderMark)}
                      mark={50}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pxmCp
                        )}
                      >
                        {"Stylable Mark"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ldw1W
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__ttI52
                          )}
                        >
                          {"Outsourcing Software Development"}
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7HvyG
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "We discuss your business priorities and requirements, and upon your approval, take  for project delivery. All artefacts, intellectual property rights and expertise are handed over to your organisation after development."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__szUck
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__yOm17
                          )}
                        >
                          {"Software Product Development"}
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iaVu4
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "We help customers throughout their product journey, from initial concept to market. Working primarily as partners, we contribute ideas and refine product vision, iteratively testing, building user-targeted MVPs and market-ready solutions."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__uhJac
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__jvRoc
                          )}
                        >
                          {"Legacy Software\nRefactoring"}
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w1GP
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "Software Planet Group can also assist our customers with adding features and enhancing existing systems. We use a variety of practices including code refactoring and automated testing to improve the overall software architecture. "
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0BtzE
                        )}
                      >
                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1___5VeOj
                          )}
                        >
                          {"Technological\nPartnership"}
                        </h1>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aTl2H
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {
                                "We dive deep into your business by putting forward pertinent questions, brainstorming solutions, contributing with our expert knowledge and rapidly gathering feedback. In addition to helping with infrastructure optimisation and cost analysis."
                              }
                            </span>
                          </React.Fragment>
                        </div>
                      </div>
                    </AntdSliderMark>
                  ),
                  tooltipVisible: "unset",
                  valueMax: generateStateValueProp($state, [
                    "rangeSlider",
                    "max"
                  ]),
                  valueMin: generateStateValueProp($state, [
                    "rangeSlider",
                    "min"
                  ]),
                  vertical: false
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "min",
                      plasmicStateName: "rangeSlider.min"
                    },
                    {
                      name: "max",
                      plasmicStateName: "rangeSlider.max"
                    }
                  ],
                  [],
                  AntdRangeSlider_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdRangeSlider
                    data-plasmic-name={"rangeSlider"}
                    data-plasmic-override={overrides.rangeSlider}
                    {...child$Props}
                  />
                );
              })()}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dYW5, {
                [sty.freeBoxhoverVarient_cloudOpen__dYW5Pwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__dYW5Qo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__dYW5TsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__dYW5NtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__pqSiV, {
                  [sty.freeBoxhoverVarient_dataOpen__pqSiVqo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__pqSiVNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToProductEngineering"] = true
                    ? (() => {
                        const actionArgs = { destination: `/product` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToProductEngineering"] != null &&
                    typeof $steps["goToProductEngineering"] === "object" &&
                    typeof $steps["goToProductEngineering"].then === "function"
                  ) {
                    $steps["goToProductEngineering"] = await $steps[
                      "goToProductEngineering"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "productOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__aTv76, {
                    [sty.freeBoxhoverVarient_productOpen__aTv76NtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hwx1L,
                      {
                        [sty.texthoverVarient_productOpen__hwx1LNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    {"Software Product\nEngineering"}
                  </div>
                  <EngineerConfigSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__woXuU, {
                      [sty.svghoverVarient_dataOpen__woXuUqo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__woXuUNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__l6HbD, {
                    [sty.freeBoxhoverVarient_dataOpen__l6HbDqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__l6HbDNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dRfb, {
                      [sty.freeBoxhoverVarient_productOpen__dRfbNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rYh6P,
                        {
                          [sty.texthoverVarient_productOpen__rYh6PNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Design your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg___1S7Tt, {
                        [sty.svghoverVarient_productOpen___1S7TtNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qJqL2, {
                      [sty.freeBoxhoverVarient_productOpen__qJqL2NtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aHvcg,
                        {
                          [sty.texthoverVarient_productOpen__aHvcgNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-kzT08fQBAHgz)" }}
                        >
                          {"Build Web or Mobile Application"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__rSiv9, {
                        [sty.svghoverVarient_productOpen__rSiv9NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vvjFa, {
                      [sty.freeBoxhoverVarient_productOpen__vvjFaNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lGpjj,
                        {
                          [sty.texthoverVarient_productOpen__lGpjjNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Scale or Maintain your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__oyqv6, {
                        [sty.svghoverVarient_productOpen__oyqv6NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mlZdq, {
                      [sty.freeBoxhoverVarient_productOpen__mlZdqNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hdCl7,
                        {
                          [sty.texthoverVarient_productOpen__hdCl7NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Quality Assurance of your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__xK3, {
                        [sty.svghoverVarient_dataOpen__xK3Qo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen__xK3NtFxp]: hasVariant(
                          $state,
                          "hoverVarient",
                          "productOpen"
                        )
                      })}
                      role={"img"}
                    />
                  </div>
                </Stack__>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__wJwXm, {
                  [sty.freeBoxhoverVarient_dataOpen__wJwXmQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__wJwXmNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToCloudAndInfra"] = true
                    ? (() => {
                        const actionArgs = { destination: `/cloud` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToCloudAndInfra"] != null &&
                    typeof $steps["goToCloudAndInfra"] === "object" &&
                    typeof $steps["goToCloudAndInfra"].then === "function"
                  ) {
                    $steps["goToCloudAndInfra"] = await $steps[
                      "goToCloudAndInfra"
                    ];
                  }
                }}
              >
                <div className={classNames(projectcss.all, sty.freeBox__x81BX)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__buHRt
                    )}
                  >
                    {"Cloud\nInfra &\nOptimisations"}
                  </div>
                  <CloudWiredSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__vsjDn)}
                    role={"img"}
                  />
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__hqkfd, {
                  [sty.freeBoxhoverVarient_dataOpen__hqkfdQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__hqkfdNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__doQNr, {
                    [sty.freeBoxhoverVarient_dataOpen__doQNrQo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__doQNrNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mVaZh
                    )}
                  >
                    {"Intelligent\nAutomations\n& Processes"}
                  </div>
                  <AutomationSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__eUgwB)}
                    role={"img"}
                  />
                </div>
              </div>
            </Stack__>
            <div
              className={classNames(projectcss.all, sty.freeBox__x19PO, {
                [sty.freeBoxhoverVarient_cloudOpen__x19POpwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__x19POqo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__x19POtsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__x19PONtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
              onClick={async event => {
                const $steps = {};

                $steps["goToDataEngineeringAndAnalysis"] = true
                  ? (() => {
                      const actionArgs = { destination: `/data` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToDataEngineeringAndAnalysis"] != null &&
                  typeof $steps["goToDataEngineeringAndAnalysis"] ===
                    "object" &&
                  typeof $steps["goToDataEngineeringAndAnalysis"].then ===
                    "function"
                ) {
                  $steps["goToDataEngineeringAndAnalysis"] = await $steps[
                    "goToDataEngineeringAndAnalysis"
                  ];
                }
              }}
              onMouseEnter={async event => {
                const $steps = {};

                $steps["updateHoverVarient"] = true
                  ? (() => {
                      const actionArgs = {
                        vgroup: "hoverVarient",
                        operation: 0,
                        value: "dataOpen"
                      };
                      return (({ vgroup, value }) => {
                        if (typeof value === "string") {
                          value = [value];
                        }

                        $stateSet($state, vgroup, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateHoverVarient"] != null &&
                  typeof $steps["updateHoverVarient"] === "object" &&
                  typeof $steps["updateHoverVarient"].then === "function"
                ) {
                  $steps["updateHoverVarient"] = await $steps[
                    "updateHoverVarient"
                  ];
                }
              }}
              onMouseLeave={async event => {
                const $steps = {};

                $steps["updateHoverVarient"] = true
                  ? (() => {
                      const actionArgs = {
                        vgroup: "hoverVarient",
                        operation: 0,
                        value: []
                      };
                      return (({ vgroup, value }) => {
                        if (typeof value === "string") {
                          value = [value];
                        }

                        $stateSet($state, vgroup, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateHoverVarient"] != null &&
                  typeof $steps["updateHoverVarient"] === "object" &&
                  typeof $steps["updateHoverVarient"].then === "function"
                ) {
                  $steps["updateHoverVarient"] = await $steps[
                    "updateHoverVarient"
                  ];
                }
              }}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__gcKwo, {
                  [sty.freeBoxhoverVarient_dataOpen__gcKwoqo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__gcKwoNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wZBs
                  )}
                >
                  {"Data Science and Engineering"}
                </div>
                <ChartScatter3DSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg___9JzNy)}
                  role={"img"}
                />
              </div>
              {(
                hasVariant($state, "hoverVarient", "dataOpen")
                  ? true
                  : hasVariant($state, "hoverVarient", "productOpen")
                  ? true
                  : false
              ) ? (
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__e3NtH, {
                    [sty.freeBoxhoverVarient_dataOpen__e3NtHqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__e3NtHNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hpouc, {
                      [sty.freeBoxhoverVarient_dataOpen__hpoucQo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen__hpoucNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nglVc,
                        {
                          [sty.texthoverVarient_productOpen__nglVcNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Data extraction, cleaning & ingestion"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__uUjq, {
                        [sty.svghoverVarient_productOpen__uUjqNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__x7Kz4, {
                      [sty.freeBoxhoverVarient_dataOpen__x7Kz4Qo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen__x7Kz4NtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pa3Am,
                        {
                          [sty.texthoverVarient_productOpen__pa3AmNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-kzT08fQBAHgz)" }}
                        >
                          {"Data Pipelines and Automations"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__utkJs, {
                        [sty.svghoverVarient_productOpen__utkJsNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6Muoo, {
                      [sty.freeBoxhoverVarient_dataOpen___6MuooQo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen___6MuooNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6JXcg,
                        {
                          [sty.texthoverVarient_productOpen___6JXcgNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Contextualizing, training & fine tuning ML models"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg___4OqZ, {
                        [sty.svghoverVarient_productOpen___4OqZNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1ZGv, {
                      [sty.freeBoxhoverVarient_cloudOpen___1ZGvpwdvm]:
                        hasVariant($state, "hoverVarient", "cloudOpen"),
                      [sty.freeBoxhoverVarient_dataOpen___1ZGvqo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen___1ZGvNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7Chd,
                        {
                          [sty.texthoverVarient_productOpen___7ChdNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Deploying and maintaining ML models"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__tgVsx, {
                        [sty.svghoverVarient_productOpen__tgVsxNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                </Stack__>
              ) : null}
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qyJeH, {
                [sty.freeBoxhoverVarient_cloudOpen__qyJeHpwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__qyJeHqo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__qyJeHtsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__qyJeHNtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__a09L3, {
                  [sty.freeBoxhoverVarient_dataOpen__a09L3Qo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__a09L3NtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToDataEngineeringAndAnalysis"] = true
                    ? (() => {
                        const actionArgs = { destination: `/data` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToDataEngineeringAndAnalysis"] != null &&
                    typeof $steps["goToDataEngineeringAndAnalysis"] ===
                      "object" &&
                    typeof $steps["goToDataEngineeringAndAnalysis"].then ===
                      "function"
                  ) {
                    $steps["goToDataEngineeringAndAnalysis"] = await $steps[
                      "goToDataEngineeringAndAnalysis"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "dataOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__zrSzf, {
                    [sty.freeBoxhoverVarient_dataOpen__zrSzfQo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__zrSzfNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z5UMj
                    )}
                  >
                    {"Data Science and Engineering"}
                  </div>
                  <ChartScatter3DSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__pp0Am)}
                    role={"img"}
                  />
                </div>
                {(
                  hasVariant($state, "hoverVarient", "dataOpen")
                    ? true
                    : hasVariant($state, "hoverVarient", "productOpen")
                    ? true
                    : false
                ) ? (
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__i6J6M, {
                      [sty.freeBoxhoverVarient_dataOpen__i6J6Mqo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen__i6J6MNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__rgHtK,
                        {
                          [sty.freeBoxhoverVarient_productOpen__rgHtKNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uIiVw,
                          {
                            [sty.texthoverVarient_productOpen__uIiVwNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Data extraction, cleaning & ingestion"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__x39P, {
                          [sty.svghoverVarient_productOpen__x39PNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__aGoM, {
                        [sty.freeBoxhoverVarient_productOpen__aGoMNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fwuOn,
                          {
                            [sty.texthoverVarient_productOpen__fwuOnNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-kzT08fQBAHgz)" }}
                          >
                            {"Data Pipelines and Automations"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___97PZ, {
                          [sty.svghoverVarient_productOpen___97PZNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__dWwIv,
                        {
                          [sty.freeBoxhoverVarient_productOpen__dWwIvNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xM4B8,
                          {
                            [sty.texthoverVarient_productOpen__xM4B8NtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {
                              "Contextualizing, training & fine tuning ML models"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__tSx6L, {
                          [sty.svghoverVarient_productOpen__tSx6LNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__jDxCp,
                        {
                          [sty.freeBoxhoverVarient_productOpen__jDxCpNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cv1Tl,
                          {
                            [sty.texthoverVarient_productOpen__cv1TlNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Deploying and maintaining ML models"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__dlv1J, {
                          [sty.svghoverVarient_productOpen__dlv1JNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                ) : null}
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__pAuHt, {
                  [sty.freeBoxhoverVarient_dataOpen__pAuHtqo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__pAuHtNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToCloudAndInfra"] = true
                    ? (() => {
                        const actionArgs = { destination: `/cloud` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToCloudAndInfra"] != null &&
                    typeof $steps["goToCloudAndInfra"] === "object" &&
                    typeof $steps["goToCloudAndInfra"].then === "function"
                  ) {
                    $steps["goToCloudAndInfra"] = await $steps[
                      "goToCloudAndInfra"
                    ];
                  }
                }}
              >
                <div className={classNames(projectcss.all, sty.freeBox__cpaey)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ycVOm
                    )}
                  >
                    {"Cloud\nInfra &\nOptimisations"}
                  </div>
                  <CloudWiredSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__c5Ta5)}
                    role={"img"}
                  />
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox___4W7Ml, {
                  [sty.freeBoxhoverVarient_dataOpen___4W7MlQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen___4W7MlNtFxp]:
                    hasVariant($state, "hoverVarient", "productOpen")
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___987E9, {
                    [sty.freeBoxhoverVarient_dataOpen___987E9Qo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen___987E9NtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qQjwa
                    )}
                  >
                    {"Intelligent\nAutomations\n& Processes"}
                  </div>
                  <AutomationSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__vnqL)}
                    role={"img"}
                  />
                </div>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__sww9X, {
                [sty.freeBoxhoverVarient_cloudOpen__sww9Xpwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__sww9Xqo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__sww9XtsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__sww9XNtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__oAh51, {
                  [sty.freeBoxhoverVarient_cloudOpen__oAh51Pwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__oAh51Qo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__oAh51NtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToProductEngineering"] = true
                    ? (() => {
                        const actionArgs = { destination: `/product` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToProductEngineering"] != null &&
                    typeof $steps["goToProductEngineering"] === "object" &&
                    typeof $steps["goToProductEngineering"].then === "function"
                  ) {
                    $steps["goToProductEngineering"] = await $steps[
                      "goToProductEngineering"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "productOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__eGBu, {
                    [sty.freeBoxhoverVarient_productOpen__eGBuNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kqqWs,
                      {
                        [sty.texthoverVarient_productOpen__kqqWsNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    {"Software Product\nEngineering"}
                  </div>
                  <EngineerConfigSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg___0Xtp, {
                      [sty.svghoverVarient_dataOpen___0XtpQo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen___0XtpNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hFj94, {
                    [sty.freeBoxhoverVarient_dataOpen__hFj94Qo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__hFj94NtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__s7VcL, {
                      [sty.freeBoxhoverVarient_productOpen__s7VcLNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oYzp,
                        {
                          [sty.texthoverVarient_productOpen__oYzpNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Design your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__fdJcm, {
                        [sty.svghoverVarient_productOpen__fdJcmNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__v5JKv, {
                      [sty.freeBoxhoverVarient_productOpen__v5JKvNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uk2K4,
                        {
                          [sty.texthoverVarient_productOpen__uk2K4NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-kzT08fQBAHgz)" }}
                        >
                          {"Build Web or Mobile Application"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__n3G3B, {
                        [sty.svghoverVarient_productOpen__n3G3BNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7U2D, {
                      [sty.freeBoxhoverVarient_productOpen___7U2DNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4NAc0,
                        {
                          [sty.texthoverVarient_productOpen___4NAc0NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Scale or Maintain your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__nWaU1, {
                        [sty.svghoverVarient_productOpen__nWaU1NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u5RdF, {
                      [sty.freeBoxhoverVarient_productOpen__u5RdFNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aLl,
                        {
                          [sty.texthoverVarient_productOpen__aLlNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Quality Assurance of your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__rYpRl, {
                        [sty.svghoverVarient_dataOpen__rYpRlqo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen__rYpRlNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__we35V, {
                      [sty.freeBoxhoverVarient_productOpen__we35VNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0WT4O,
                        {
                          [sty.texthoverVarient_productOpen___0WT4ONtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Migrate to Micro-Services"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__cfpvT, {
                        [sty.svghoverVarient_dataOpen__cfpvTqo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen__cfpvTNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                </Stack__>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__bUan7, {
                  [sty.freeBoxhoverVarient_cloudOpen__bUan7Pwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__bUan7Qo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__bUan7NtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToDataEngineeringAndAnalysis"] = true
                    ? (() => {
                        const actionArgs = { destination: `/data` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToDataEngineeringAndAnalysis"] != null &&
                    typeof $steps["goToDataEngineeringAndAnalysis"] ===
                      "object" &&
                    typeof $steps["goToDataEngineeringAndAnalysis"].then ===
                      "function"
                  ) {
                    $steps["goToDataEngineeringAndAnalysis"] = await $steps[
                      "goToDataEngineeringAndAnalysis"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "dataOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__nevkd, {
                    [sty.freeBoxhoverVarient_dataOpen__nevkdqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__nevkdNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__srPif
                    )}
                  >
                    {"Data Science and Engineering"}
                  </div>
                  <ChartScatter3DSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg___8GyUe)}
                    role={"img"}
                  />
                </div>
                {(
                  hasVariant($state, "hoverVarient", "dataOpen")
                    ? true
                    : hasVariant($state, "hoverVarient", "productOpen")
                    ? true
                    : false
                ) ? (
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__po0KM, {
                      [sty.freeBoxhoverVarient_dataOpen__po0KMqo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen__po0KMNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__tAt2U,
                        {
                          [sty.freeBoxhoverVarient_dataOpen__tAt2UQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen__tAt2UNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ljVdA,
                          {
                            [sty.texthoverVarient_productOpen__ljVdANtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Data extraction, cleaning & ingestion"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__lxOmI, {
                          [sty.svghoverVarient_productOpen__lxOmINtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__udh3E,
                        {
                          [sty.freeBoxhoverVarient_dataOpen__udh3EQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen__udh3ENtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__eFdTs,
                          {
                            [sty.texthoverVarient_productOpen__eFdTsNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-kzT08fQBAHgz)" }}
                          >
                            {"Data Pipelines and Automations"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__af0Sb, {
                          [sty.svghoverVarient_productOpen__af0SbNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__bSaOn,
                        {
                          [sty.freeBoxhoverVarient_dataOpen__bSaOnQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen__bSaOnNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5Mlsi,
                          {
                            [sty.texthoverVarient_productOpen___5MlsiNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {
                              "Contextualizing, training & fine tuning ML models"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__gogC5, {
                          [sty.svghoverVarient_productOpen__gogC5NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__m2UZc,
                        {
                          [sty.freeBoxhoverVarient_dataOpen__m2UZcQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen__m2UZcNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__e9DbY,
                          {
                            [sty.texthoverVarient_productOpen__e9DbYNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Deploying and maintaining ML models"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__utsol, {
                          [sty.svghoverVarient_productOpen__utsolNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                ) : null}
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__oeHdi, {
                  [sty.freeBoxhoverVarient_cloudOpen__oeHdiPwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__oeHdiQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__oeHdiNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__fRmUo, {
                    [sty.freeBoxhoverVarient_dataOpen__fRmUoqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__fRmUoNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z5A8I
                    )}
                  >
                    {"Intelligent\nAutomations\n& Processes"}
                  </div>
                  <AutomationSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg___5DEzz)}
                    role={"img"}
                  />
                </div>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cKJjW, {
                [sty.freeBoxhoverVarient_cloudOpen__cKJjWpwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__cKJjWqo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__cKJjWtsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__cKJjWNtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__xcvFb, {
                  [sty.freeBoxhoverVarient_cloudOpen__xcvFbPwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__xcvFbQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_iotOpen__xcvFbtsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__xcvFbNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToProductEngineering"] = true
                    ? (() => {
                        const actionArgs = { destination: `/product` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToProductEngineering"] != null &&
                    typeof $steps["goToProductEngineering"] === "object" &&
                    typeof $steps["goToProductEngineering"].then === "function"
                  ) {
                    $steps["goToProductEngineering"] = await $steps[
                      "goToProductEngineering"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "productOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__j0Lxc, {
                    [sty.freeBoxhoverVarient_productOpen__j0LxcNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Eg9V,
                      {
                        [sty.texthoverVarient_productOpen___6Eg9VNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    {"Software Product\nEngineering"}
                  </div>
                  <EngineerConfigSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__n8Yld, {
                      [sty.svghoverVarient_dataOpen__n8Yldqo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__n8YldNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__f6VNf, {
                    [sty.freeBoxhoverVarient_cloudOpen__f6VNfpwdvm]: hasVariant(
                      $state,
                      "hoverVarient",
                      "cloudOpen"
                    ),
                    [sty.freeBoxhoverVarient_dataOpen__f6VNfqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__f6VNfNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2Wydh, {
                      [sty.freeBoxhoverVarient_productOpen___2WydhNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___614M,
                        {
                          [sty.texthoverVarient_productOpen___614MNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Design your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__sWlIc, {
                        [sty.svghoverVarient_productOpen__sWlIcNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__iGoOb, {
                      [sty.freeBoxhoverVarient_productOpen__iGoObNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wNJlt,
                        {
                          [sty.texthoverVarient_productOpen__wNJltNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-kzT08fQBAHgz)" }}
                        >
                          {"Build Web or Mobile Application"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__jOqU, {
                        [sty.svghoverVarient_productOpen__jOqUNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hHnK, {
                      [sty.freeBoxhoverVarient_productOpen__hHnKNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0K8EQ,
                        {
                          [sty.texthoverVarient_productOpen___0K8EQNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Scale or Maintain your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__q2DHv, {
                        [sty.svghoverVarient_productOpen__q2DHvNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bDiZx, {
                      [sty.freeBoxhoverVarient_productOpen__bDiZxNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gI8Qs,
                        {
                          [sty.texthoverVarient_productOpen__gI8QsNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Quality Assurance of your Product"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg___8SsRq, {
                        [sty.svghoverVarient_dataOpen___8SsRqqo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen___8SsRqNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rvUvb, {
                      [sty.freeBoxhoverVarient_productOpen__rvUvbNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mhMcd,
                        {
                          [sty.texthoverVarient_productOpen__mhMcdNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Migrate to Micro-Services"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__eiqLq, {
                        [sty.svghoverVarient_dataOpen__eiqLqQo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen__eiqLqNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                </Stack__>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__iLzfO, {
                  [sty.freeBoxhoverVarient_cloudOpen__iLzfOpwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__iLzfOqo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_iotOpen__iLzfOtsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__iLzfONtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToDataEngineeringAndAnalysis"] = true
                    ? (() => {
                        const actionArgs = { destination: `/data` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToDataEngineeringAndAnalysis"] != null &&
                    typeof $steps["goToDataEngineeringAndAnalysis"] ===
                      "object" &&
                    typeof $steps["goToDataEngineeringAndAnalysis"].then ===
                      "function"
                  ) {
                    $steps["goToDataEngineeringAndAnalysis"] = await $steps[
                      "goToDataEngineeringAndAnalysis"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "dataOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__pvZp, {
                    [sty.freeBoxhoverVarient_dataOpen__pvZpQo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__pvZpNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fx363
                    )}
                  >
                    {"Data Science and Engineering"}
                  </div>
                  <ChartScatter3DSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__euA9)}
                    role={"img"}
                  />
                </div>
                {(
                  hasVariant($state, "hoverVarient", "dataOpen")
                    ? true
                    : hasVariant($state, "hoverVarient", "productOpen")
                    ? true
                    : false
                ) ? (
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___9QSuy, {
                      [sty.freeBoxhoverVarient_dataOpen___9QSuyqo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen___9QSuyNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__gcdNv,
                        {
                          [sty.freeBoxhoverVarient_dataOpen__gcdNvQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen__gcdNvNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3NLpl,
                          {
                            [sty.texthoverVarient_productOpen___3NLplNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Data extraction, cleaning & ingestion"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__av0Zx, {
                          [sty.svghoverVarient_productOpen__av0ZxNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__t8OJw,
                        {
                          [sty.freeBoxhoverVarient_dataOpen__t8OJwQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen__t8OJwNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mckAa,
                          {
                            [sty.texthoverVarient_productOpen__mckAaNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-kzT08fQBAHgz)" }}
                          >
                            {"Data Pipelines and Automations"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__z6HcJ, {
                          [sty.svghoverVarient_productOpen__z6HcJNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pjMA, {
                        [sty.freeBoxhoverVarient_dataOpen__pjMAqo5Yc]:
                          hasVariant($state, "hoverVarient", "dataOpen"),
                        [sty.freeBoxhoverVarient_productOpen__pjMANtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tiHWr,
                          {
                            [sty.texthoverVarient_productOpen__tiHWrNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {
                              "Contextualizing, training & fine tuning ML models"
                            }
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__ixVYg, {
                          [sty.svghoverVarient_productOpen__ixVYgNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2YHww,
                        {
                          [sty.freeBoxhoverVarient_dataOpen___2YHwwQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.freeBoxhoverVarient_productOpen___2YHwwNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__v7P,
                          {
                            [sty.texthoverVarient_productOpen__v7PNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Deploying and maintaining ML models"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__sa8Gd, {
                          [sty.svghoverVarient_productOpen__sa8GdNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                ) : null}
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__dtYfd, {
                  [sty.freeBoxhoverVarient_cloudOpen__dtYfdPwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__dtYfdQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_iotOpen__dtYfdtsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__dtYfdNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["goToCloudAndInfra"] = true
                    ? (() => {
                        const actionArgs = { destination: `/cloud` };
                        return (({ destination }) => {
                          if (
                            typeof destination === "string" &&
                            destination.startsWith("#")
                          ) {
                            document
                              .getElementById(destination.substr(1))
                              .scrollIntoView({ behavior: "smooth" });
                          } else {
                            __nextRouter?.push(destination);
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["goToCloudAndInfra"] != null &&
                    typeof $steps["goToCloudAndInfra"] === "object" &&
                    typeof $steps["goToCloudAndInfra"].then === "function"
                  ) {
                    $steps["goToCloudAndInfra"] = await $steps[
                      "goToCloudAndInfra"
                    ];
                  }
                }}
                onMouseEnter={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: "cloudOpen"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
                onMouseLeave={async event => {
                  const $steps = {};

                  $steps["updateHoverVarient"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "hoverVarient",
                          operation: 0,
                          value: []
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateHoverVarient"] != null &&
                    typeof $steps["updateHoverVarient"] === "object" &&
                    typeof $steps["updateHoverVarient"].then === "function"
                  ) {
                    $steps["updateHoverVarient"] = await $steps[
                      "updateHoverVarient"
                    ];
                  }
                }}
              >
                <div className={classNames(projectcss.all, sty.freeBox__zanq)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4GhGh
                    )}
                  >
                    {"Cloud\nInfra &\nOptimisations"}
                  </div>
                  <CloudWiredSvgrepoComSvgIcon
                    className={classNames(projectcss.all, sty.svg__fvR9L)}
                    role={"img"}
                  />
                </div>
                {(
                  hasVariant($state, "hoverVarient", "cloudOpen")
                    ? true
                    : hasVariant($state, "hoverVarient", "productOpen")
                    ? true
                    : false
                ) ? (
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kMlXo, {
                      [sty.freeBoxhoverVarient_cloudOpen__kMlXopwdvm]:
                        hasVariant($state, "hoverVarient", "cloudOpen"),
                      [sty.freeBoxhoverVarient_dataOpen__kMlXoqo5Yc]:
                        hasVariant($state, "hoverVarient", "dataOpen"),
                      [sty.freeBoxhoverVarient_productOpen__kMlXoNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__hMyLw,
                        {
                          [sty.freeBoxhoverVarient_productOpen__hMyLwNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___03Cbz,
                          {
                            [sty.texthoverVarient_productOpen___03CbzNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Cloud Native Application"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__fiPo, {
                          [sty.svghoverVarient_productOpen__fiPoNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__i4BDv,
                        {
                          [sty.freeBoxhoverVarient_productOpen__i4BDvNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qnYx9,
                          {
                            [sty.texthoverVarient_productOpen__qnYx9NtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-kzT08fQBAHgz)" }}
                          >
                            {"Cloud Cost Reduction"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__ybLrB, {
                          [sty.svghoverVarient_productOpen__ybLrBNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__njUvr,
                        {
                          [sty.freeBoxhoverVarient_cloudOpen__njUvrpwdvm]:
                            hasVariant($state, "hoverVarient", "cloudOpen"),
                          [sty.freeBoxhoverVarient_productOpen__njUvrNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wHmmd,
                          {
                            [sty.texthoverVarient_productOpen__wHmmdNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Application\u00a0Containerisation"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__efwrv, {
                          [sty.svghoverVarient_productOpen__efwrvNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__q7Pl, {
                        [sty.freeBoxhoverVarient_cloudOpen__q7Plpwdvm]:
                          hasVariant($state, "hoverVarient", "cloudOpen"),
                        [sty.freeBoxhoverVarient_iotOpen__q7PLtsKsX]:
                          hasVariant($state, "hoverVarient", "iotOpen"),
                        [sty.freeBoxhoverVarient_productOpen__q7PlNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gco1F,
                          {
                            [sty.texthoverVarient_productOpen__gco1FNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Application Dev-Ops"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___9L9Y8, {
                          [sty.svghoverVarient_productOpen___9L9Y8NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__tmbZg,
                        {
                          [sty.freeBoxhoverVarient_cloudOpen__tmbZgpwdvm]:
                            hasVariant($state, "hoverVarient", "cloudOpen"),
                          [sty.freeBoxhoverVarient_productOpen__tmbZgNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6FnNu,
                          {
                            [sty.texthoverVarient_productOpen___6FnNuNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Quality Assurance of your Product"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__hbkPn, {
                          [sty.svghoverVarient_dataOpen__hbkPnQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.svghoverVarient_productOpen__hbkPnNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tkIM, {
                        [sty.freeBoxhoverVarient_cloudOpen__tkIMpwdvm]:
                          hasVariant($state, "hoverVarient", "cloudOpen"),
                        [sty.freeBoxhoverVarient_productOpen__tkIMNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cf3Uz,
                          {
                            [sty.texthoverVarient_productOpen__cf3UzNtFxp]:
                              hasVariant($state, "hoverVarient", "productOpen")
                          }
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "var(--token-EQxz6dfLiREa)" }}
                          >
                            {"Migrate to Micro-Services"}
                          </span>
                        </React.Fragment>
                      </div>
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__esrNh, {
                          [sty.svghoverVarient_dataOpen__esrNhQo5Yc]:
                            hasVariant($state, "hoverVarient", "dataOpen"),
                          [sty.svghoverVarient_productOpen__esrNhNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        })}
                        role={"img"}
                      />
                    </div>
                  </Stack__>
                ) : null}
              </div>
            </Stack__>
            <div
              className={classNames(projectcss.all, sty.freeBox__szSc6, {
                [sty.freeBoxhoverVarient_cloudOpen__szSc6Pwdvm]: hasVariant(
                  $state,
                  "hoverVarient",
                  "cloudOpen"
                ),
                [sty.freeBoxhoverVarient_dataOpen__szSc6Qo5Yc]: hasVariant(
                  $state,
                  "hoverVarient",
                  "dataOpen"
                ),
                [sty.freeBoxhoverVarient_iotOpen__szSc6TsKsX]: hasVariant(
                  $state,
                  "hoverVarient",
                  "iotOpen"
                ),
                [sty.freeBoxhoverVarient_productOpen__szSc6NtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              })}
              onMouseEnter={async event => {
                const $steps = {};

                $steps["updateHoverVarient"] = true
                  ? (() => {
                      const actionArgs = {
                        vgroup: "hoverVarient",
                        operation: 0,
                        value: "iotOpen"
                      };
                      return (({ vgroup, value }) => {
                        if (typeof value === "string") {
                          value = [value];
                        }

                        $stateSet($state, vgroup, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateHoverVarient"] != null &&
                  typeof $steps["updateHoverVarient"] === "object" &&
                  typeof $steps["updateHoverVarient"].then === "function"
                ) {
                  $steps["updateHoverVarient"] = await $steps[
                    "updateHoverVarient"
                  ];
                }
              }}
              onMouseLeave={async event => {
                const $steps = {};

                $steps["updateHoverVarient"] = true
                  ? (() => {
                      const actionArgs = {
                        vgroup: "hoverVarient",
                        operation: 1,
                        value: "productOpen"
                      };
                      return (({ vgroup, value }) => {
                        if (typeof value === "string") {
                          value = [value];
                        }

                        $stateSet($state, vgroup, undefined);
                        return undefined;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateHoverVarient"] != null &&
                  typeof $steps["updateHoverVarient"] === "object" &&
                  typeof $steps["updateHoverVarient"].then === "function"
                ) {
                  $steps["updateHoverVarient"] = await $steps[
                    "updateHoverVarient"
                  ];
                }
              }}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox__ykki5, {
                  [sty.freeBoxhoverVarient_dataOpen__ykki5Qo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__ykki5NtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xoWuT
                  )}
                >
                  {"Intelligent\nAutomations\n& Processes"}
                </div>
                <AutomationSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg__b0SY4)}
                  role={"img"}
                />
              </div>
              {(
                hasVariant($state, "hoverVarient", "iotOpen")
                  ? true
                  : hasVariant($state, "hoverVarient", "productOpen")
                  ? true
                  : false
              ) ? (
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kYHje, {
                    [sty.freeBoxhoverVarient_cloudOpen__kYHjePwdvm]: hasVariant(
                      $state,
                      "hoverVarient",
                      "cloudOpen"
                    ),
                    [sty.freeBoxhoverVarient_dataOpen__kYHjeQo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_iotOpen__kYHjetsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__kYHjeNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___0NFEh, {
                      [sty.freeBoxhoverVarient_iotOpen___0NFEhtsKsX]:
                        hasVariant($state, "hoverVarient", "iotOpen"),
                      [sty.freeBoxhoverVarient_productOpen___0NFEhNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__aZgY8,
                        {
                          [sty.texthoverVarient_productOpen__aZgY8NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Build Application for Smart/IOT Devices"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__zL0Jy, {
                        [sty.svghoverVarient_productOpen__zL0JyNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__bdK4I, {
                      [sty.freeBoxhoverVarient_iotOpen__bdK4ItsKsX]: hasVariant(
                        $state,
                        "hoverVarient",
                        "iotOpen"
                      ),
                      [sty.freeBoxhoverVarient_productOpen__bdK4INtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__sNjTx,
                        {
                          [sty.texthoverVarient_productOpen__sNjTxNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-kzT08fQBAHgz)" }}
                        >
                          {"MQTT Broker/Platform for Device Communication"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__ay8OB, {
                        [sty.svghoverVarient_productOpen__ay8OBNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lHApy, {
                      [sty.freeBoxhoverVarient_iotOpen__lHApytsKsX]: hasVariant(
                        $state,
                        "hoverVarient",
                        "iotOpen"
                      ),
                      [sty.freeBoxhoverVarient_productOpen__lHApyNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tAfOl,
                        {
                          [sty.texthoverVarient_productOpen__tAfOlNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Smart manufacturing"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__syrzh, {
                        [sty.svghoverVarient_productOpen__syrzhNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tx3O5, {
                      [sty.freeBoxhoverVarient_iotOpen__tx3O5TsKsX]: hasVariant(
                        $state,
                        "hoverVarient",
                        "iotOpen"
                      ),
                      [sty.freeBoxhoverVarient_productOpen__tx3O5NtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__uIeDt,
                        {
                          [sty.texthoverVarient_productOpen__uIeDtNtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Industrial IOT"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__xvLwi, {
                        [sty.svghoverVarient_dataOpen__xvLwiqo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen__xvLwiNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lGZqE, {
                      [sty.freeBoxhoverVarient_iotOpen__lGZqEtsKsX]: hasVariant(
                        $state,
                        "hoverVarient",
                        "iotOpen"
                      ),
                      [sty.freeBoxhoverVarient_productOpen__lGZqENtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zb5D1,
                        {
                          [sty.texthoverVarient_productOpen__zb5D1NtFxp]:
                            hasVariant($state, "hoverVarient", "productOpen")
                        }
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-EQxz6dfLiREa)" }}
                        >
                          {"Migrate to Micro-Services"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__o0Jd, {
                        [sty.svghoverVarient_dataOpen__o0Jdqo5Yc]: hasVariant(
                          $state,
                          "hoverVarient",
                          "dataOpen"
                        ),
                        [sty.svghoverVarient_productOpen__o0JdNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      })}
                      role={"img"}
                    />
                  </div>
                </Stack__>
              ) : null}
            </div>
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__edAuj)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__tGmjJ)}>
              <div className={classNames(projectcss.all, sty.freeBox__ydnWp)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y2Bt4
                  )}
                >
                  {"Digital Strategy\nand Design"}
                </div>
                <StrategySvgrepoCom1SvgIcon
                  className={classNames(projectcss.all, sty.svg__h04Zl)}
                  role={"img"}
                />
              </div>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion7",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion7),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__spKxt
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tT3VB
                            )}
                          >
                            {"Digital Product and Platform Design"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pnIhk
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__x2Bpx
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___2WdLe
                            )}
                          >
                            {"Innovation as a service"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gIu5P
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__nuUOp
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qgXvp
                            )}
                          >
                            {"Technology Advisory & Consulting"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__s38Lx
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion7", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion7.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion7"}
                    data-plasmic-override={overrides.accordion7}
                    {...child$Props}
                  />
                );
              })()}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__gwtZa)}>
              <div className={classNames(projectcss.all, sty.freeBox__dm4G)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b5J4
                  )}
                >
                  {"Software Product\nEngineering"}
                </div>
                <EngineerConfigSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg___3RfaQ)}
                  role={"img"}
                />
              </div>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion8",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion8),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___45JR
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pboQa
                            )}
                          >
                            {"Digital Product and Platform Design"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__g92Ah
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__xp53
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hu7Rs
                            )}
                          >
                            {"Innovation as a service"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mdTcM
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__am92D
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oNc2U
                            )}
                          >
                            {"Technology Advisory & Consulting"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__hQ00M
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion8", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion8.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion8"}
                    data-plasmic-override={overrides.accordion8}
                    {...child$Props}
                  />
                );
              })()}
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yqNjq, {
                  [sty.freeBoxhoverVarient_cloudOpen__yqNjqPwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__yqNjqQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_iotOpen__yqNjqtsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__yqNjqNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__t1WzA, {
                    [sty.freeBoxhoverVarient_productOpen__t1WzANtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__k8Hi,
                      {
                        [sty.texthoverVarient_productOpen__k8HiNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Design your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__wsKgJ, {
                      [sty.svghoverVarient_productOpen__wsKgJNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__xkaWe, {
                    [sty.freeBoxhoverVarient_productOpen__xkaWeNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tsauY,
                      {
                        [sty.texthoverVarient_productOpen__tsauYNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-kzT08fQBAHgz)" }}
                      >
                        {"Build Web or Mobile Application"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__knZ1, {
                      [sty.svghoverVarient_productOpen__knZ1NtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__rlBNm, {
                    [sty.freeBoxhoverVarient_productOpen__rlBNmNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ba2SD,
                      {
                        [sty.texthoverVarient_productOpen__ba2SDNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Scale or Maintain your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__tfsTq, {
                      [sty.svghoverVarient_productOpen__tfsTqNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__fvpfJ, {
                    [sty.freeBoxhoverVarient_productOpen__fvpfJNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v1Ihz,
                      {
                        [sty.texthoverVarient_productOpen__v1IhzNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Quality Assurance of your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__xdpN8, {
                      [sty.svghoverVarient_dataOpen__xdpN8Qo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__xdpN8NtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__qxTlD, {
                    [sty.freeBoxhoverVarient_productOpen__qxTlDNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uwYlQ,
                      {
                        [sty.texthoverVarient_productOpen__uwYlQNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Migrate to Micro-Services"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___9Ou5V, {
                      [sty.svghoverVarient_dataOpen___9Ou5Vqo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen___9Ou5VNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                    role={"img"}
                  />
                </div>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__pJhgS)}>
              <div className={classNames(projectcss.all, sty.freeBox__c2GWf)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pgUdd
                  )}
                >
                  {"Data Science\nand Engineering"}
                </div>
                <ChartScatter3DSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg__fR2Iv)}
                  role={"img"}
                />
              </div>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion9",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion9),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__l7ZmC
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wtVfx
                            )}
                          >
                            {"Digital Product and Platform Design"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__m66I
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__wiAw8
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tl4Rz
                            )}
                          >
                            {"Innovation as a service"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jj637
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__cKUca
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mTPh
                            )}
                          >
                            {"Technology Advisory & Consulting"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xteW7
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion9", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion9.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion9"}
                    data-plasmic-override={overrides.accordion9}
                    {...child$Props}
                  />
                );
              })()}
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___89OTk, {
                  [sty.freeBoxhoverVarient_dataOpen___89OTkQo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen___89OTkNtFxp]:
                    hasVariant($state, "hoverVarient", "productOpen")
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__jmHza, {
                    [sty.freeBoxhoverVarient_dataOpen__jmHzaQo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__jmHzaNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h9Wcn,
                      {
                        [sty.texthoverVarient_productOpen__h9WcnNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Data extraction, cleaning & ingestion"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___8FakZ, {
                      [sty.svghoverVarient_productOpen___8FakZNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__kn6OB, {
                    [sty.freeBoxhoverVarient_dataOpen__kn6OBqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__kn6OBNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ewkx6,
                      {
                        [sty.texthoverVarient_productOpen__ewkx6NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-kzT08fQBAHgz)" }}
                      >
                        {"Data Pipelines and Automations"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__fTbza, {
                      [sty.svghoverVarient_productOpen__fTbzaNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__sjUn6, {
                    [sty.freeBoxhoverVarient_dataOpen__sjUn6Qo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__sjUn6NtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kaj4F,
                      {
                        [sty.texthoverVarient_productOpen__kaj4FNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Contextualizing, training & fine tuning ML models"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__bsSdk, {
                      [sty.svghoverVarient_productOpen__bsSdkNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__fei1K, {
                    [sty.freeBoxhoverVarient_dataOpen__fei1Kqo5Yc]: hasVariant(
                      $state,
                      "hoverVarient",
                      "dataOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__fei1KNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uB59B,
                      {
                        [sty.texthoverVarient_productOpen__uB59BNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Deploying and maintaining ML models"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___5ZViP, {
                      [sty.svghoverVarient_productOpen___5ZViPNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                    role={"img"}
                  />
                </div>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__ubhOb)}>
              <div className={classNames(projectcss.all, sty.freeBox__uwGgl)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7A3W8
                  )}
                >
                  {"Cloud\nInfra and\nOptimisations"}
                </div>
                <CloudWiredSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg__aD9Uf)}
                  role={"img"}
                />
              </div>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion10",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion10),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__pgFAd
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pvMnn
                            )}
                          >
                            {"Digital Product and Platform Design"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iaIaA
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___8Wge2
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aylm6
                            )}
                          >
                            {"Innovation as a service"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dKdzc
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___8GxY
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__ru9Z3
                            )}
                          >
                            {"Technology Advisory & Consulting"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2Eenj
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion10", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion10.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion10"}
                    data-plasmic-override={overrides.accordion10}
                    {...child$Props}
                  />
                );
              })()}
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mgwxv, {
                  [sty.freeBoxhoverVarient_cloudOpen__mgwxvpwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen__mgwxvqo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen__mgwxvNtFxp]: hasVariant(
                    $state,
                    "hoverVarient",
                    "productOpen"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__ogWCt, {
                    [sty.freeBoxhoverVarient_productOpen__ogWCtNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vUIe3,
                      {
                        [sty.texthoverVarient_productOpen__vUIe3NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Cloud Native Application"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__opJip, {
                      [sty.svghoverVarient_productOpen__opJipNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__wkfUq, {
                    [sty.freeBoxhoverVarient_productOpen__wkfUqNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yTok,
                      {
                        [sty.texthoverVarient_productOpen__yTokNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-kzT08fQBAHgz)" }}
                      >
                        {"Cloud Cost Reduction"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__g0Rsk, {
                      [sty.svghoverVarient_productOpen__g0RskNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__xsvWm, {
                    [sty.freeBoxhoverVarient_cloudOpen__xsvWmPwdvm]: hasVariant(
                      $state,
                      "hoverVarient",
                      "cloudOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__xsvWmNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6B16K,
                      {
                        [sty.texthoverVarient_productOpen___6B16KNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Application\u00a0Containerisation"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___1K3Mq, {
                      [sty.svghoverVarient_productOpen___1K3MqNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__r2PN, {
                    [sty.freeBoxhoverVarient_cloudOpen__r2PNPwdvm]: hasVariant(
                      $state,
                      "hoverVarient",
                      "cloudOpen"
                    ),
                    [sty.freeBoxhoverVarient_iotOpen__r2PNTsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__r2PNNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bZnq1,
                      {
                        [sty.texthoverVarient_productOpen__bZnq1NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Application Dev-Ops"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg___78HpX, {
                      [sty.svghoverVarient_productOpen___78HpXNtFxp]:
                        hasVariant($state, "hoverVarient", "productOpen")
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__fCdnS, {
                    [sty.freeBoxhoverVarient_cloudOpen__fCdnSpwdvm]: hasVariant(
                      $state,
                      "hoverVarient",
                      "cloudOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__fCdnSNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vfb7F,
                      {
                        [sty.texthoverVarient_productOpen__vfb7FNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Quality Assurance of your Product"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__tJz57, {
                      [sty.svghoverVarient_dataOpen__tJz57Qo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__tJz57NtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__xxmPf, {
                    [sty.freeBoxhoverVarient_cloudOpen__xxmPfPwdvm]: hasVariant(
                      $state,
                      "hoverVarient",
                      "cloudOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__xxmPfNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bmFt7,
                      {
                        [sty.texthoverVarient_productOpen__bmFt7NtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Migrate to Micro-Services"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__v8UhM, {
                      [sty.svghoverVarient_dataOpen__v8UhMqo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__v8UhMNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__gex5U)}>
              <div className={classNames(projectcss.all, sty.freeBox__oYr7E)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eMr5C
                  )}
                >
                  {"Intelligent\nAutomations\nand Processes"}
                </div>
                <AutomationSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg__niB3)}
                  role={"img"}
                />
              </div>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion11",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion11),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__eAxgC
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__swlOe
                            )}
                          >
                            {"Digital Product and Platform Design"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ltdxa
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem___4TZe8
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pVdmW
                            )}
                          >
                            {"Innovation as a service"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8K7Lu
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__zVuyh
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vezCn
                            )}
                          >
                            {"Technology Advisory & Consulting"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oyTpg
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion11", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion11.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion11"}
                    data-plasmic-override={overrides.accordion11}
                    {...child$Props}
                  />
                );
              })()}
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___04E70, {
                  [sty.freeBoxhoverVarient_cloudOpen___04E70Pwdvm]: hasVariant(
                    $state,
                    "hoverVarient",
                    "cloudOpen"
                  ),
                  [sty.freeBoxhoverVarient_dataOpen___04E70Qo5Yc]: hasVariant(
                    $state,
                    "hoverVarient",
                    "dataOpen"
                  ),
                  [sty.freeBoxhoverVarient_iotOpen___04E70TsKsX]: hasVariant(
                    $state,
                    "hoverVarient",
                    "iotOpen"
                  ),
                  [sty.freeBoxhoverVarient_productOpen___04E70NtFxp]:
                    hasVariant($state, "hoverVarient", "productOpen")
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__hl2EF, {
                    [sty.freeBoxhoverVarient_iotOpen__hl2EFtsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__hl2EFNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__biX4D,
                      {
                        [sty.texthoverVarient_productOpen__biX4DNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Build Application for Smart/IOT Devices"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__jlMuN, {
                      [sty.svghoverVarient_productOpen__jlMuNNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__bOOoO, {
                    [sty.freeBoxhoverVarient_iotOpen__bOOoOtsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__bOOoONtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wyCzG,
                      {
                        [sty.texthoverVarient_productOpen__wyCzGNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-kzT08fQBAHgz)" }}
                      >
                        {"MQTT Broker/Platform for Device Communication"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__hB3Cf, {
                      [sty.svghoverVarient_productOpen__hB3CfNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__fC0N, {
                    [sty.freeBoxhoverVarient_iotOpen__fC0NtsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__fC0NNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__pWhW,
                      {
                        [sty.texthoverVarient_productOpen__pWhWNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Smart manufacturing"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__devcO, {
                      [sty.svghoverVarient_productOpen__devcONtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ui0JC, {
                    [sty.freeBoxhoverVarient_productOpen__ui0JCNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zyJsG,
                      {
                        [sty.texthoverVarient_productOpen__zyJsGNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Industrial IOT"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__xzA, {
                      [sty.svghoverVarient_dataOpen__xzAQo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__xzANtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__i721H, {
                    [sty.freeBoxhoverVarient_iotOpen__i721HtsKsX]: hasVariant(
                      $state,
                      "hoverVarient",
                      "iotOpen"
                    ),
                    [sty.freeBoxhoverVarient_productOpen__i721HNtFxp]:
                      hasVariant($state, "hoverVarient", "productOpen")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vc2UT,
                      {
                        [sty.texthoverVarient_productOpen__vc2UTNtFxp]:
                          hasVariant($state, "hoverVarient", "productOpen")
                      }
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "var(--token-EQxz6dfLiREa)" }}
                      >
                        {"Migrate to Micro-Services"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__cjvCn, {
                      [sty.svghoverVarient_dataOpen__cjvCnQo5Yc]: hasVariant(
                        $state,
                        "hoverVarient",
                        "dataOpen"
                      ),
                      [sty.svghoverVarient_productOpen__cjvCnNtFxp]: hasVariant(
                        $state,
                        "hoverVarient",
                        "productOpen"
                      )
                    })}
                    role={"img"}
                  />
                </div>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___94D7)}>
              <div className={classNames(projectcss.all, sty.freeBox__bvCh2)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sOuOo
                  )}
                >
                  {"Application Development Management"}
                </div>
                <GuiManagementSvgrepoComSvgIcon
                  className={classNames(projectcss.all, sty.svg__suRjc)}
                  role={"img"}
                />
              </div>
              {(() => {
                const child$Props = {
                  activeKey: generateStateValueProp($state, [
                    "accordion12",
                    "activePanelId"
                  ]),
                  bordered: true,
                  className: classNames("__wab_instance", sty.accordion12),
                  items: (
                    <React.Fragment>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__wBql0
                        )}
                        id={1}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__i1YHg
                            )}
                          >
                            {"Digital Product and Platform Design"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tLkX
                          )}
                        >
                          {"First Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__vKfJl
                        )}
                        id={2}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pPiv6
                            )}
                          >
                            {"Innovation as a service"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gXukG
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                      <AntdAccordionItem
                        className={classNames(
                          "__wab_instance",
                          sty.accordionItem__skZty
                        )}
                        id={"3"}
                        label2={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lAeAs
                            )}
                          >
                            {"Technology Advisory & Consulting"}
                          </div>
                        }
                        showArrow={true}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kOd6W
                          )}
                        >
                          {"Second Children"}
                        </div>
                      </AntdAccordionItem>
                    </React.Fragment>
                  ),
                  onChange: generateStateOnChangePropForCodeComponents(
                    $state,
                    "activePanelId",
                    ["accordion12", "activePanelId"],
                    AntdAccordion_Helpers
                  )
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "activePanelId",
                      plasmicStateName: "accordion12.activePanelId"
                    }
                  ],
                  [],
                  AntdAccordion_Helpers ?? {},
                  child$Props
                );

                return (
                  <AntdAccordion
                    data-plasmic-name={"accordion12"}
                    data-plasmic-override={overrides.accordion12}
                    {...child$Props}
                  />
                );
              })()}
            </div>
          </Stack__>
        </section>
        <section
          className={classNames(projectcss.all, sty.section__g4CPs, {
            [sty.sectionhoverVarient_iotOpen__g4CPStsKsX]: hasVariant(
              $state,
              "hoverVarient",
              "iotOpen"
            ),
            [sty.sectionhoverVarient_productOpen__g4CPsNtFxp]: hasVariant(
              $state,
              "hoverVarient",
              "productOpen"
            )
          })}
        >
          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1__tu3X,
              {
                [sty.h1hoverVarient_productOpen__tu3XNtFxp]: hasVariant(
                  $state,
                  "hoverVarient",
                  "productOpen"
                )
              }
            )}
          >
            {"Why Partner with us"}
          </h1>
          <div className={classNames(projectcss.all, sty.columns__oD5D5)}>
            <div className={classNames(projectcss.all, sty.column__vUhGm)}>
              <Video
                autoPlay={true}
                className={classNames("__wab_instance", sty.htmlVideo___1CRyd)}
                controls={true}
                loop={true}
                muted={true}
                playsInline={true}
                src={
                  "https://firebasestorage.googleapis.com/v0/b/vidyayatan-d398a.appspot.com/o/Problem-solving%20mindset%20to%20help%20enterprises%20grow%20technically%20by%20moving%20their%20digital%20presence%20to%20the%20cloud.%20(3).mp4?alt=media&token=a105bd5a-31ed-401d-86e6-22c5d34718dc"
                }
              />
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.column__jPp8X)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__x27P)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__lOm0U)}
                  displayHeight={"50px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/bharatpeNewLogoPng.png",
                    fullWidth: 2712,
                    fullHeight: 828,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wZpPl)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__segXe
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Bharatpe - Managing Swipe Payment Transactions"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__j6X6)}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__iNzcy)}
                        role={"img"}
                      />
                    }
                    link={`/bharatpe-swipe`}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__rpX7I)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <Icon9Icon
                      className={classNames(projectcss.all, sty.svg__bOVos)}
                      role={"img"}
                    />
                  </Button2>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___7J0HQ)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__zs9Ur)}
                  displayHeight={"50px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/bharatpeNewLogoPng.png",
                    fullWidth: 2712,
                    fullHeight: 828,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___0E2Qd)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t3JWo
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#000000" }}
                      >
                        {"Bharatpe - Managing Swipe Payment Transactions"}
                      </span>
                    </React.Fragment>
                  </div>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___6Cc8I
                    )}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__uIqu0)}
                        role={"img"}
                      />
                    }
                    link={`/bharatpe-swipe`}
                    startIcon={
                      <CheckSvgIcon
                        className={classNames(projectcss.all, sty.svg__pilUk)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <Icon9Icon
                      className={classNames(projectcss.all, sty.svg___0QMm)}
                      role={"img"}
                    />
                  </Button2>
                </Stack__>
              </div>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__o5Jy8)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__lqEtr)}
                    displayHeight={"50px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/vidyayatan_landing_page/images/bharatpeNewLogoPng.png",
                      fullWidth: 2712,
                      fullHeight: 828,
                      aspectRatio: undefined
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ctpMo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3FhjM
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"Bharatpe - Managing Swipe Payment Transactions"}
                        </span>
                      </React.Fragment>
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__rtwdL
                      )}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__wav4H)}
                          role={"img"}
                        />
                      }
                      link={`/bharatpe-swipe`}
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__km7Y9)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yFz14
                        )}
                      >
                        {"Read More"}
                      </div>
                    </Button2>
                  </Stack__>
                </div>
              ) : null}
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__d8ZXy)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__zwRuz)}
                    displayHeight={"50px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/vidyayatan_landing_page/images/bharatpeNewLogoPng.png",
                      fullWidth: 2712,
                      fullHeight: 828,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox___358Y)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ewbn1
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"Bharatpe - Managing Swipe Payment"}
                          </span>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ color: "#000000" }}
                          >
                            {"Bharatpe - Managing Swipe Payment Transactions"}
                          </span>
                        </React.Fragment>
                      )}
                    </div>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__hBjwi
                      )}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__mI0DF)}
                          role={"img"}
                        />
                      }
                      link={`/bharatpe-swipe`}
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__sd9Z6)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0CnVo
                        )}
                      >
                        {"Read More"}
                      </div>
                    </Button2>
                  </div>
                </div>
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xmDi5
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <blockquote
                      data-plasmic-name={"blockquote"}
                      data-plasmic-override={overrides.blockquote}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.blockquote
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "Our vision is to build the next big things in technology that empower enterprises and industries to transform and excel in the digital era of industry 4.0\n"
                          }
                        </React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__o2CZm
                            )}
                          >
                            {
                              "With our services and products in Big Data, IoT, Cloud and AI/ML"
                            }
                          </span>
                        }
                        <React.Fragment>{"\n"}</React.Fragment>
                        {
                          <span
                            className={classNames(
                              projectcss.all,
                              projectcss.span,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.span__wa5V
                            )}
                          >
                            {
                              "We strive to be the universal tech partner for Smart Industries, Manufacturing, EVs, Smart Homes and beyond"
                            }
                          </span>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </blockquote>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
              <Button2
                className={classNames("__wab_instance", sty.button2__cM5Y0)}
                color={"clear"}
                endIcon={
                  <Icon38Icon
                    className={classNames(projectcss.all, sty.svg__gIqpq)}
                    role={"img"}
                  />
                }
                link={`/case-studies`}
                showEndIcon={true}
                startIcon={
                  <CheckSvgIcon
                    className={classNames(projectcss.all, sty.svg__bATr0)}
                    role={"img"}
                  />
                }
                submitsForm={false}
                target={true}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__pkLn
                  )}
                >
                  {"Read the Case Studies"}
                </div>
              </Button2>
            </Stack__>
          </div>
        </section>
        <section
          className={classNames(projectcss.all, sty.section___7Aebw, {
            [sty.sectionhoverVarient_productOpen___7AebwNtFxp]: hasVariant(
              $state,
              "hoverVarient",
              "productOpen"
            )
          })}
        >
          <h1
            className={classNames(
              projectcss.all,
              projectcss.h1,
              projectcss.__wab_text,
              sty.h1___13Euv
            )}
          >
            {"Our industry expertise and solutions"}
          </h1>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__jx5Nm
            )}
          >
            {
              "Creating business value at the intersection of your industry transformation and today\u2019s latest technology innovation"
            }
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__bFGzt)}
          >
            <div className={classNames(projectcss.all, sty.column__ibvRc)}>
              <div className={classNames(projectcss.all, sty.freeBox__atH6T)}>
                <div className={classNames(projectcss.all, sty.freeBox__iwO3)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mspf
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FFFFFF" }}
                      >
                        {"Banking"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FFFFFF" }}
                      >
                        {"& Financial Services"}
                      </span>
                    </React.Fragment>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jkhfM)}
                    displayHeight={"300px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/vidyayatan_landing_page/images/_1Png3.png",
                      fullWidth: 800,
                      fullHeight: 615,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.column__oK1X)}>
              <div className={classNames(projectcss.all, sty.freeBox__cX4Nn)}>
                <div className={classNames(projectcss.all, sty.freeBox__orFx)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5Ph61
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FFFFFF" }}
                      >
                        {"Industrial"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FFFFFF" }}
                      >
                        {"Automation"}
                      </span>
                    </React.Fragment>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qrg3T)}
                    displayHeight={"300px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/vidyayatan_landing_page/images/_3Png3.png",
                      fullWidth: 800,
                      fullHeight: 615,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.columns__fspG)}
          >
            <div className={classNames(projectcss.all, sty.column___9D9Wx)}>
              <div className={classNames(projectcss.all, sty.freeBox__fbMlb)}>
                <div className={classNames(projectcss.all, sty.freeBox__tVqt3)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tXCoJ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uv6He)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__r4XJu
                        )}
                      >
                        {"SaaS / CRM\nDevelopment"}
                      </div>
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__qM5T0)}
                        displayHeight={"300px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vidyayatan_landing_page/images/_6Png3.png",
                          fullWidth: 800,
                          fullHeight: 615,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.column__oqSIq)}
              onClick={async event => {
                const $steps = {};

                $steps["goToAgritech2"] = true
                  ? (() => {
                      const actionArgs = { destination: `/agritech` };
                      return (({ destination }) => {
                        if (
                          typeof destination === "string" &&
                          destination.startsWith("#")
                        ) {
                          document
                            .getElementById(destination.substr(1))
                            .scrollIntoView({ behavior: "smooth" });
                        } else {
                          __nextRouter?.push(destination);
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["goToAgritech2"] != null &&
                  typeof $steps["goToAgritech2"] === "object" &&
                  typeof $steps["goToAgritech2"].then === "function"
                ) {
                  $steps["goToAgritech2"] = await $steps["goToAgritech2"];
                }
              }}
            >
              <div className={classNames(projectcss.all, sty.freeBox__ganxZ)}>
                <div className={classNames(projectcss.all, sty.freeBox___4C17)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xqpWn
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#FFFFFF" }}
                      >
                        {"Agritech"}
                      </span>
                    </React.Fragment>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__tVzhM)}
                    displayHeight={"300px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/vidyayatan_landing_page/images/screenshot20240611At13512PmPng.png",
                      fullWidth: 998,
                      fullHeight: 490,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </div>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__weUuu)}>
            <div className={classNames(projectcss.all, sty.freeBox__fmSw2)}>
              <div className={classNames(projectcss.all, sty.freeBox__yJhmr)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dx8ZW
                  )}
                >
                  {"Banking\n& Financial \nServices"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__mefsA)}
                  displayHeight={"200px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/_1Png3.png",
                    fullWidth: 800,
                    fullHeight: 615,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__jmDK)}>
              <div className={classNames(projectcss.all, sty.freeBox__vtksv)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__eovWn
                  )}
                >
                  {"Healthcare\n& Fitness"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__gjCb0)}
                  displayHeight={"200px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/_2Png3.png",
                    fullWidth: 800,
                    fullHeight: 615,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__ihANh)}>
              <div className={classNames(projectcss.all, sty.freeBox___1LQD)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f4G6N
                  )}
                >
                  {"Industrial\nAutomation"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__qyNsi)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/_3Png3.png",
                    fullWidth: 800,
                    fullHeight: 615,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___7NcJn)}>
              <div className={classNames(projectcss.all, sty.freeBox__kfGCk)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___75Akb
                  )}
                >
                  {"Consumer\nTechnology"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__bMuS)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/vidyayatan_landing_page/images/_4Png3.png",
                    fullWidth: 800,
                    fullHeight: 615,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__aoPay)}>
              <div className={classNames(projectcss.all, sty.freeBox__wMh64)}>
                <div className={classNames(projectcss.all, sty.freeBox__tMmaV)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sWuvi)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pOu4P)}
                    >
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__kkUd9)}
                        displayHeight={"200px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/vidyayatan_landing_page/images/_5Png3.png",
                          fullWidth: 800,
                          fullHeight: 615,
                          aspectRatio: undefined
                        }}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pwaSs
                        )}
                      >
                        {"Education"}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__sh6Du)}>
              <div className={classNames(projectcss.all, sty.freeBox__fMcQw)}>
                <div className={classNames(projectcss.all, sty.freeBox___1TuZ)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zQrlN)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__w3Oiy
                      )}
                    >
                      {"Hi-Tech\nSoftware"}
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__aLzcR)}
                      displayHeight={"200px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/vidyayatan_landing_page/images/_6Png3.png",
                        fullWidth: 800,
                        fullHeight: 615,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__j2SiC)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__t3FHx)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__tCmVf)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ja1Wg
                  )}
                >
                  {
                    "Connect with us to find out which service works best for you"
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__urNiZ)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__iteuj)}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__l4D9K)}
                      role={"img"}
                    />
                  }
                  startIcon={
                    <CheckSvgIcon
                      className={classNames(projectcss.all, sty.svg___8POyG)}
                      role={"img"}
                    />
                  }
                  submitsForm={false}
                >
                  <Embed
                    className={classNames(
                      "__wab_instance",
                      sty.embedHtml__ktC5T
                    )}
                    code={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? '<!-- Calendly link widget begin -->\n<link href="https://assets.calendly.com/assets/external/widget.css" rel="stylesheet">\n<script src="https://assets.calendly.com/assets/external/widget.js" type="text/javascript" async></script>\n<a href=""  style="color:white;text-decoration:none"  onclick="Calendly.initPopupWidget({url: \'https://calendly.com/shreyashjain1996/connect-with-vidyayatan?hide_event_type_details=1&hide_gdpr_banner=1\'});return false;">Book Free Consultation</a>\n<!-- Calendly link widget end -->'
                        : '<!-- Calendly link widget begin -->\n<link href="https://assets.calendly.com/assets/external/widget.css" rel="stylesheet">\n<script src="https://assets.calendly.com/assets/external/widget.js" type="text/javascript" async></script>\n<a href=""  style="color:white;text-decoration:none"  onclick="Calendly.initPopupWidget({url: \'https://calendly.com/shreyashjain1996/connect-with-vidyayatan?hide_event_type_details=1&hide_gdpr_banner=1\'});return false;">Book Free Consultation</a>\n<!-- Calendly link widget end -->\n'
                    }
                  />
                </Button2>
                <Button2
                  className={classNames("__wab_instance", sty.button2___532Hx)}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__oFVgC)}
                      role={"img"}
                    />
                  }
                  link={"https://wa.me/919425677707"}
                  startIcon={
                    <CheckSvgIcon
                      className={classNames(projectcss.all, sty.svg___3GiI)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                  target={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sj6Jx
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Message\non Whatsapp"
                      : "Message on Whatsapp"}
                  </div>
                </Button2>
              </Stack__>
            </Stack__>
          </Stack__>
        </section>
      </Reveal>
      <VidFooter
        data-plasmic-name={"vidFooter"}
        data-plasmic-override={overrides.vidFooter}
        className={classNames("__wab_instance", sty.vidFooter)}
      />

      <BottomHeader
        data-plasmic-name={"bottomHeader"}
        data-plasmic-override={overrides.bottomHeader}
        className={classNames("__wab_instance", sty.bottomHeader, {
          [sty.bottomHeaderhoverVarient_iotOpen]: hasVariant(
            $state,
            "hoverVarient",
            "iotOpen"
          )
        })}
      />

      <TopHeader
        data-plasmic-name={"topHeader"}
        data-plasmic-override={overrides.topHeader}
        className={classNames("__wab_instance", sty.topHeader, {
          [sty.topHeaderhoverVarient_iotOpen]: hasVariant(
            $state,
            "hoverVarient",
            "iotOpen"
          )
        })}
      />
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  openMenu1: [
    "openMenu1",
    "copy",
    "bharatpeLogo2",
    "sliderCarousel",
    "bharatpeLogo",
    "foreground",
    "casesTestimonials",
    "imgHeadText",
    "_4",
    "_5",
    "reveal",
    "sliderCarousel2",
    "rangeSlider",
    "sliderMark",
    "accordion7",
    "accordion8",
    "accordion9",
    "accordion10",
    "accordion11",
    "accordion12",
    "blockquote",
    "vidFooter",
    "bottomHeader",
    "topHeader"
  ],
  copy: ["copy"],
  bharatpeLogo2: ["bharatpeLogo2"],
  sliderCarousel: ["sliderCarousel", "bharatpeLogo"],
  bharatpeLogo: ["bharatpeLogo"],
  foreground: ["foreground"],
  casesTestimonials: ["casesTestimonials"],
  imgHeadText: ["imgHeadText"],
  _4: ["_4"],
  _5: ["_5"],
  reveal: [
    "reveal",
    "sliderCarousel2",
    "rangeSlider",
    "sliderMark",
    "accordion7",
    "accordion8",
    "accordion9",
    "accordion10",
    "accordion11",
    "accordion12",
    "blockquote"
  ],
  sliderCarousel2: ["sliderCarousel2"],
  rangeSlider: ["rangeSlider", "sliderMark"],
  sliderMark: ["sliderMark"],
  accordion7: ["accordion7"],
  accordion8: ["accordion8"],
  accordion9: ["accordion9"],
  accordion10: ["accordion10"],
  accordion11: ["accordion11"],
  accordion12: ["accordion12"],
  blockquote: ["blockquote"],
  vidFooter: ["vidFooter"],
  bottomHeader: ["bottomHeader"],
  topHeader: ["topHeader"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  openMenu1: "div";
  copy: "div";
  bharatpeLogo2: typeof PlasmicImg__;
  sliderCarousel: typeof SliderWrapper;
  bharatpeLogo: typeof PlasmicImg__;
  foreground: "div";
  casesTestimonials: typeof CasesTestimonials;
  imgHeadText: typeof ImgHeadText;
  _4: typeof ImgHeadText;
  _5: typeof ImgHeadText;
  reveal: typeof Reveal;
  sliderCarousel2: typeof SliderWrapper;
  rangeSlider: typeof AntdRangeSlider;
  sliderMark: typeof AntdSliderMark;
  accordion7: typeof AntdAccordion;
  accordion8: typeof AntdAccordion;
  accordion9: typeof AntdAccordion;
  accordion10: typeof AntdAccordion;
  accordion11: typeof AntdAccordion;
  accordion12: typeof AntdAccordion;
  blockquote: "blockquote";
  vidFooter: typeof VidFooter;
  bottomHeader: typeof BottomHeader;
  topHeader: typeof TopHeader;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPage__VariantsArgs;
    args?: PlasmicLandingPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicLandingPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLandingPage__ArgProps,
          internalVariantPropNames: PlasmicLandingPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLandingPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "openMenu1") {
    func.displayName = "PlasmicLandingPage";
  } else {
    func.displayName = `PlasmicLandingPage.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPage = Object.assign(
  // Top-level PlasmicLandingPage renders the root element
  makeNodeComponent("openMenu1"),
  {
    // Helper components rendering sub-elements
    copy: makeNodeComponent("copy"),
    bharatpeLogo2: makeNodeComponent("bharatpeLogo2"),
    sliderCarousel: makeNodeComponent("sliderCarousel"),
    bharatpeLogo: makeNodeComponent("bharatpeLogo"),
    foreground: makeNodeComponent("foreground"),
    casesTestimonials: makeNodeComponent("casesTestimonials"),
    imgHeadText: makeNodeComponent("imgHeadText"),
    _4: makeNodeComponent("_4"),
    _5: makeNodeComponent("_5"),
    reveal: makeNodeComponent("reveal"),
    sliderCarousel2: makeNodeComponent("sliderCarousel2"),
    rangeSlider: makeNodeComponent("rangeSlider"),
    sliderMark: makeNodeComponent("sliderMark"),
    accordion7: makeNodeComponent("accordion7"),
    accordion8: makeNodeComponent("accordion8"),
    accordion9: makeNodeComponent("accordion9"),
    accordion10: makeNodeComponent("accordion10"),
    accordion11: makeNodeComponent("accordion11"),
    accordion12: makeNodeComponent("accordion12"),
    blockquote: makeNodeComponent("blockquote"),
    vidFooter: makeNodeComponent("vidFooter"),
    bottomHeader: makeNodeComponent("bottomHeader"),
    topHeader: makeNodeComponent("topHeader"),

    // Metadata about props expected for PlasmicLandingPage
    internalVariantProps: PlasmicLandingPage__VariantProps,
    internalArgProps: PlasmicLandingPage__ArgProps
  }
);

export default PlasmicLandingPage;
/* prettier-ignore-end */

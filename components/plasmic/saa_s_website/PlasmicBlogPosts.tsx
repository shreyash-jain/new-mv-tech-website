// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ybfbkvuYhwx2f8pSa8cKG
// Component: 5q1YFxc66Iag

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: 9e8xgDKJCPAu/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: ybfbkvuYhwx2f8pSa8cKG/projectcss
import sty from "./PlasmicBlogPosts.module.css"; // plasmic-import: 5q1YFxc66Iag/css

import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: ktbiZvUx3w6v/icon
import ArrowRightSvgIcon from "./icons/PlasmicIcon__ArrowRightSvg"; // plasmic-import: rd42hJt_-BEe/icon

createPlasmicElementProxy;

export type PlasmicBlogPosts__VariantMembers = {};
export type PlasmicBlogPosts__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlogPosts__VariantsArgs;
export const PlasmicBlogPosts__VariantProps = new Array<VariantPropType>();

export type PlasmicBlogPosts__ArgsType = {};
type ArgPropType = keyof PlasmicBlogPosts__ArgsType;
export const PlasmicBlogPosts__ArgProps = new Array<ArgPropType>();

export type PlasmicBlogPosts__OverridesType = {
  root?: Flex__<"section">;
  h2?: Flex__<"h2">;
};

export interface DefaultBlogPostsProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBlogPosts__RenderFunc(props: {
  variants: PlasmicBlogPosts__VariantsArgs;
  args: PlasmicBlogPosts__ArgsType;
  overrides: PlasmicBlogPosts__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.column__rigFk)}>
        <h2
          data-plasmic-name={"h2"}
          data-plasmic-override={overrides.h2}
          className={classNames(
            projectcss.all,
            projectcss.h2,
            projectcss.__wab_text,
            sty.h2
          )}
        >
          {"Blog"}
        </h2>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__xzd6D
          )}
        >
          {
            "Lorem Ipsum is simply dummy text of the printing and typesetting industry. \nLorem Ipsum has been the industry's standard dummy text ever since the 1500s"
          }
        </div>
        <div className={classNames(projectcss.all, sty.columns__jsjGb)}>
          <div className={classNames(projectcss.all, sty.column__hOhFc)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__sfj9Q)}
              displayHeight={"230px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/saa_s_website/images/fakurianDesignPPTwRTkvXqUnsplashJpg.jpg",
                fullWidth: 1920,
                fullHeight: 1280,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__fpVfp)}>
              <div className={classNames(projectcss.all, sty.column__foPlq)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dotfc
                  )}
                >
                  {"January 03, 2021"}
                </div>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__ft3Sf
                  )}
                >
                  {"Convincing reasons you need to learn"}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fSuwk
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. ....\n"
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button___9QVji)}
                  color={"softBlue"}
                  endIcon={
                    <ArrowRightSvgIcon
                      className={classNames(projectcss.all, sty.svg__sd24Y)}
                      role={"img"}
                    />
                  }
                  shape={"rounded"}
                  showEndIcon={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ekrfA
                    )}
                  >
                    {"READ MORE"}
                  </div>
                </Button>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__aTyh)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___7Ghmv)}
              displayHeight={"230px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/saa_s_website/images/fakurianDesignLfbhDph3QYUnsplashJpg.jpg",
                fullWidth: 1920,
                fullHeight: 1080,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__ioY3E)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.column___1KsX3)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bn0R5
                  )}
                >
                  {"January 03, 2021"}
                </div>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__e9K42
                  )}
                >
                  {"The five devices you need to work anytime"}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__uA3Xs
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. ....\n"
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__hThcp)}
                  color={"softBlue"}
                  endIcon={
                    <ArrowRightSvgIcon
                      className={classNames(projectcss.all, sty.svg__nqKn5)}
                      role={"img"}
                    />
                  }
                  shape={"rounded"}
                  showEndIcon={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kYS8
                    )}
                  >
                    {"READ MORE"}
                  </div>
                </Button>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.column__ulVw4)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__vlcx)}
              displayHeight={"230px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"100%"}
              loading={"lazy"}
              src={{
                src: "/plasmic/saa_s_website/images/blog2390X290Jpg.jpg",
                fullWidth: 390,
                fullHeight: 290,
                aspectRatio: undefined
              }}
            />

            <div className={classNames(projectcss.all, sty.columns__va63K)}>
              <div className={classNames(projectcss.all, sty.column__j8Ece)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6HfHo
                  )}
                >
                  {"January 03, 2021"}
                </div>
                <h4
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4__r1Y3Q
                  )}
                >
                  {"Tiktok Illegally collecting data sharing"}
                </h4>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lYsc5
                  )}
                >
                  {
                    "Lorem Ipsum is simply dummy text of the printing and typesetting industry. ....\n"
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__aExHw)}
                  color={"softBlue"}
                  endIcon={
                    <ArrowRightSvgIcon
                      className={classNames(projectcss.all, sty.svg__qHcTo)}
                      role={"img"}
                    />
                  }
                  shape={"rounded"}
                  showEndIcon={true}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__adJiF
                    )}
                  >
                    {"READ MORE"}
                  </div>
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h2"],
  h2: ["h2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "section";
  h2: "h2";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlogPosts__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlogPosts__VariantsArgs;
    args?: PlasmicBlogPosts__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlogPosts__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicBlogPosts__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBlogPosts__ArgProps,
          internalVariantPropNames: PlasmicBlogPosts__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBlogPosts__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlogPosts";
  } else {
    func.displayName = `PlasmicBlogPosts.${nodeName}`;
  }
  return func;
}

export const PlasmicBlogPosts = Object.assign(
  // Top-level PlasmicBlogPosts renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h2: makeNodeComponent("h2"),

    // Metadata about props expected for PlasmicBlogPosts
    internalVariantProps: PlasmicBlogPosts__VariantProps,
    internalArgProps: PlasmicBlogPosts__ArgProps
  }
);

export default PlasmicBlogPosts;
/* prettier-ignore-end */
